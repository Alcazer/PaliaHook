#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_RadialMenuWheel_Circular

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Palia_structs.hpp"
#include "Engine_structs.hpp"
#include "SlateCore_structs.hpp"
#include "UMG_structs.hpp"


namespace SDK::Params
{

// Function WBP_RadialMenuWheel_Circular.WBP_RadialMenuWheel_Circular_C.ConvertToRadialCoord
// 0x0168 (0x0168 - 0x0000)
struct WBP_RadialMenuWheel_Circular_C_ConvertToRadialCoord final 
{
public:
	struct FGeometry                              Geometry;                                          // 0x0000(0x0040)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor)
	struct FPointerEvent                          PointerEvent;                                      // 0x0040(0x0098)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	double                                        Angle;                                             // 0x00D8(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Distance;                                          // 0x00E0(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_GetLocalSize_ReturnValue;                 // 0x00E8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_PointerEvent_GetScreenSpacePosition_ReturnValue; // 0x00F8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Divide_Vector2DFloat_ReturnValue;         // 0x0108(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_AbsoluteToLocal_ReturnValue;              // 0x0118(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Subtract_Vector2DVector2D_ReturnValue;    // 0x0128(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_ToDirectionAndLength2D_OutDir;            // 0x0138(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_ToDirectionAndLength2D_OutLength;         // 0x0148(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_X;                          // 0x0150(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y;                          // 0x0158(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_DegAtan2_ReturnValue;                     // 0x0160(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_RadialMenuWheel_Circular_C_ConvertToRadialCoord) == 0x000008, "Wrong alignment on WBP_RadialMenuWheel_Circular_C_ConvertToRadialCoord");
static_assert(sizeof(WBP_RadialMenuWheel_Circular_C_ConvertToRadialCoord) == 0x000168, "Wrong size on WBP_RadialMenuWheel_Circular_C_ConvertToRadialCoord");
static_assert(offsetof(WBP_RadialMenuWheel_Circular_C_ConvertToRadialCoord, Geometry) == 0x000000, "Member 'WBP_RadialMenuWheel_Circular_C_ConvertToRadialCoord::Geometry' has a wrong offset!");
static_assert(offsetof(WBP_RadialMenuWheel_Circular_C_ConvertToRadialCoord, PointerEvent) == 0x000040, "Member 'WBP_RadialMenuWheel_Circular_C_ConvertToRadialCoord::PointerEvent' has a wrong offset!");
static_assert(offsetof(WBP_RadialMenuWheel_Circular_C_ConvertToRadialCoord, Angle) == 0x0000D8, "Member 'WBP_RadialMenuWheel_Circular_C_ConvertToRadialCoord::Angle' has a wrong offset!");
static_assert(offsetof(WBP_RadialMenuWheel_Circular_C_ConvertToRadialCoord, Distance) == 0x0000E0, "Member 'WBP_RadialMenuWheel_Circular_C_ConvertToRadialCoord::Distance' has a wrong offset!");
static_assert(offsetof(WBP_RadialMenuWheel_Circular_C_ConvertToRadialCoord, CallFunc_GetLocalSize_ReturnValue) == 0x0000E8, "Member 'WBP_RadialMenuWheel_Circular_C_ConvertToRadialCoord::CallFunc_GetLocalSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_RadialMenuWheel_Circular_C_ConvertToRadialCoord, CallFunc_PointerEvent_GetScreenSpacePosition_ReturnValue) == 0x0000F8, "Member 'WBP_RadialMenuWheel_Circular_C_ConvertToRadialCoord::CallFunc_PointerEvent_GetScreenSpacePosition_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_RadialMenuWheel_Circular_C_ConvertToRadialCoord, CallFunc_Divide_Vector2DFloat_ReturnValue) == 0x000108, "Member 'WBP_RadialMenuWheel_Circular_C_ConvertToRadialCoord::CallFunc_Divide_Vector2DFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_RadialMenuWheel_Circular_C_ConvertToRadialCoord, CallFunc_AbsoluteToLocal_ReturnValue) == 0x000118, "Member 'WBP_RadialMenuWheel_Circular_C_ConvertToRadialCoord::CallFunc_AbsoluteToLocal_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_RadialMenuWheel_Circular_C_ConvertToRadialCoord, CallFunc_Subtract_Vector2DVector2D_ReturnValue) == 0x000128, "Member 'WBP_RadialMenuWheel_Circular_C_ConvertToRadialCoord::CallFunc_Subtract_Vector2DVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_RadialMenuWheel_Circular_C_ConvertToRadialCoord, CallFunc_ToDirectionAndLength2D_OutDir) == 0x000138, "Member 'WBP_RadialMenuWheel_Circular_C_ConvertToRadialCoord::CallFunc_ToDirectionAndLength2D_OutDir' has a wrong offset!");
static_assert(offsetof(WBP_RadialMenuWheel_Circular_C_ConvertToRadialCoord, CallFunc_ToDirectionAndLength2D_OutLength) == 0x000148, "Member 'WBP_RadialMenuWheel_Circular_C_ConvertToRadialCoord::CallFunc_ToDirectionAndLength2D_OutLength' has a wrong offset!");
static_assert(offsetof(WBP_RadialMenuWheel_Circular_C_ConvertToRadialCoord, CallFunc_BreakVector2D_X) == 0x000150, "Member 'WBP_RadialMenuWheel_Circular_C_ConvertToRadialCoord::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(WBP_RadialMenuWheel_Circular_C_ConvertToRadialCoord, CallFunc_BreakVector2D_Y) == 0x000158, "Member 'WBP_RadialMenuWheel_Circular_C_ConvertToRadialCoord::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(WBP_RadialMenuWheel_Circular_C_ConvertToRadialCoord, CallFunc_DegAtan2_ReturnValue) == 0x000160, "Member 'WBP_RadialMenuWheel_Circular_C_ConvertToRadialCoord::CallFunc_DegAtan2_ReturnValue' has a wrong offset!");

// Function WBP_RadialMenuWheel_Circular.WBP_RadialMenuWheel_Circular_C.ExecuteUbergraph_WBP_RadialMenuWheel_Circular
// 0x00D0 (0x00D0 - 0x0000)
struct WBP_RadialMenuWheel_Circular_C_ExecuteUbergraph_WBP_RadialMenuWheel_Circular final 
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_45D0[0x1];                                     // 0x0007(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0008(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_45D1[0x4];                                     // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_SlotIndexToAngle_Angle;                   // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_DegSin_ReturnValue;                       // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_DegCos_ReturnValue;                       // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_45D2[0x3];                                     // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_45D3[0x4];                                     // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UNamedSlot*                             CallFunc_Array_Get_Item;                           // 0x0048(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_45D4[0x4];                                     // 0x0054(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UCanvasPanelSlot*                       CallFunc_SlotAsCanvasSlot_ReturnValue;             // 0x0058(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_IntFloat_ReturnValue;            // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_IntFloat_ReturnValue_1;          // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FMargin                                K2Node_MakeStruct_Margin;                          // 0x0078(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_bRadialSelectionEnabled;        // 0x0089(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_45D5[0x6];                                     // 0x008A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0090(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UValeriaGameInstance*                   K2Node_DynamicCast_AsValeria_Game_Instance;        // 0x0098(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_45D6[0x3];                                     // 0x00A1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_45D7[0x3];                                     // 0x00A9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_3;                 // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x00B0(0x0008)(NoDestructor, HasGetValueTypeHash)
	TArray<class UNamedSlot*>                     K2Node_MakeArray_Array;                            // 0x00B8(0x0010)(ReferenceParm, ContainsInstancedReference)
	float                                         K2Node_MakeStruct_Top_ImplicitCast;                // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_MakeStruct_Left_ImplicitCast;               // 0x00CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_RadialMenuWheel_Circular_C_ExecuteUbergraph_WBP_RadialMenuWheel_Circular) == 0x000008, "Wrong alignment on WBP_RadialMenuWheel_Circular_C_ExecuteUbergraph_WBP_RadialMenuWheel_Circular");
static_assert(sizeof(WBP_RadialMenuWheel_Circular_C_ExecuteUbergraph_WBP_RadialMenuWheel_Circular) == 0x0000D0, "Wrong size on WBP_RadialMenuWheel_Circular_C_ExecuteUbergraph_WBP_RadialMenuWheel_Circular");
static_assert(offsetof(WBP_RadialMenuWheel_Circular_C_ExecuteUbergraph_WBP_RadialMenuWheel_Circular, EntryPoint) == 0x000000, "Member 'WBP_RadialMenuWheel_Circular_C_ExecuteUbergraph_WBP_RadialMenuWheel_Circular::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_RadialMenuWheel_Circular_C_ExecuteUbergraph_WBP_RadialMenuWheel_Circular, Temp_bool_Variable) == 0x000004, "Member 'WBP_RadialMenuWheel_Circular_C_ExecuteUbergraph_WBP_RadialMenuWheel_Circular::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_RadialMenuWheel_Circular_C_ExecuteUbergraph_WBP_RadialMenuWheel_Circular, Temp_byte_Variable) == 0x000005, "Member 'WBP_RadialMenuWheel_Circular_C_ExecuteUbergraph_WBP_RadialMenuWheel_Circular::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_RadialMenuWheel_Circular_C_ExecuteUbergraph_WBP_RadialMenuWheel_Circular, Temp_byte_Variable_1) == 0x000006, "Member 'WBP_RadialMenuWheel_Circular_C_ExecuteUbergraph_WBP_RadialMenuWheel_Circular::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_RadialMenuWheel_Circular_C_ExecuteUbergraph_WBP_RadialMenuWheel_Circular, K2Node_CreateDelegate_OutputDelegate) == 0x000008, "Member 'WBP_RadialMenuWheel_Circular_C_ExecuteUbergraph_WBP_RadialMenuWheel_Circular::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(WBP_RadialMenuWheel_Circular_C_ExecuteUbergraph_WBP_RadialMenuWheel_Circular, Temp_int_Array_Index_Variable) == 0x000018, "Member 'WBP_RadialMenuWheel_Circular_C_ExecuteUbergraph_WBP_RadialMenuWheel_Circular::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WBP_RadialMenuWheel_Circular_C_ExecuteUbergraph_WBP_RadialMenuWheel_Circular, CallFunc_SlotIndexToAngle_Angle) == 0x000020, "Member 'WBP_RadialMenuWheel_Circular_C_ExecuteUbergraph_WBP_RadialMenuWheel_Circular::CallFunc_SlotIndexToAngle_Angle' has a wrong offset!");
static_assert(offsetof(WBP_RadialMenuWheel_Circular_C_ExecuteUbergraph_WBP_RadialMenuWheel_Circular, CallFunc_DegSin_ReturnValue) == 0x000028, "Member 'WBP_RadialMenuWheel_Circular_C_ExecuteUbergraph_WBP_RadialMenuWheel_Circular::CallFunc_DegSin_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_RadialMenuWheel_Circular_C_ExecuteUbergraph_WBP_RadialMenuWheel_Circular, CallFunc_DegCos_ReturnValue) == 0x000030, "Member 'WBP_RadialMenuWheel_Circular_C_ExecuteUbergraph_WBP_RadialMenuWheel_Circular::CallFunc_DegCos_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_RadialMenuWheel_Circular_C_ExecuteUbergraph_WBP_RadialMenuWheel_Circular, K2Node_Event_IsDesignTime) == 0x000038, "Member 'WBP_RadialMenuWheel_Circular_C_ExecuteUbergraph_WBP_RadialMenuWheel_Circular::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(WBP_RadialMenuWheel_Circular_C_ExecuteUbergraph_WBP_RadialMenuWheel_Circular, CallFunc_Add_IntInt_ReturnValue) == 0x00003C, "Member 'WBP_RadialMenuWheel_Circular_C_ExecuteUbergraph_WBP_RadialMenuWheel_Circular::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_RadialMenuWheel_Circular_C_ExecuteUbergraph_WBP_RadialMenuWheel_Circular, CallFunc_Add_IntInt_ReturnValue_1) == 0x000040, "Member 'WBP_RadialMenuWheel_Circular_C_ExecuteUbergraph_WBP_RadialMenuWheel_Circular::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_RadialMenuWheel_Circular_C_ExecuteUbergraph_WBP_RadialMenuWheel_Circular, CallFunc_Array_Get_Item) == 0x000048, "Member 'WBP_RadialMenuWheel_Circular_C_ExecuteUbergraph_WBP_RadialMenuWheel_Circular::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WBP_RadialMenuWheel_Circular_C_ExecuteUbergraph_WBP_RadialMenuWheel_Circular, CallFunc_Add_IntInt_ReturnValue_2) == 0x000050, "Member 'WBP_RadialMenuWheel_Circular_C_ExecuteUbergraph_WBP_RadialMenuWheel_Circular::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_RadialMenuWheel_Circular_C_ExecuteUbergraph_WBP_RadialMenuWheel_Circular, CallFunc_SlotAsCanvasSlot_ReturnValue) == 0x000058, "Member 'WBP_RadialMenuWheel_Circular_C_ExecuteUbergraph_WBP_RadialMenuWheel_Circular::CallFunc_SlotAsCanvasSlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_RadialMenuWheel_Circular_C_ExecuteUbergraph_WBP_RadialMenuWheel_Circular, CallFunc_Conv_IntToFloat_ReturnValue) == 0x000060, "Member 'WBP_RadialMenuWheel_Circular_C_ExecuteUbergraph_WBP_RadialMenuWheel_Circular::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_RadialMenuWheel_Circular_C_ExecuteUbergraph_WBP_RadialMenuWheel_Circular, CallFunc_Array_Length_ReturnValue) == 0x000064, "Member 'WBP_RadialMenuWheel_Circular_C_ExecuteUbergraph_WBP_RadialMenuWheel_Circular::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_RadialMenuWheel_Circular_C_ExecuteUbergraph_WBP_RadialMenuWheel_Circular, CallFunc_Multiply_IntFloat_ReturnValue) == 0x000068, "Member 'WBP_RadialMenuWheel_Circular_C_ExecuteUbergraph_WBP_RadialMenuWheel_Circular::CallFunc_Multiply_IntFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_RadialMenuWheel_Circular_C_ExecuteUbergraph_WBP_RadialMenuWheel_Circular, CallFunc_Multiply_IntFloat_ReturnValue_1) == 0x000070, "Member 'WBP_RadialMenuWheel_Circular_C_ExecuteUbergraph_WBP_RadialMenuWheel_Circular::CallFunc_Multiply_IntFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_RadialMenuWheel_Circular_C_ExecuteUbergraph_WBP_RadialMenuWheel_Circular, K2Node_MakeStruct_Margin) == 0x000078, "Member 'WBP_RadialMenuWheel_Circular_C_ExecuteUbergraph_WBP_RadialMenuWheel_Circular::K2Node_MakeStruct_Margin' has a wrong offset!");
static_assert(offsetof(WBP_RadialMenuWheel_Circular_C_ExecuteUbergraph_WBP_RadialMenuWheel_Circular, K2Node_Select_Default) == 0x000088, "Member 'WBP_RadialMenuWheel_Circular_C_ExecuteUbergraph_WBP_RadialMenuWheel_Circular::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_RadialMenuWheel_Circular_C_ExecuteUbergraph_WBP_RadialMenuWheel_Circular, K2Node_CustomEvent_bRadialSelectionEnabled) == 0x000089, "Member 'WBP_RadialMenuWheel_Circular_C_ExecuteUbergraph_WBP_RadialMenuWheel_Circular::K2Node_CustomEvent_bRadialSelectionEnabled' has a wrong offset!");
static_assert(offsetof(WBP_RadialMenuWheel_Circular_C_ExecuteUbergraph_WBP_RadialMenuWheel_Circular, CallFunc_GetGameInstance_ReturnValue) == 0x000090, "Member 'WBP_RadialMenuWheel_Circular_C_ExecuteUbergraph_WBP_RadialMenuWheel_Circular::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_RadialMenuWheel_Circular_C_ExecuteUbergraph_WBP_RadialMenuWheel_Circular, K2Node_DynamicCast_AsValeria_Game_Instance) == 0x000098, "Member 'WBP_RadialMenuWheel_Circular_C_ExecuteUbergraph_WBP_RadialMenuWheel_Circular::K2Node_DynamicCast_AsValeria_Game_Instance' has a wrong offset!");
static_assert(offsetof(WBP_RadialMenuWheel_Circular_C_ExecuteUbergraph_WBP_RadialMenuWheel_Circular, K2Node_DynamicCast_bSuccess) == 0x0000A0, "Member 'WBP_RadialMenuWheel_Circular_C_ExecuteUbergraph_WBP_RadialMenuWheel_Circular::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WBP_RadialMenuWheel_Circular_C_ExecuteUbergraph_WBP_RadialMenuWheel_Circular, Temp_int_Loop_Counter_Variable) == 0x0000A4, "Member 'WBP_RadialMenuWheel_Circular_C_ExecuteUbergraph_WBP_RadialMenuWheel_Circular::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WBP_RadialMenuWheel_Circular_C_ExecuteUbergraph_WBP_RadialMenuWheel_Circular, CallFunc_Less_IntInt_ReturnValue) == 0x0000A8, "Member 'WBP_RadialMenuWheel_Circular_C_ExecuteUbergraph_WBP_RadialMenuWheel_Circular::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_RadialMenuWheel_Circular_C_ExecuteUbergraph_WBP_RadialMenuWheel_Circular, CallFunc_Add_IntInt_ReturnValue_3) == 0x0000AC, "Member 'WBP_RadialMenuWheel_Circular_C_ExecuteUbergraph_WBP_RadialMenuWheel_Circular::CallFunc_Add_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WBP_RadialMenuWheel_Circular_C_ExecuteUbergraph_WBP_RadialMenuWheel_Circular, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x0000B0, "Member 'WBP_RadialMenuWheel_Circular_C_ExecuteUbergraph_WBP_RadialMenuWheel_Circular::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_RadialMenuWheel_Circular_C_ExecuteUbergraph_WBP_RadialMenuWheel_Circular, K2Node_MakeArray_Array) == 0x0000B8, "Member 'WBP_RadialMenuWheel_Circular_C_ExecuteUbergraph_WBP_RadialMenuWheel_Circular::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(WBP_RadialMenuWheel_Circular_C_ExecuteUbergraph_WBP_RadialMenuWheel_Circular, K2Node_MakeStruct_Top_ImplicitCast) == 0x0000C8, "Member 'WBP_RadialMenuWheel_Circular_C_ExecuteUbergraph_WBP_RadialMenuWheel_Circular::K2Node_MakeStruct_Top_ImplicitCast' has a wrong offset!");
static_assert(offsetof(WBP_RadialMenuWheel_Circular_C_ExecuteUbergraph_WBP_RadialMenuWheel_Circular, K2Node_MakeStruct_Left_ImplicitCast) == 0x0000CC, "Member 'WBP_RadialMenuWheel_Circular_C_ExecuteUbergraph_WBP_RadialMenuWheel_Circular::K2Node_MakeStruct_Left_ImplicitCast' has a wrong offset!");

// Function WBP_RadialMenuWheel_Circular.WBP_RadialMenuWheel_Circular_C.Find Slot At Angle On Console
// 0x01C8 (0x01C8 - 0x0000)
struct WBP_RadialMenuWheel_Circular_C_Find_Slot_At_Angle_On_Console final 
{
public:
	double                                        Angle;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UNamedSlot*                             Param_Slot;                                        // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	double                                        RangeOfValidity;                                   // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UNamedSlot*                             MinDistanceSlot;                                   // 0x0018(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TArray<class UNamedSlot*>                     SameDirectionSlots;                                // 0x0020(0x0010)(Edit, BlueprintVisible, ContainsInstancedReference)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SlotIndexToAngle_Angle;                   // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCanvasPanelSlot*                       CallFunc_SlotAsCanvasSlot_ReturnValue;             // 0x0040(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_GetPosition_ReturnValue;                  // 0x0048(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ObjectObject_ReturnValue;        // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_45D8[0x7];                                     // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UCanvasPanelSlot*                       CallFunc_SlotAsCanvasSlot_ReturnValue_1;           // 0x0060(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UCanvasPanelSlot*                       CallFunc_SlotAsCanvasSlot_ReturnValue_2;           // 0x0068(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_GetPosition_ReturnValue_1;                // 0x0070(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_GetPosition_ReturnValue_2;                // 0x0080(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Subtract_Vector2DVector2D_ReturnValue;    // 0x0090(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_45D9[0x4];                                     // 0x00A4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CallFunc_Normal2D_ReturnValue;                     // 0x00A8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_45DA[0x4];                                     // 0x00BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UCanvasPanelSlot*                       CallFunc_SlotAsCanvasSlot_ReturnValue_3;           // 0x00C0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_GetPosition_ReturnValue_3;                // 0x00C8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Subtract_Vector2DVector2D_ReturnValue_1;  // 0x00D8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_VSize2D_ReturnValue;                      // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x00F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_45DB[0x4];                                     // 0x00F4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_DegCos_ReturnValue;                       // 0x00F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_DegSin_ReturnValue;                       // 0x0100(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0108(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_45DC[0x4];                                     // 0x010C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x0110(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Normal2D_ReturnValue_1;                   // 0x0120(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_DotProduct2D_ReturnValue;                 // 0x0130(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_DoubleDouble_ReturnValue;    // 0x0138(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0139(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_45DD[0x6];                                     // 0x013A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UNamedSlot*                             CallFunc_Array_Get_Item;                           // 0x0140(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsEmpty_ReturnValue;                // 0x0148(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0149(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_45DE[0x6];                                     // 0x014A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UNamedSlot*                             CallFunc_Array_Get_Item_1;                         // 0x0150(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UCanvasPanelSlot*                       CallFunc_SlotAsCanvasSlot_ReturnValue_4;           // 0x0158(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_GetPosition_ReturnValue_4;                // 0x0160(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0170(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_45DF[0x4];                                     // 0x0174(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CallFunc_Subtract_Vector2DVector2D_ReturnValue_2;  // 0x0178(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0188(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_45E0[0x7];                                     // 0x0189(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_VSize2D_ReturnValue_1;                    // 0x0190(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue;            // 0x0198(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0199(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_45E1[0x2];                                     // 0x019A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x019C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x01A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_45E2[0x7];                                     // 0x01A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_MathExpression_ReturnValue;                 // 0x01A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Select_Default;                             // 0x01B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_DoubleDouble_ReturnValue;       // 0x01B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_45E3[0x2];                                     // 0x01B2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x01B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UNamedSlot*                             CallFunc_Array_Get_Item_2;                         // 0x01B8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x01C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_45E4[0x3];                                     // 0x01C1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x01C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_RadialMenuWheel_Circular_C_Find_Slot_At_Angle_On_Console) == 0x000008, "Wrong alignment on WBP_RadialMenuWheel_Circular_C_Find_Slot_At_Angle_On_Console");
static_assert(sizeof(WBP_RadialMenuWheel_Circular_C_Find_Slot_At_Angle_On_Console) == 0x0001C8, "Wrong size on WBP_RadialMenuWheel_Circular_C_Find_Slot_At_Angle_On_Console");
static_assert(offsetof(WBP_RadialMenuWheel_Circular_C_Find_Slot_At_Angle_On_Console, Angle) == 0x000000, "Member 'WBP_RadialMenuWheel_Circular_C_Find_Slot_At_Angle_On_Console::Angle' has a wrong offset!");
static_assert(offsetof(WBP_RadialMenuWheel_Circular_C_Find_Slot_At_Angle_On_Console, Param_Slot) == 0x000008, "Member 'WBP_RadialMenuWheel_Circular_C_Find_Slot_At_Angle_On_Console::Param_Slot' has a wrong offset!");
static_assert(offsetof(WBP_RadialMenuWheel_Circular_C_Find_Slot_At_Angle_On_Console, RangeOfValidity) == 0x000010, "Member 'WBP_RadialMenuWheel_Circular_C_Find_Slot_At_Angle_On_Console::RangeOfValidity' has a wrong offset!");
static_assert(offsetof(WBP_RadialMenuWheel_Circular_C_Find_Slot_At_Angle_On_Console, MinDistanceSlot) == 0x000018, "Member 'WBP_RadialMenuWheel_Circular_C_Find_Slot_At_Angle_On_Console::MinDistanceSlot' has a wrong offset!");
static_assert(offsetof(WBP_RadialMenuWheel_Circular_C_Find_Slot_At_Angle_On_Console, SameDirectionSlots) == 0x000020, "Member 'WBP_RadialMenuWheel_Circular_C_Find_Slot_At_Angle_On_Console::SameDirectionSlots' has a wrong offset!");
static_assert(offsetof(WBP_RadialMenuWheel_Circular_C_Find_Slot_At_Angle_On_Console, Temp_int_Array_Index_Variable) == 0x000030, "Member 'WBP_RadialMenuWheel_Circular_C_Find_Slot_At_Angle_On_Console::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WBP_RadialMenuWheel_Circular_C_Find_Slot_At_Angle_On_Console, Temp_int_Array_Index_Variable_1) == 0x000034, "Member 'WBP_RadialMenuWheel_Circular_C_Find_Slot_At_Angle_On_Console::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_RadialMenuWheel_Circular_C_Find_Slot_At_Angle_On_Console, CallFunc_SlotIndexToAngle_Angle) == 0x000038, "Member 'WBP_RadialMenuWheel_Circular_C_Find_Slot_At_Angle_On_Console::CallFunc_SlotIndexToAngle_Angle' has a wrong offset!");
static_assert(offsetof(WBP_RadialMenuWheel_Circular_C_Find_Slot_At_Angle_On_Console, CallFunc_SlotAsCanvasSlot_ReturnValue) == 0x000040, "Member 'WBP_RadialMenuWheel_Circular_C_Find_Slot_At_Angle_On_Console::CallFunc_SlotAsCanvasSlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_RadialMenuWheel_Circular_C_Find_Slot_At_Angle_On_Console, CallFunc_GetPosition_ReturnValue) == 0x000048, "Member 'WBP_RadialMenuWheel_Circular_C_Find_Slot_At_Angle_On_Console::CallFunc_GetPosition_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_RadialMenuWheel_Circular_C_Find_Slot_At_Angle_On_Console, CallFunc_NotEqual_ObjectObject_ReturnValue) == 0x000058, "Member 'WBP_RadialMenuWheel_Circular_C_Find_Slot_At_Angle_On_Console::CallFunc_NotEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_RadialMenuWheel_Circular_C_Find_Slot_At_Angle_On_Console, CallFunc_SlotAsCanvasSlot_ReturnValue_1) == 0x000060, "Member 'WBP_RadialMenuWheel_Circular_C_Find_Slot_At_Angle_On_Console::CallFunc_SlotAsCanvasSlot_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_RadialMenuWheel_Circular_C_Find_Slot_At_Angle_On_Console, CallFunc_SlotAsCanvasSlot_ReturnValue_2) == 0x000068, "Member 'WBP_RadialMenuWheel_Circular_C_Find_Slot_At_Angle_On_Console::CallFunc_SlotAsCanvasSlot_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_RadialMenuWheel_Circular_C_Find_Slot_At_Angle_On_Console, CallFunc_GetPosition_ReturnValue_1) == 0x000070, "Member 'WBP_RadialMenuWheel_Circular_C_Find_Slot_At_Angle_On_Console::CallFunc_GetPosition_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_RadialMenuWheel_Circular_C_Find_Slot_At_Angle_On_Console, CallFunc_GetPosition_ReturnValue_2) == 0x000080, "Member 'WBP_RadialMenuWheel_Circular_C_Find_Slot_At_Angle_On_Console::CallFunc_GetPosition_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_RadialMenuWheel_Circular_C_Find_Slot_At_Angle_On_Console, CallFunc_Subtract_Vector2DVector2D_ReturnValue) == 0x000090, "Member 'WBP_RadialMenuWheel_Circular_C_Find_Slot_At_Angle_On_Console::CallFunc_Subtract_Vector2DVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_RadialMenuWheel_Circular_C_Find_Slot_At_Angle_On_Console, Temp_int_Loop_Counter_Variable) == 0x0000A0, "Member 'WBP_RadialMenuWheel_Circular_C_Find_Slot_At_Angle_On_Console::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WBP_RadialMenuWheel_Circular_C_Find_Slot_At_Angle_On_Console, CallFunc_Normal2D_ReturnValue) == 0x0000A8, "Member 'WBP_RadialMenuWheel_Circular_C_Find_Slot_At_Angle_On_Console::CallFunc_Normal2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_RadialMenuWheel_Circular_C_Find_Slot_At_Angle_On_Console, CallFunc_Add_IntInt_ReturnValue) == 0x0000B8, "Member 'WBP_RadialMenuWheel_Circular_C_Find_Slot_At_Angle_On_Console::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_RadialMenuWheel_Circular_C_Find_Slot_At_Angle_On_Console, CallFunc_SlotAsCanvasSlot_ReturnValue_3) == 0x0000C0, "Member 'WBP_RadialMenuWheel_Circular_C_Find_Slot_At_Angle_On_Console::CallFunc_SlotAsCanvasSlot_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WBP_RadialMenuWheel_Circular_C_Find_Slot_At_Angle_On_Console, CallFunc_GetPosition_ReturnValue_3) == 0x0000C8, "Member 'WBP_RadialMenuWheel_Circular_C_Find_Slot_At_Angle_On_Console::CallFunc_GetPosition_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WBP_RadialMenuWheel_Circular_C_Find_Slot_At_Angle_On_Console, CallFunc_Subtract_Vector2DVector2D_ReturnValue_1) == 0x0000D8, "Member 'WBP_RadialMenuWheel_Circular_C_Find_Slot_At_Angle_On_Console::CallFunc_Subtract_Vector2DVector2D_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_RadialMenuWheel_Circular_C_Find_Slot_At_Angle_On_Console, CallFunc_VSize2D_ReturnValue) == 0x0000E8, "Member 'WBP_RadialMenuWheel_Circular_C_Find_Slot_At_Angle_On_Console::CallFunc_VSize2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_RadialMenuWheel_Circular_C_Find_Slot_At_Angle_On_Console, Temp_int_Loop_Counter_Variable_1) == 0x0000F0, "Member 'WBP_RadialMenuWheel_Circular_C_Find_Slot_At_Angle_On_Console::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_RadialMenuWheel_Circular_C_Find_Slot_At_Angle_On_Console, CallFunc_DegCos_ReturnValue) == 0x0000F8, "Member 'WBP_RadialMenuWheel_Circular_C_Find_Slot_At_Angle_On_Console::CallFunc_DegCos_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_RadialMenuWheel_Circular_C_Find_Slot_At_Angle_On_Console, CallFunc_DegSin_ReturnValue) == 0x000100, "Member 'WBP_RadialMenuWheel_Circular_C_Find_Slot_At_Angle_On_Console::CallFunc_DegSin_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_RadialMenuWheel_Circular_C_Find_Slot_At_Angle_On_Console, CallFunc_Add_IntInt_ReturnValue_1) == 0x000108, "Member 'WBP_RadialMenuWheel_Circular_C_Find_Slot_At_Angle_On_Console::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_RadialMenuWheel_Circular_C_Find_Slot_At_Angle_On_Console, CallFunc_MakeVector2D_ReturnValue) == 0x000110, "Member 'WBP_RadialMenuWheel_Circular_C_Find_Slot_At_Angle_On_Console::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_RadialMenuWheel_Circular_C_Find_Slot_At_Angle_On_Console, CallFunc_Normal2D_ReturnValue_1) == 0x000120, "Member 'WBP_RadialMenuWheel_Circular_C_Find_Slot_At_Angle_On_Console::CallFunc_Normal2D_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_RadialMenuWheel_Circular_C_Find_Slot_At_Angle_On_Console, CallFunc_DotProduct2D_ReturnValue) == 0x000130, "Member 'WBP_RadialMenuWheel_Circular_C_Find_Slot_At_Angle_On_Console::CallFunc_DotProduct2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_RadialMenuWheel_Circular_C_Find_Slot_At_Angle_On_Console, CallFunc_GreaterEqual_DoubleDouble_ReturnValue) == 0x000138, "Member 'WBP_RadialMenuWheel_Circular_C_Find_Slot_At_Angle_On_Console::CallFunc_GreaterEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_RadialMenuWheel_Circular_C_Find_Slot_At_Angle_On_Console, CallFunc_IsValid_ReturnValue) == 0x000139, "Member 'WBP_RadialMenuWheel_Circular_C_Find_Slot_At_Angle_On_Console::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_RadialMenuWheel_Circular_C_Find_Slot_At_Angle_On_Console, CallFunc_Array_Get_Item) == 0x000140, "Member 'WBP_RadialMenuWheel_Circular_C_Find_Slot_At_Angle_On_Console::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WBP_RadialMenuWheel_Circular_C_Find_Slot_At_Angle_On_Console, CallFunc_Array_IsEmpty_ReturnValue) == 0x000148, "Member 'WBP_RadialMenuWheel_Circular_C_Find_Slot_At_Angle_On_Console::CallFunc_Array_IsEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_RadialMenuWheel_Circular_C_Find_Slot_At_Angle_On_Console, CallFunc_Not_PreBool_ReturnValue) == 0x000149, "Member 'WBP_RadialMenuWheel_Circular_C_Find_Slot_At_Angle_On_Console::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_RadialMenuWheel_Circular_C_Find_Slot_At_Angle_On_Console, CallFunc_Array_Get_Item_1) == 0x000150, "Member 'WBP_RadialMenuWheel_Circular_C_Find_Slot_At_Angle_On_Console::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(WBP_RadialMenuWheel_Circular_C_Find_Slot_At_Angle_On_Console, CallFunc_SlotAsCanvasSlot_ReturnValue_4) == 0x000158, "Member 'WBP_RadialMenuWheel_Circular_C_Find_Slot_At_Angle_On_Console::CallFunc_SlotAsCanvasSlot_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(WBP_RadialMenuWheel_Circular_C_Find_Slot_At_Angle_On_Console, CallFunc_GetPosition_ReturnValue_4) == 0x000160, "Member 'WBP_RadialMenuWheel_Circular_C_Find_Slot_At_Angle_On_Console::CallFunc_GetPosition_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(WBP_RadialMenuWheel_Circular_C_Find_Slot_At_Angle_On_Console, CallFunc_Array_Length_ReturnValue) == 0x000170, "Member 'WBP_RadialMenuWheel_Circular_C_Find_Slot_At_Angle_On_Console::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_RadialMenuWheel_Circular_C_Find_Slot_At_Angle_On_Console, CallFunc_Subtract_Vector2DVector2D_ReturnValue_2) == 0x000178, "Member 'WBP_RadialMenuWheel_Circular_C_Find_Slot_At_Angle_On_Console::CallFunc_Subtract_Vector2DVector2D_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_RadialMenuWheel_Circular_C_Find_Slot_At_Angle_On_Console, CallFunc_Less_IntInt_ReturnValue) == 0x000188, "Member 'WBP_RadialMenuWheel_Circular_C_Find_Slot_At_Angle_On_Console::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_RadialMenuWheel_Circular_C_Find_Slot_At_Angle_On_Console, CallFunc_VSize2D_ReturnValue_1) == 0x000190, "Member 'WBP_RadialMenuWheel_Circular_C_Find_Slot_At_Angle_On_Console::CallFunc_VSize2D_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_RadialMenuWheel_Circular_C_Find_Slot_At_Angle_On_Console, CallFunc_Less_DoubleDouble_ReturnValue) == 0x000198, "Member 'WBP_RadialMenuWheel_Circular_C_Find_Slot_At_Angle_On_Console::CallFunc_Less_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_RadialMenuWheel_Circular_C_Find_Slot_At_Angle_On_Console, Temp_bool_Variable) == 0x000199, "Member 'WBP_RadialMenuWheel_Circular_C_Find_Slot_At_Angle_On_Console::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_RadialMenuWheel_Circular_C_Find_Slot_At_Angle_On_Console, CallFunc_Array_Add_ReturnValue) == 0x00019C, "Member 'WBP_RadialMenuWheel_Circular_C_Find_Slot_At_Angle_On_Console::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_RadialMenuWheel_Circular_C_Find_Slot_At_Angle_On_Console, Temp_bool_Variable_1) == 0x0001A0, "Member 'WBP_RadialMenuWheel_Circular_C_Find_Slot_At_Angle_On_Console::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_RadialMenuWheel_Circular_C_Find_Slot_At_Angle_On_Console, K2Node_MathExpression_ReturnValue) == 0x0001A8, "Member 'WBP_RadialMenuWheel_Circular_C_Find_Slot_At_Angle_On_Console::K2Node_MathExpression_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_RadialMenuWheel_Circular_C_Find_Slot_At_Angle_On_Console, K2Node_Select_Default) == 0x0001B0, "Member 'WBP_RadialMenuWheel_Circular_C_Find_Slot_At_Angle_On_Console::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_RadialMenuWheel_Circular_C_Find_Slot_At_Angle_On_Console, CallFunc_LessEqual_DoubleDouble_ReturnValue) == 0x0001B1, "Member 'WBP_RadialMenuWheel_Circular_C_Find_Slot_At_Angle_On_Console::CallFunc_LessEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_RadialMenuWheel_Circular_C_Find_Slot_At_Angle_On_Console, CallFunc_Array_Length_ReturnValue_1) == 0x0001B4, "Member 'WBP_RadialMenuWheel_Circular_C_Find_Slot_At_Angle_On_Console::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_RadialMenuWheel_Circular_C_Find_Slot_At_Angle_On_Console, CallFunc_Array_Get_Item_2) == 0x0001B8, "Member 'WBP_RadialMenuWheel_Circular_C_Find_Slot_At_Angle_On_Console::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(WBP_RadialMenuWheel_Circular_C_Find_Slot_At_Angle_On_Console, CallFunc_Less_IntInt_ReturnValue_1) == 0x0001C0, "Member 'WBP_RadialMenuWheel_Circular_C_Find_Slot_At_Angle_On_Console::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_RadialMenuWheel_Circular_C_Find_Slot_At_Angle_On_Console, CallFunc_Array_Add_ReturnValue_1) == 0x0001C4, "Member 'WBP_RadialMenuWheel_Circular_C_Find_Slot_At_Angle_On_Console::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");

// Function WBP_RadialMenuWheel_Circular.WBP_RadialMenuWheel_Circular_C.FindSlotAtAngle
// 0x0060 (0x0060 - 0x0000)
struct WBP_RadialMenuWheel_Circular_C_FindSlotAtAngle final 
{
public:
	double                                        Angle;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Distance;                                          // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UNamedSlot*                             Param_Slot;                                        // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SlotIndexToAngle_Angle;                   // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_45E5[0x4];                                     // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_MathExpression_ReturnValue;                 // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UNamedSlot*                             CallFunc_Array_Get_Item;                           // 0x0038(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_DoubleDouble_ReturnValue;       // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_45E6[0x3];                                     // 0x0041(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_45E7[0x3];                                     // 0x0049(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_DoubleDouble_ReturnValue_1;     // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_45E8[0x7];                                     // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_LessEqual_DoubleDouble_B_ImplicitCast;    // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_RadialMenuWheel_Circular_C_FindSlotAtAngle) == 0x000008, "Wrong alignment on WBP_RadialMenuWheel_Circular_C_FindSlotAtAngle");
static_assert(sizeof(WBP_RadialMenuWheel_Circular_C_FindSlotAtAngle) == 0x000060, "Wrong size on WBP_RadialMenuWheel_Circular_C_FindSlotAtAngle");
static_assert(offsetof(WBP_RadialMenuWheel_Circular_C_FindSlotAtAngle, Angle) == 0x000000, "Member 'WBP_RadialMenuWheel_Circular_C_FindSlotAtAngle::Angle' has a wrong offset!");
static_assert(offsetof(WBP_RadialMenuWheel_Circular_C_FindSlotAtAngle, Distance) == 0x000008, "Member 'WBP_RadialMenuWheel_Circular_C_FindSlotAtAngle::Distance' has a wrong offset!");
static_assert(offsetof(WBP_RadialMenuWheel_Circular_C_FindSlotAtAngle, Param_Slot) == 0x000010, "Member 'WBP_RadialMenuWheel_Circular_C_FindSlotAtAngle::Param_Slot' has a wrong offset!");
static_assert(offsetof(WBP_RadialMenuWheel_Circular_C_FindSlotAtAngle, Temp_int_Array_Index_Variable) == 0x000018, "Member 'WBP_RadialMenuWheel_Circular_C_FindSlotAtAngle::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WBP_RadialMenuWheel_Circular_C_FindSlotAtAngle, Temp_int_Loop_Counter_Variable) == 0x00001C, "Member 'WBP_RadialMenuWheel_Circular_C_FindSlotAtAngle::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WBP_RadialMenuWheel_Circular_C_FindSlotAtAngle, CallFunc_SlotIndexToAngle_Angle) == 0x000020, "Member 'WBP_RadialMenuWheel_Circular_C_FindSlotAtAngle::CallFunc_SlotIndexToAngle_Angle' has a wrong offset!");
static_assert(offsetof(WBP_RadialMenuWheel_Circular_C_FindSlotAtAngle, CallFunc_Add_IntInt_ReturnValue) == 0x000028, "Member 'WBP_RadialMenuWheel_Circular_C_FindSlotAtAngle::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_RadialMenuWheel_Circular_C_FindSlotAtAngle, K2Node_MathExpression_ReturnValue) == 0x000030, "Member 'WBP_RadialMenuWheel_Circular_C_FindSlotAtAngle::K2Node_MathExpression_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_RadialMenuWheel_Circular_C_FindSlotAtAngle, CallFunc_Array_Get_Item) == 0x000038, "Member 'WBP_RadialMenuWheel_Circular_C_FindSlotAtAngle::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WBP_RadialMenuWheel_Circular_C_FindSlotAtAngle, CallFunc_LessEqual_DoubleDouble_ReturnValue) == 0x000040, "Member 'WBP_RadialMenuWheel_Circular_C_FindSlotAtAngle::CallFunc_LessEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_RadialMenuWheel_Circular_C_FindSlotAtAngle, CallFunc_Array_Length_ReturnValue) == 0x000044, "Member 'WBP_RadialMenuWheel_Circular_C_FindSlotAtAngle::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_RadialMenuWheel_Circular_C_FindSlotAtAngle, CallFunc_Less_IntInt_ReturnValue) == 0x000048, "Member 'WBP_RadialMenuWheel_Circular_C_FindSlotAtAngle::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_RadialMenuWheel_Circular_C_FindSlotAtAngle, CallFunc_Conv_IntToFloat_ReturnValue) == 0x00004C, "Member 'WBP_RadialMenuWheel_Circular_C_FindSlotAtAngle::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_RadialMenuWheel_Circular_C_FindSlotAtAngle, CallFunc_LessEqual_DoubleDouble_ReturnValue_1) == 0x000050, "Member 'WBP_RadialMenuWheel_Circular_C_FindSlotAtAngle::CallFunc_LessEqual_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_RadialMenuWheel_Circular_C_FindSlotAtAngle, CallFunc_LessEqual_DoubleDouble_B_ImplicitCast) == 0x000058, "Member 'WBP_RadialMenuWheel_Circular_C_FindSlotAtAngle::CallFunc_LessEqual_DoubleDouble_B_ImplicitCast' has a wrong offset!");

// Function WBP_RadialMenuWheel_Circular.WBP_RadialMenuWheel_Circular_C.FinishSelecting
// 0x0040 (0x0040 - 0x0000)
struct WBP_RadialMenuWheel_Circular_C_FinishSelecting final 
{
public:
	class UWidget*                                SelectedWidget;                                    // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          SelectionCancelled;                                // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_45E9[0x7];                                     // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                Result;                                            // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_45EA[0x7];                                     // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                CallFunc_GetContent_ReturnValue;                   // 0x0020(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationReverse_ReturnValue;         // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UWidget*                                CallFunc_GetContent_ReturnValue_1;                 // 0x0030(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_RadialMenuWheel_Circular_C_FinishSelecting) == 0x000008, "Wrong alignment on WBP_RadialMenuWheel_Circular_C_FinishSelecting");
static_assert(sizeof(WBP_RadialMenuWheel_Circular_C_FinishSelecting) == 0x000040, "Wrong size on WBP_RadialMenuWheel_Circular_C_FinishSelecting");
static_assert(offsetof(WBP_RadialMenuWheel_Circular_C_FinishSelecting, SelectedWidget) == 0x000000, "Member 'WBP_RadialMenuWheel_Circular_C_FinishSelecting::SelectedWidget' has a wrong offset!");
static_assert(offsetof(WBP_RadialMenuWheel_Circular_C_FinishSelecting, SelectionCancelled) == 0x000008, "Member 'WBP_RadialMenuWheel_Circular_C_FinishSelecting::SelectionCancelled' has a wrong offset!");
static_assert(offsetof(WBP_RadialMenuWheel_Circular_C_FinishSelecting, Result) == 0x000010, "Member 'WBP_RadialMenuWheel_Circular_C_FinishSelecting::Result' has a wrong offset!");
static_assert(offsetof(WBP_RadialMenuWheel_Circular_C_FinishSelecting, CallFunc_IsValid_ReturnValue) == 0x000018, "Member 'WBP_RadialMenuWheel_Circular_C_FinishSelecting::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_RadialMenuWheel_Circular_C_FinishSelecting, CallFunc_GetContent_ReturnValue) == 0x000020, "Member 'WBP_RadialMenuWheel_Circular_C_FinishSelecting::CallFunc_GetContent_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_RadialMenuWheel_Circular_C_FinishSelecting, CallFunc_PlayAnimationReverse_ReturnValue) == 0x000028, "Member 'WBP_RadialMenuWheel_Circular_C_FinishSelecting::CallFunc_PlayAnimationReverse_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_RadialMenuWheel_Circular_C_FinishSelecting, CallFunc_GetContent_ReturnValue_1) == 0x000030, "Member 'WBP_RadialMenuWheel_Circular_C_FinishSelecting::CallFunc_GetContent_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_RadialMenuWheel_Circular_C_FinishSelecting, CallFunc_IsValid_ReturnValue_1) == 0x000038, "Member 'WBP_RadialMenuWheel_Circular_C_FinishSelecting::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");

// Function WBP_RadialMenuWheel_Circular.WBP_RadialMenuWheel_Circular_C.GetAllSlotWidgets
// 0x0068 (0x0068 - 0x0000)
struct WBP_RadialMenuWheel_Circular_C_GetAllSlotWidgets final 
{
public:
	TArray<class UWidget*>                        Widgets;                                           // 0x0000(0x0010)(Parm, OutParm, ContainsInstancedReference)
	TArray<class UWidget*>                        Result;                                            // 0x0010(0x0010)(Edit, BlueprintVisible, ContainsInstancedReference)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_45EB[0x4];                                     // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                CallFunc_GetContent_ReturnValue;                   // 0x0028(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_45EC[0x3];                                     // 0x0035(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_45ED[0x4];                                     // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UNamedSlot*                             CallFunc_Array_Get_Item;                           // 0x0048(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_45EE[0x7];                                     // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                CallFunc_GetContent_ReturnValue_1;                 // 0x0058(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0064(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_RadialMenuWheel_Circular_C_GetAllSlotWidgets) == 0x000008, "Wrong alignment on WBP_RadialMenuWheel_Circular_C_GetAllSlotWidgets");
static_assert(sizeof(WBP_RadialMenuWheel_Circular_C_GetAllSlotWidgets) == 0x000068, "Wrong size on WBP_RadialMenuWheel_Circular_C_GetAllSlotWidgets");
static_assert(offsetof(WBP_RadialMenuWheel_Circular_C_GetAllSlotWidgets, Widgets) == 0x000000, "Member 'WBP_RadialMenuWheel_Circular_C_GetAllSlotWidgets::Widgets' has a wrong offset!");
static_assert(offsetof(WBP_RadialMenuWheel_Circular_C_GetAllSlotWidgets, Result) == 0x000010, "Member 'WBP_RadialMenuWheel_Circular_C_GetAllSlotWidgets::Result' has a wrong offset!");
static_assert(offsetof(WBP_RadialMenuWheel_Circular_C_GetAllSlotWidgets, Temp_int_Array_Index_Variable) == 0x000020, "Member 'WBP_RadialMenuWheel_Circular_C_GetAllSlotWidgets::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WBP_RadialMenuWheel_Circular_C_GetAllSlotWidgets, CallFunc_GetContent_ReturnValue) == 0x000028, "Member 'WBP_RadialMenuWheel_Circular_C_GetAllSlotWidgets::CallFunc_GetContent_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_RadialMenuWheel_Circular_C_GetAllSlotWidgets, Temp_int_Loop_Counter_Variable) == 0x000030, "Member 'WBP_RadialMenuWheel_Circular_C_GetAllSlotWidgets::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WBP_RadialMenuWheel_Circular_C_GetAllSlotWidgets, CallFunc_IsValid_ReturnValue) == 0x000034, "Member 'WBP_RadialMenuWheel_Circular_C_GetAllSlotWidgets::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_RadialMenuWheel_Circular_C_GetAllSlotWidgets, CallFunc_Add_IntInt_ReturnValue) == 0x000038, "Member 'WBP_RadialMenuWheel_Circular_C_GetAllSlotWidgets::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_RadialMenuWheel_Circular_C_GetAllSlotWidgets, CallFunc_Array_Add_ReturnValue) == 0x00003C, "Member 'WBP_RadialMenuWheel_Circular_C_GetAllSlotWidgets::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_RadialMenuWheel_Circular_C_GetAllSlotWidgets, CallFunc_Array_Length_ReturnValue) == 0x000040, "Member 'WBP_RadialMenuWheel_Circular_C_GetAllSlotWidgets::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_RadialMenuWheel_Circular_C_GetAllSlotWidgets, CallFunc_Array_Get_Item) == 0x000048, "Member 'WBP_RadialMenuWheel_Circular_C_GetAllSlotWidgets::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WBP_RadialMenuWheel_Circular_C_GetAllSlotWidgets, CallFunc_Less_IntInt_ReturnValue) == 0x000050, "Member 'WBP_RadialMenuWheel_Circular_C_GetAllSlotWidgets::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_RadialMenuWheel_Circular_C_GetAllSlotWidgets, CallFunc_GetContent_ReturnValue_1) == 0x000058, "Member 'WBP_RadialMenuWheel_Circular_C_GetAllSlotWidgets::CallFunc_GetContent_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_RadialMenuWheel_Circular_C_GetAllSlotWidgets, CallFunc_Array_Add_ReturnValue_1) == 0x000060, "Member 'WBP_RadialMenuWheel_Circular_C_GetAllSlotWidgets::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_RadialMenuWheel_Circular_C_GetAllSlotWidgets, CallFunc_IsValid_ReturnValue_1) == 0x000064, "Member 'WBP_RadialMenuWheel_Circular_C_GetAllSlotWidgets::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");

// Function WBP_RadialMenuWheel_Circular.WBP_RadialMenuWheel_Circular_C.GetInputActionHandlingComponent
// 0x0008 (0x0008 - 0x0000)
struct WBP_RadialMenuWheel_Circular_C_GetInputActionHandlingComponent final 
{
public:
	class US6UI_InputActionHandlingWidgetComponent* ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_RadialMenuWheel_Circular_C_GetInputActionHandlingComponent) == 0x000008, "Wrong alignment on WBP_RadialMenuWheel_Circular_C_GetInputActionHandlingComponent");
static_assert(sizeof(WBP_RadialMenuWheel_Circular_C_GetInputActionHandlingComponent) == 0x000008, "Wrong size on WBP_RadialMenuWheel_Circular_C_GetInputActionHandlingComponent");
static_assert(offsetof(WBP_RadialMenuWheel_Circular_C_GetInputActionHandlingComponent, ReturnValue) == 0x000000, "Member 'WBP_RadialMenuWheel_Circular_C_GetInputActionHandlingComponent::ReturnValue' has a wrong offset!");

// Function WBP_RadialMenuWheel_Circular.WBP_RadialMenuWheel_Circular_C.OnChoiceHovered__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct WBP_RadialMenuWheel_Circular_C_OnChoiceHovered__DelegateSignature final 
{
public:
	class UWidget*                                Widget;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_RadialMenuWheel_Circular_C_OnChoiceHovered__DelegateSignature) == 0x000008, "Wrong alignment on WBP_RadialMenuWheel_Circular_C_OnChoiceHovered__DelegateSignature");
static_assert(sizeof(WBP_RadialMenuWheel_Circular_C_OnChoiceHovered__DelegateSignature) == 0x000008, "Wrong size on WBP_RadialMenuWheel_Circular_C_OnChoiceHovered__DelegateSignature");
static_assert(offsetof(WBP_RadialMenuWheel_Circular_C_OnChoiceHovered__DelegateSignature, Widget) == 0x000000, "Member 'WBP_RadialMenuWheel_Circular_C_OnChoiceHovered__DelegateSignature::Widget' has a wrong offset!");

// Function WBP_RadialMenuWheel_Circular.WBP_RadialMenuWheel_Circular_C.OnChoiceUnhovered__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct WBP_RadialMenuWheel_Circular_C_OnChoiceUnhovered__DelegateSignature final 
{
public:
	class UWidget*                                Widget;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_RadialMenuWheel_Circular_C_OnChoiceUnhovered__DelegateSignature) == 0x000008, "Wrong alignment on WBP_RadialMenuWheel_Circular_C_OnChoiceUnhovered__DelegateSignature");
static_assert(sizeof(WBP_RadialMenuWheel_Circular_C_OnChoiceUnhovered__DelegateSignature) == 0x000008, "Wrong size on WBP_RadialMenuWheel_Circular_C_OnChoiceUnhovered__DelegateSignature");
static_assert(offsetof(WBP_RadialMenuWheel_Circular_C_OnChoiceUnhovered__DelegateSignature, Widget) == 0x000000, "Member 'WBP_RadialMenuWheel_Circular_C_OnChoiceUnhovered__DelegateSignature::Widget' has a wrong offset!");

// Function WBP_RadialMenuWheel_Circular.WBP_RadialMenuWheel_Circular_C.OnMouseMove
// 0x0348 (0x0348 - 0x0000)
struct WBP_RadialMenuWheel_Circular_C_OnMouseMove final 
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0040)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	struct FPointerEvent                          MouseEvent;                                        // 0x0040(0x0098)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	struct FEventReply                            ReturnValue;                                       // 0x00D8(0x00B8)(Parm, OutParm, ReturnParm)
	int32                                         CallFunc_AkEventGlobal_ReturnValue;                // 0x0190(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_45EF[0x4];                                     // 0x0194(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                CallFunc_GetContent_ReturnValue;                   // 0x0198(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x01A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_45F0[0x7];                                     // 0x01A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                CallFunc_GetContent_ReturnValue_1;                 // 0x01A8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x01B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EInputType                                    CallFunc_GetCurrentInputType_ReturnValue;          // 0x01B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x01B2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_45F1[0x5];                                     // 0x01B3(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	struct FEventReply                            CallFunc_Unhandled_ReturnValue;                    // 0x01B8(0x00B8)()
	double                                        CallFunc_ConvertToRadialCoord_Angle;               // 0x0270(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_ConvertToRadialCoord_Distance;            // 0x0278(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UNamedSlot*                             CallFunc_FindSlotAtAngle_Slot;                     // 0x0280(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FEventReply                            CallFunc_Handled_ReturnValue;                      // 0x0288(0x00B8)()
	bool                                          CallFunc_NotEqual_ObjectObject_ReturnValue;        // 0x0340(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_RadialMenuWheel_Circular_C_OnMouseMove) == 0x000008, "Wrong alignment on WBP_RadialMenuWheel_Circular_C_OnMouseMove");
static_assert(sizeof(WBP_RadialMenuWheel_Circular_C_OnMouseMove) == 0x000348, "Wrong size on WBP_RadialMenuWheel_Circular_C_OnMouseMove");
static_assert(offsetof(WBP_RadialMenuWheel_Circular_C_OnMouseMove, MyGeometry) == 0x000000, "Member 'WBP_RadialMenuWheel_Circular_C_OnMouseMove::MyGeometry' has a wrong offset!");
static_assert(offsetof(WBP_RadialMenuWheel_Circular_C_OnMouseMove, MouseEvent) == 0x000040, "Member 'WBP_RadialMenuWheel_Circular_C_OnMouseMove::MouseEvent' has a wrong offset!");
static_assert(offsetof(WBP_RadialMenuWheel_Circular_C_OnMouseMove, ReturnValue) == 0x0000D8, "Member 'WBP_RadialMenuWheel_Circular_C_OnMouseMove::ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_RadialMenuWheel_Circular_C_OnMouseMove, CallFunc_AkEventGlobal_ReturnValue) == 0x000190, "Member 'WBP_RadialMenuWheel_Circular_C_OnMouseMove::CallFunc_AkEventGlobal_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_RadialMenuWheel_Circular_C_OnMouseMove, CallFunc_GetContent_ReturnValue) == 0x000198, "Member 'WBP_RadialMenuWheel_Circular_C_OnMouseMove::CallFunc_GetContent_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_RadialMenuWheel_Circular_C_OnMouseMove, CallFunc_IsValid_ReturnValue) == 0x0001A0, "Member 'WBP_RadialMenuWheel_Circular_C_OnMouseMove::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_RadialMenuWheel_Circular_C_OnMouseMove, CallFunc_GetContent_ReturnValue_1) == 0x0001A8, "Member 'WBP_RadialMenuWheel_Circular_C_OnMouseMove::CallFunc_GetContent_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_RadialMenuWheel_Circular_C_OnMouseMove, CallFunc_IsValid_ReturnValue_1) == 0x0001B0, "Member 'WBP_RadialMenuWheel_Circular_C_OnMouseMove::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_RadialMenuWheel_Circular_C_OnMouseMove, CallFunc_GetCurrentInputType_ReturnValue) == 0x0001B1, "Member 'WBP_RadialMenuWheel_Circular_C_OnMouseMove::CallFunc_GetCurrentInputType_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_RadialMenuWheel_Circular_C_OnMouseMove, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x0001B2, "Member 'WBP_RadialMenuWheel_Circular_C_OnMouseMove::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_RadialMenuWheel_Circular_C_OnMouseMove, CallFunc_Unhandled_ReturnValue) == 0x0001B8, "Member 'WBP_RadialMenuWheel_Circular_C_OnMouseMove::CallFunc_Unhandled_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_RadialMenuWheel_Circular_C_OnMouseMove, CallFunc_ConvertToRadialCoord_Angle) == 0x000270, "Member 'WBP_RadialMenuWheel_Circular_C_OnMouseMove::CallFunc_ConvertToRadialCoord_Angle' has a wrong offset!");
static_assert(offsetof(WBP_RadialMenuWheel_Circular_C_OnMouseMove, CallFunc_ConvertToRadialCoord_Distance) == 0x000278, "Member 'WBP_RadialMenuWheel_Circular_C_OnMouseMove::CallFunc_ConvertToRadialCoord_Distance' has a wrong offset!");
static_assert(offsetof(WBP_RadialMenuWheel_Circular_C_OnMouseMove, CallFunc_FindSlotAtAngle_Slot) == 0x000280, "Member 'WBP_RadialMenuWheel_Circular_C_OnMouseMove::CallFunc_FindSlotAtAngle_Slot' has a wrong offset!");
static_assert(offsetof(WBP_RadialMenuWheel_Circular_C_OnMouseMove, CallFunc_Handled_ReturnValue) == 0x000288, "Member 'WBP_RadialMenuWheel_Circular_C_OnMouseMove::CallFunc_Handled_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_RadialMenuWheel_Circular_C_OnMouseMove, CallFunc_NotEqual_ObjectObject_ReturnValue) == 0x000340, "Member 'WBP_RadialMenuWheel_Circular_C_OnMouseMove::CallFunc_NotEqual_ObjectObject_ReturnValue' has a wrong offset!");

// Function WBP_RadialMenuWheel_Circular.WBP_RadialMenuWheel_Circular_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct WBP_RadialMenuWheel_Circular_C_PreConstruct final 
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_RadialMenuWheel_Circular_C_PreConstruct) == 0x000001, "Wrong alignment on WBP_RadialMenuWheel_Circular_C_PreConstruct");
static_assert(sizeof(WBP_RadialMenuWheel_Circular_C_PreConstruct) == 0x000001, "Wrong size on WBP_RadialMenuWheel_Circular_C_PreConstruct");
static_assert(offsetof(WBP_RadialMenuWheel_Circular_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'WBP_RadialMenuWheel_Circular_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function WBP_RadialMenuWheel_Circular.WBP_RadialMenuWheel_Circular_C.SelectRadialByGamepadInput
// 0x00A8 (0x00A8 - 0x0000)
struct WBP_RadialMenuWheel_Circular_C_SelectRadialByGamepadInput final 
{
public:
	struct FVector2D                              InputVal;                                          // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_45F2[0x7];                                     // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                CallFunc_GetContent_ReturnValue;                   // 0x0018(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable;                                // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_45F3[0x3];                                     // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_AkEventGlobal_ReturnValue;                // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_X;                          // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y;                          // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_X_1;                        // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y_1;                        // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Abs_ReturnValue;                          // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_DegAtan2_ReturnValue;                     // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Abs_ReturnValue_1;                        // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EInputType                                    CallFunc_GetCurrentInputType_ReturnValue;          // 0x0069(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x006A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_45F4[0x5];                                     // 0x006B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                CallFunc_GetContent_ReturnValue_1;                 // 0x0070(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Conv_IntToDouble_ReturnValue;             // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue_1;       // 0x0089(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x008A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_45F5[0x5];                                     // 0x008B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_Select_Default;                             // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UNamedSlot*                             CallFunc_FindSlotAtAngle_Slot;                     // 0x0098(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ObjectObject_ReturnValue;        // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_RadialMenuWheel_Circular_C_SelectRadialByGamepadInput) == 0x000008, "Wrong alignment on WBP_RadialMenuWheel_Circular_C_SelectRadialByGamepadInput");
static_assert(sizeof(WBP_RadialMenuWheel_Circular_C_SelectRadialByGamepadInput) == 0x0000A8, "Wrong size on WBP_RadialMenuWheel_Circular_C_SelectRadialByGamepadInput");
static_assert(offsetof(WBP_RadialMenuWheel_Circular_C_SelectRadialByGamepadInput, InputVal) == 0x000000, "Member 'WBP_RadialMenuWheel_Circular_C_SelectRadialByGamepadInput::InputVal' has a wrong offset!");
static_assert(offsetof(WBP_RadialMenuWheel_Circular_C_SelectRadialByGamepadInput, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'WBP_RadialMenuWheel_Circular_C_SelectRadialByGamepadInput::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_RadialMenuWheel_Circular_C_SelectRadialByGamepadInput, CallFunc_GetContent_ReturnValue) == 0x000018, "Member 'WBP_RadialMenuWheel_Circular_C_SelectRadialByGamepadInput::CallFunc_GetContent_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_RadialMenuWheel_Circular_C_SelectRadialByGamepadInput, Temp_real_Variable) == 0x000020, "Member 'WBP_RadialMenuWheel_Circular_C_SelectRadialByGamepadInput::Temp_real_Variable' has a wrong offset!");
static_assert(offsetof(WBP_RadialMenuWheel_Circular_C_SelectRadialByGamepadInput, Temp_bool_Variable) == 0x000028, "Member 'WBP_RadialMenuWheel_Circular_C_SelectRadialByGamepadInput::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_RadialMenuWheel_Circular_C_SelectRadialByGamepadInput, CallFunc_AkEventGlobal_ReturnValue) == 0x00002C, "Member 'WBP_RadialMenuWheel_Circular_C_SelectRadialByGamepadInput::CallFunc_AkEventGlobal_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_RadialMenuWheel_Circular_C_SelectRadialByGamepadInput, CallFunc_BreakVector2D_X) == 0x000030, "Member 'WBP_RadialMenuWheel_Circular_C_SelectRadialByGamepadInput::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(WBP_RadialMenuWheel_Circular_C_SelectRadialByGamepadInput, CallFunc_BreakVector2D_Y) == 0x000038, "Member 'WBP_RadialMenuWheel_Circular_C_SelectRadialByGamepadInput::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(WBP_RadialMenuWheel_Circular_C_SelectRadialByGamepadInput, CallFunc_BreakVector2D_X_1) == 0x000040, "Member 'WBP_RadialMenuWheel_Circular_C_SelectRadialByGamepadInput::CallFunc_BreakVector2D_X_1' has a wrong offset!");
static_assert(offsetof(WBP_RadialMenuWheel_Circular_C_SelectRadialByGamepadInput, CallFunc_BreakVector2D_Y_1) == 0x000048, "Member 'WBP_RadialMenuWheel_Circular_C_SelectRadialByGamepadInput::CallFunc_BreakVector2D_Y_1' has a wrong offset!");
static_assert(offsetof(WBP_RadialMenuWheel_Circular_C_SelectRadialByGamepadInput, CallFunc_Abs_ReturnValue) == 0x000050, "Member 'WBP_RadialMenuWheel_Circular_C_SelectRadialByGamepadInput::CallFunc_Abs_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_RadialMenuWheel_Circular_C_SelectRadialByGamepadInput, CallFunc_DegAtan2_ReturnValue) == 0x000058, "Member 'WBP_RadialMenuWheel_Circular_C_SelectRadialByGamepadInput::CallFunc_DegAtan2_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_RadialMenuWheel_Circular_C_SelectRadialByGamepadInput, CallFunc_Abs_ReturnValue_1) == 0x000060, "Member 'WBP_RadialMenuWheel_Circular_C_SelectRadialByGamepadInput::CallFunc_Abs_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_RadialMenuWheel_Circular_C_SelectRadialByGamepadInput, CallFunc_IsValid_ReturnValue_1) == 0x000068, "Member 'WBP_RadialMenuWheel_Circular_C_SelectRadialByGamepadInput::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_RadialMenuWheel_Circular_C_SelectRadialByGamepadInput, CallFunc_GetCurrentInputType_ReturnValue) == 0x000069, "Member 'WBP_RadialMenuWheel_Circular_C_SelectRadialByGamepadInput::CallFunc_GetCurrentInputType_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_RadialMenuWheel_Circular_C_SelectRadialByGamepadInput, K2Node_SwitchEnum_CmpSuccess) == 0x00006A, "Member 'WBP_RadialMenuWheel_Circular_C_SelectRadialByGamepadInput::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(WBP_RadialMenuWheel_Circular_C_SelectRadialByGamepadInput, CallFunc_GetContent_ReturnValue_1) == 0x000070, "Member 'WBP_RadialMenuWheel_Circular_C_SelectRadialByGamepadInput::CallFunc_GetContent_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_RadialMenuWheel_Circular_C_SelectRadialByGamepadInput, CallFunc_Conv_IntToDouble_ReturnValue) == 0x000078, "Member 'WBP_RadialMenuWheel_Circular_C_SelectRadialByGamepadInput::CallFunc_Conv_IntToDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_RadialMenuWheel_Circular_C_SelectRadialByGamepadInput, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000080, "Member 'WBP_RadialMenuWheel_Circular_C_SelectRadialByGamepadInput::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_RadialMenuWheel_Circular_C_SelectRadialByGamepadInput, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000088, "Member 'WBP_RadialMenuWheel_Circular_C_SelectRadialByGamepadInput::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_RadialMenuWheel_Circular_C_SelectRadialByGamepadInput, CallFunc_Greater_DoubleDouble_ReturnValue_1) == 0x000089, "Member 'WBP_RadialMenuWheel_Circular_C_SelectRadialByGamepadInput::CallFunc_Greater_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_RadialMenuWheel_Circular_C_SelectRadialByGamepadInput, CallFunc_BooleanOR_ReturnValue) == 0x00008A, "Member 'WBP_RadialMenuWheel_Circular_C_SelectRadialByGamepadInput::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_RadialMenuWheel_Circular_C_SelectRadialByGamepadInput, K2Node_Select_Default) == 0x000090, "Member 'WBP_RadialMenuWheel_Circular_C_SelectRadialByGamepadInput::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_RadialMenuWheel_Circular_C_SelectRadialByGamepadInput, CallFunc_FindSlotAtAngle_Slot) == 0x000098, "Member 'WBP_RadialMenuWheel_Circular_C_SelectRadialByGamepadInput::CallFunc_FindSlotAtAngle_Slot' has a wrong offset!");
static_assert(offsetof(WBP_RadialMenuWheel_Circular_C_SelectRadialByGamepadInput, CallFunc_NotEqual_ObjectObject_ReturnValue) == 0x0000A0, "Member 'WBP_RadialMenuWheel_Circular_C_SelectRadialByGamepadInput::CallFunc_NotEqual_ObjectObject_ReturnValue' has a wrong offset!");

// Function WBP_RadialMenuWheel_Circular.WBP_RadialMenuWheel_Circular_C.SelectRadialByGamepadInputOnConsole
// 0x0088 (0x0088 - 0x0000)
struct WBP_RadialMenuWheel_Circular_C_SelectRadialByGamepadInputOnConsole final 
{
public:
	struct FVector2D                              Input;                                             // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_AkEventGlobal_ReturnValue;                // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_45F6[0x4];                                     // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_BreakVector2D_X;                          // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y;                          // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Abs_ReturnValue;                          // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_45F7[0x7];                                     // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Abs_ReturnValue_1;                        // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue_1;       // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0042(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_45F8[0x5];                                     // 0x0043(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                CallFunc_GetContent_ReturnValue;                   // 0x0048(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UWidget*                                CallFunc_GetContent_ReturnValue_1;                 // 0x0050(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_X_1;                        // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y_1;                        // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_45F9[0x7];                                     // 0x0069(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_DegAtan2_ReturnValue;                     // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UNamedSlot*                             CallFunc_Find_Slot_At_Angle_On_Console_Slot;       // 0x0078(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ObjectObject_ReturnValue;        // 0x0081(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_RadialMenuWheel_Circular_C_SelectRadialByGamepadInputOnConsole) == 0x000008, "Wrong alignment on WBP_RadialMenuWheel_Circular_C_SelectRadialByGamepadInputOnConsole");
static_assert(sizeof(WBP_RadialMenuWheel_Circular_C_SelectRadialByGamepadInputOnConsole) == 0x000088, "Wrong size on WBP_RadialMenuWheel_Circular_C_SelectRadialByGamepadInputOnConsole");
static_assert(offsetof(WBP_RadialMenuWheel_Circular_C_SelectRadialByGamepadInputOnConsole, Input) == 0x000000, "Member 'WBP_RadialMenuWheel_Circular_C_SelectRadialByGamepadInputOnConsole::Input' has a wrong offset!");
static_assert(offsetof(WBP_RadialMenuWheel_Circular_C_SelectRadialByGamepadInputOnConsole, CallFunc_AkEventGlobal_ReturnValue) == 0x000010, "Member 'WBP_RadialMenuWheel_Circular_C_SelectRadialByGamepadInputOnConsole::CallFunc_AkEventGlobal_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_RadialMenuWheel_Circular_C_SelectRadialByGamepadInputOnConsole, CallFunc_BreakVector2D_X) == 0x000018, "Member 'WBP_RadialMenuWheel_Circular_C_SelectRadialByGamepadInputOnConsole::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(WBP_RadialMenuWheel_Circular_C_SelectRadialByGamepadInputOnConsole, CallFunc_BreakVector2D_Y) == 0x000020, "Member 'WBP_RadialMenuWheel_Circular_C_SelectRadialByGamepadInputOnConsole::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(WBP_RadialMenuWheel_Circular_C_SelectRadialByGamepadInputOnConsole, CallFunc_Abs_ReturnValue) == 0x000028, "Member 'WBP_RadialMenuWheel_Circular_C_SelectRadialByGamepadInputOnConsole::CallFunc_Abs_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_RadialMenuWheel_Circular_C_SelectRadialByGamepadInputOnConsole, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000030, "Member 'WBP_RadialMenuWheel_Circular_C_SelectRadialByGamepadInputOnConsole::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_RadialMenuWheel_Circular_C_SelectRadialByGamepadInputOnConsole, CallFunc_Abs_ReturnValue_1) == 0x000038, "Member 'WBP_RadialMenuWheel_Circular_C_SelectRadialByGamepadInputOnConsole::CallFunc_Abs_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_RadialMenuWheel_Circular_C_SelectRadialByGamepadInputOnConsole, CallFunc_Greater_DoubleDouble_ReturnValue_1) == 0x000040, "Member 'WBP_RadialMenuWheel_Circular_C_SelectRadialByGamepadInputOnConsole::CallFunc_Greater_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_RadialMenuWheel_Circular_C_SelectRadialByGamepadInputOnConsole, CallFunc_IsValid_ReturnValue) == 0x000041, "Member 'WBP_RadialMenuWheel_Circular_C_SelectRadialByGamepadInputOnConsole::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_RadialMenuWheel_Circular_C_SelectRadialByGamepadInputOnConsole, CallFunc_BooleanOR_ReturnValue) == 0x000042, "Member 'WBP_RadialMenuWheel_Circular_C_SelectRadialByGamepadInputOnConsole::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_RadialMenuWheel_Circular_C_SelectRadialByGamepadInputOnConsole, CallFunc_GetContent_ReturnValue) == 0x000048, "Member 'WBP_RadialMenuWheel_Circular_C_SelectRadialByGamepadInputOnConsole::CallFunc_GetContent_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_RadialMenuWheel_Circular_C_SelectRadialByGamepadInputOnConsole, CallFunc_GetContent_ReturnValue_1) == 0x000050, "Member 'WBP_RadialMenuWheel_Circular_C_SelectRadialByGamepadInputOnConsole::CallFunc_GetContent_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_RadialMenuWheel_Circular_C_SelectRadialByGamepadInputOnConsole, CallFunc_BreakVector2D_X_1) == 0x000058, "Member 'WBP_RadialMenuWheel_Circular_C_SelectRadialByGamepadInputOnConsole::CallFunc_BreakVector2D_X_1' has a wrong offset!");
static_assert(offsetof(WBP_RadialMenuWheel_Circular_C_SelectRadialByGamepadInputOnConsole, CallFunc_BreakVector2D_Y_1) == 0x000060, "Member 'WBP_RadialMenuWheel_Circular_C_SelectRadialByGamepadInputOnConsole::CallFunc_BreakVector2D_Y_1' has a wrong offset!");
static_assert(offsetof(WBP_RadialMenuWheel_Circular_C_SelectRadialByGamepadInputOnConsole, CallFunc_BooleanAND_ReturnValue) == 0x000068, "Member 'WBP_RadialMenuWheel_Circular_C_SelectRadialByGamepadInputOnConsole::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_RadialMenuWheel_Circular_C_SelectRadialByGamepadInputOnConsole, CallFunc_DegAtan2_ReturnValue) == 0x000070, "Member 'WBP_RadialMenuWheel_Circular_C_SelectRadialByGamepadInputOnConsole::CallFunc_DegAtan2_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_RadialMenuWheel_Circular_C_SelectRadialByGamepadInputOnConsole, CallFunc_Find_Slot_At_Angle_On_Console_Slot) == 0x000078, "Member 'WBP_RadialMenuWheel_Circular_C_SelectRadialByGamepadInputOnConsole::CallFunc_Find_Slot_At_Angle_On_Console_Slot' has a wrong offset!");
static_assert(offsetof(WBP_RadialMenuWheel_Circular_C_SelectRadialByGamepadInputOnConsole, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000080, "Member 'WBP_RadialMenuWheel_Circular_C_SelectRadialByGamepadInputOnConsole::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_RadialMenuWheel_Circular_C_SelectRadialByGamepadInputOnConsole, CallFunc_NotEqual_ObjectObject_ReturnValue) == 0x000081, "Member 'WBP_RadialMenuWheel_Circular_C_SelectRadialByGamepadInputOnConsole::CallFunc_NotEqual_ObjectObject_ReturnValue' has a wrong offset!");

// Function WBP_RadialMenuWheel_Circular.WBP_RadialMenuWheel_Circular_C.SetRadialSelectionEnabled
// 0x0001 (0x0001 - 0x0000)
struct WBP_RadialMenuWheel_Circular_C_SetRadialSelectionEnabled final 
{
public:
	bool                                          Param_bRadialSelectionEnabled;                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_RadialMenuWheel_Circular_C_SetRadialSelectionEnabled) == 0x000001, "Wrong alignment on WBP_RadialMenuWheel_Circular_C_SetRadialSelectionEnabled");
static_assert(sizeof(WBP_RadialMenuWheel_Circular_C_SetRadialSelectionEnabled) == 0x000001, "Wrong size on WBP_RadialMenuWheel_Circular_C_SetRadialSelectionEnabled");
static_assert(offsetof(WBP_RadialMenuWheel_Circular_C_SetRadialSelectionEnabled, Param_bRadialSelectionEnabled) == 0x000000, "Member 'WBP_RadialMenuWheel_Circular_C_SetRadialSelectionEnabled::Param_bRadialSelectionEnabled' has a wrong offset!");

// Function WBP_RadialMenuWheel_Circular.WBP_RadialMenuWheel_Circular_C.SlotIndexToAngle
// 0x0018 (0x0018 - 0x0000)
struct WBP_RadialMenuWheel_Circular_C_SlotIndexToAngle final 
{
public:
	int32                                         Param_Index;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_45FA[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Angle;                                             // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_IntFloat_ReturnValue;            // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_RadialMenuWheel_Circular_C_SlotIndexToAngle) == 0x000008, "Wrong alignment on WBP_RadialMenuWheel_Circular_C_SlotIndexToAngle");
static_assert(sizeof(WBP_RadialMenuWheel_Circular_C_SlotIndexToAngle) == 0x000018, "Wrong size on WBP_RadialMenuWheel_Circular_C_SlotIndexToAngle");
static_assert(offsetof(WBP_RadialMenuWheel_Circular_C_SlotIndexToAngle, Param_Index) == 0x000000, "Member 'WBP_RadialMenuWheel_Circular_C_SlotIndexToAngle::Param_Index' has a wrong offset!");
static_assert(offsetof(WBP_RadialMenuWheel_Circular_C_SlotIndexToAngle, Angle) == 0x000008, "Member 'WBP_RadialMenuWheel_Circular_C_SlotIndexToAngle::Angle' has a wrong offset!");
static_assert(offsetof(WBP_RadialMenuWheel_Circular_C_SlotIndexToAngle, CallFunc_Multiply_IntFloat_ReturnValue) == 0x000010, "Member 'WBP_RadialMenuWheel_Circular_C_SlotIndexToAngle::CallFunc_Multiply_IntFloat_ReturnValue' has a wrong offset!");

// Function WBP_RadialMenuWheel_Circular.WBP_RadialMenuWheel_Circular_C.StartSelecting
// 0x0010 (0x0010 - 0x0000)
struct WBP_RadialMenuWheel_Circular_C_StartSelecting final 
{
public:
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_45FB[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationForward_ReturnValue;         // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_RadialMenuWheel_Circular_C_StartSelecting) == 0x000008, "Wrong alignment on WBP_RadialMenuWheel_Circular_C_StartSelecting");
static_assert(sizeof(WBP_RadialMenuWheel_Circular_C_StartSelecting) == 0x000010, "Wrong size on WBP_RadialMenuWheel_Circular_C_StartSelecting");
static_assert(offsetof(WBP_RadialMenuWheel_Circular_C_StartSelecting, CallFunc_IsValid_ReturnValue) == 0x000000, "Member 'WBP_RadialMenuWheel_Circular_C_StartSelecting::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_RadialMenuWheel_Circular_C_StartSelecting, CallFunc_PlayAnimationForward_ReturnValue) == 0x000008, "Member 'WBP_RadialMenuWheel_Circular_C_StartSelecting::CallFunc_PlayAnimationForward_ReturnValue' has a wrong offset!");

}

