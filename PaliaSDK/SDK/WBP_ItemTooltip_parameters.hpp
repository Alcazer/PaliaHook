#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_ItemTooltip

#include "Basic.hpp"

#include "Palia_structs.hpp"
#include "CommonInput_structs.hpp"
#include "UMG_structs.hpp"
#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function WBP_ItemTooltip.WBP_ItemTooltip_C.ExecuteUbergraph_WBP_ItemTooltip
// 0x0038 (0x0038 - 0x0000)
struct WBP_ItemTooltip_C_ExecuteUbergraph_WBP_ItemTooltip final 
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_49FF[0x3];                                     // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0008(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationForward_ReturnValue;         // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0020(0x0008)(NoDestructor, HasGetValueTypeHash)
	class UCommonInputSubsystem*                  CallFunc_GetLocalPlayerSubsystem_ReturnValue;      // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	ECommonInputType                              CallFunc_GetCurrentInputType_ReturnValue;          // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4A00[0x2];                                     // 0x0032(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_K2_SetTimerDelegate_Time_ImplicitCast;    // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_ItemTooltip_C_ExecuteUbergraph_WBP_ItemTooltip) == 0x000008, "Wrong alignment on WBP_ItemTooltip_C_ExecuteUbergraph_WBP_ItemTooltip");
static_assert(sizeof(WBP_ItemTooltip_C_ExecuteUbergraph_WBP_ItemTooltip) == 0x000038, "Wrong size on WBP_ItemTooltip_C_ExecuteUbergraph_WBP_ItemTooltip");
static_assert(offsetof(WBP_ItemTooltip_C_ExecuteUbergraph_WBP_ItemTooltip, EntryPoint) == 0x000000, "Member 'WBP_ItemTooltip_C_ExecuteUbergraph_WBP_ItemTooltip::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_ItemTooltip_C_ExecuteUbergraph_WBP_ItemTooltip, K2Node_SwitchEnum_CmpSuccess) == 0x000004, "Member 'WBP_ItemTooltip_C_ExecuteUbergraph_WBP_ItemTooltip::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(WBP_ItemTooltip_C_ExecuteUbergraph_WBP_ItemTooltip, K2Node_CreateDelegate_OutputDelegate) == 0x000008, "Member 'WBP_ItemTooltip_C_ExecuteUbergraph_WBP_ItemTooltip::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(WBP_ItemTooltip_C_ExecuteUbergraph_WBP_ItemTooltip, CallFunc_PlayAnimationForward_ReturnValue) == 0x000018, "Member 'WBP_ItemTooltip_C_ExecuteUbergraph_WBP_ItemTooltip::CallFunc_PlayAnimationForward_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ItemTooltip_C_ExecuteUbergraph_WBP_ItemTooltip, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000020, "Member 'WBP_ItemTooltip_C_ExecuteUbergraph_WBP_ItemTooltip::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ItemTooltip_C_ExecuteUbergraph_WBP_ItemTooltip, CallFunc_GetLocalPlayerSubsystem_ReturnValue) == 0x000028, "Member 'WBP_ItemTooltip_C_ExecuteUbergraph_WBP_ItemTooltip::CallFunc_GetLocalPlayerSubsystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ItemTooltip_C_ExecuteUbergraph_WBP_ItemTooltip, CallFunc_GetCurrentInputType_ReturnValue) == 0x000030, "Member 'WBP_ItemTooltip_C_ExecuteUbergraph_WBP_ItemTooltip::CallFunc_GetCurrentInputType_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ItemTooltip_C_ExecuteUbergraph_WBP_ItemTooltip, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000031, "Member 'WBP_ItemTooltip_C_ExecuteUbergraph_WBP_ItemTooltip::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ItemTooltip_C_ExecuteUbergraph_WBP_ItemTooltip, CallFunc_K2_SetTimerDelegate_Time_ImplicitCast) == 0x000034, "Member 'WBP_ItemTooltip_C_ExecuteUbergraph_WBP_ItemTooltip::CallFunc_K2_SetTimerDelegate_Time_ImplicitCast' has a wrong offset!");

// Function WBP_ItemTooltip.WBP_ItemTooltip_C.FindConfig
// 0x0098 (0x0098 - 0x0000)
struct WBP_ItemTooltip_C_FindConfig final 
{
public:
	struct FValeriaItem                           Valeria_Item;                                      // 0x0000(0x0068)(BlueprintVisible, BlueprintReadOnly, Parm)
	class UVAL_ItemTypeDefinitionAsset*           Loaded_Item_Type;                                  // 0x0068(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Success;                                           // 0x0070(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4A01[0x7];                                     // 0x0071(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UVAL_ItemTypeDefinitionAsset*           ItemType;                                          // 0x0078(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UObject*                                CallFunc_LoadAsset_Blocking_ReturnValue;           // 0x0080(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UVAL_ItemTypeDefinitionAsset*           K2Node_DynamicCast_AsItem_Type_Definition;         // 0x0088(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0091(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_ItemTooltip_C_FindConfig) == 0x000008, "Wrong alignment on WBP_ItemTooltip_C_FindConfig");
static_assert(sizeof(WBP_ItemTooltip_C_FindConfig) == 0x000098, "Wrong size on WBP_ItemTooltip_C_FindConfig");
static_assert(offsetof(WBP_ItemTooltip_C_FindConfig, Valeria_Item) == 0x000000, "Member 'WBP_ItemTooltip_C_FindConfig::Valeria_Item' has a wrong offset!");
static_assert(offsetof(WBP_ItemTooltip_C_FindConfig, Loaded_Item_Type) == 0x000068, "Member 'WBP_ItemTooltip_C_FindConfig::Loaded_Item_Type' has a wrong offset!");
static_assert(offsetof(WBP_ItemTooltip_C_FindConfig, Success) == 0x000070, "Member 'WBP_ItemTooltip_C_FindConfig::Success' has a wrong offset!");
static_assert(offsetof(WBP_ItemTooltip_C_FindConfig, ItemType) == 0x000078, "Member 'WBP_ItemTooltip_C_FindConfig::ItemType' has a wrong offset!");
static_assert(offsetof(WBP_ItemTooltip_C_FindConfig, CallFunc_LoadAsset_Blocking_ReturnValue) == 0x000080, "Member 'WBP_ItemTooltip_C_FindConfig::CallFunc_LoadAsset_Blocking_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ItemTooltip_C_FindConfig, K2Node_DynamicCast_AsItem_Type_Definition) == 0x000088, "Member 'WBP_ItemTooltip_C_FindConfig::K2Node_DynamicCast_AsItem_Type_Definition' has a wrong offset!");
static_assert(offsetof(WBP_ItemTooltip_C_FindConfig, K2Node_DynamicCast_bSuccess) == 0x000090, "Member 'WBP_ItemTooltip_C_FindConfig::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WBP_ItemTooltip_C_FindConfig, CallFunc_IsValid_ReturnValue) == 0x000091, "Member 'WBP_ItemTooltip_C_FindConfig::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function WBP_ItemTooltip.WBP_ItemTooltip_C.GetBodyColor
// 0x0098 (0x0098 - 0x0000)
struct WBP_ItemTooltip_C_GetBodyColor final 
{
public:
	EItemRarity                                   ItemRarity;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4A02[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           Color;                                             // 0x0004(0x0010)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EItemRarity                                   Temp_byte_Variable;                                // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4A03[0x3];                                     // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           Temp_struct_Variable;                              // 0x0018(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_1;                            // 0x0028(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_2;                            // 0x0038(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_3;                            // 0x0048(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_4;                            // 0x0058(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_5;                            // 0x0068(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_6;                            // 0x0078(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_Select_Default;                             // 0x0088(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_ItemTooltip_C_GetBodyColor) == 0x000004, "Wrong alignment on WBP_ItemTooltip_C_GetBodyColor");
static_assert(sizeof(WBP_ItemTooltip_C_GetBodyColor) == 0x000098, "Wrong size on WBP_ItemTooltip_C_GetBodyColor");
static_assert(offsetof(WBP_ItemTooltip_C_GetBodyColor, ItemRarity) == 0x000000, "Member 'WBP_ItemTooltip_C_GetBodyColor::ItemRarity' has a wrong offset!");
static_assert(offsetof(WBP_ItemTooltip_C_GetBodyColor, Color) == 0x000004, "Member 'WBP_ItemTooltip_C_GetBodyColor::Color' has a wrong offset!");
static_assert(offsetof(WBP_ItemTooltip_C_GetBodyColor, Temp_byte_Variable) == 0x000014, "Member 'WBP_ItemTooltip_C_GetBodyColor::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_ItemTooltip_C_GetBodyColor, Temp_struct_Variable) == 0x000018, "Member 'WBP_ItemTooltip_C_GetBodyColor::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(WBP_ItemTooltip_C_GetBodyColor, Temp_struct_Variable_1) == 0x000028, "Member 'WBP_ItemTooltip_C_GetBodyColor::Temp_struct_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_ItemTooltip_C_GetBodyColor, Temp_struct_Variable_2) == 0x000038, "Member 'WBP_ItemTooltip_C_GetBodyColor::Temp_struct_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_ItemTooltip_C_GetBodyColor, Temp_struct_Variable_3) == 0x000048, "Member 'WBP_ItemTooltip_C_GetBodyColor::Temp_struct_Variable_3' has a wrong offset!");
static_assert(offsetof(WBP_ItemTooltip_C_GetBodyColor, Temp_struct_Variable_4) == 0x000058, "Member 'WBP_ItemTooltip_C_GetBodyColor::Temp_struct_Variable_4' has a wrong offset!");
static_assert(offsetof(WBP_ItemTooltip_C_GetBodyColor, Temp_struct_Variable_5) == 0x000068, "Member 'WBP_ItemTooltip_C_GetBodyColor::Temp_struct_Variable_5' has a wrong offset!");
static_assert(offsetof(WBP_ItemTooltip_C_GetBodyColor, Temp_struct_Variable_6) == 0x000078, "Member 'WBP_ItemTooltip_C_GetBodyColor::Temp_struct_Variable_6' has a wrong offset!");
static_assert(offsetof(WBP_ItemTooltip_C_GetBodyColor, K2Node_Select_Default) == 0x000088, "Member 'WBP_ItemTooltip_C_GetBodyColor::K2Node_Select_Default' has a wrong offset!");

// Function WBP_ItemTooltip.WBP_ItemTooltip_C.GetBuffIcon
// 0x0038 (0x0038 - 0x0000)
struct WBP_ItemTooltip_C_GetBuffIcon final 
{
public:
	bool                                          IsStarQuality;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4A04[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UVAL_ItemTypeDefinitionAsset*           ItemType;                                          // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             BuffIcon;                                          // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4A05[0x7];                                     // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture2D*                             CallFunc_GetQualityBuffIcon_BuffIcon;              // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             CallFunc_GetNormalBuffIcon_BuffIcon;               // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             K2Node_Select_Default;                             // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_ItemTooltip_C_GetBuffIcon) == 0x000008, "Wrong alignment on WBP_ItemTooltip_C_GetBuffIcon");
static_assert(sizeof(WBP_ItemTooltip_C_GetBuffIcon) == 0x000038, "Wrong size on WBP_ItemTooltip_C_GetBuffIcon");
static_assert(offsetof(WBP_ItemTooltip_C_GetBuffIcon, IsStarQuality) == 0x000000, "Member 'WBP_ItemTooltip_C_GetBuffIcon::IsStarQuality' has a wrong offset!");
static_assert(offsetof(WBP_ItemTooltip_C_GetBuffIcon, ItemType) == 0x000008, "Member 'WBP_ItemTooltip_C_GetBuffIcon::ItemType' has a wrong offset!");
static_assert(offsetof(WBP_ItemTooltip_C_GetBuffIcon, BuffIcon) == 0x000010, "Member 'WBP_ItemTooltip_C_GetBuffIcon::BuffIcon' has a wrong offset!");
static_assert(offsetof(WBP_ItemTooltip_C_GetBuffIcon, Temp_bool_Variable) == 0x000018, "Member 'WBP_ItemTooltip_C_GetBuffIcon::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_ItemTooltip_C_GetBuffIcon, CallFunc_GetQualityBuffIcon_BuffIcon) == 0x000020, "Member 'WBP_ItemTooltip_C_GetBuffIcon::CallFunc_GetQualityBuffIcon_BuffIcon' has a wrong offset!");
static_assert(offsetof(WBP_ItemTooltip_C_GetBuffIcon, CallFunc_GetNormalBuffIcon_BuffIcon) == 0x000028, "Member 'WBP_ItemTooltip_C_GetBuffIcon::CallFunc_GetNormalBuffIcon_BuffIcon' has a wrong offset!");
static_assert(offsetof(WBP_ItemTooltip_C_GetBuffIcon, K2Node_Select_Default) == 0x000030, "Member 'WBP_ItemTooltip_C_GetBuffIcon::K2Node_Select_Default' has a wrong offset!");

// Function WBP_ItemTooltip.WBP_ItemTooltip_C.GetBuffText
// 0x0078 (0x0078 - 0x0000)
struct WBP_ItemTooltip_C_GetBuffText final 
{
public:
	bool                                          StarQuality;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4A06[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UVAL_ItemTypeDefinitionAsset*           Type;                                              // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FText                                   BuffText;                                          // 0x0010(0x0018)(Parm, OutParm)
	bool                                          Temp_bool_Variable;                                // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4A07[0x7];                                     // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_GetNormalBuffText_BuffText;               // 0x0030(0x0018)()
	class FText                                   CallFunc_GetQualityBuffText_BuffText;              // 0x0048(0x0018)()
	class FText                                   K2Node_Select_Default;                             // 0x0060(0x0018)()
};
static_assert(alignof(WBP_ItemTooltip_C_GetBuffText) == 0x000008, "Wrong alignment on WBP_ItemTooltip_C_GetBuffText");
static_assert(sizeof(WBP_ItemTooltip_C_GetBuffText) == 0x000078, "Wrong size on WBP_ItemTooltip_C_GetBuffText");
static_assert(offsetof(WBP_ItemTooltip_C_GetBuffText, StarQuality) == 0x000000, "Member 'WBP_ItemTooltip_C_GetBuffText::StarQuality' has a wrong offset!");
static_assert(offsetof(WBP_ItemTooltip_C_GetBuffText, Type) == 0x000008, "Member 'WBP_ItemTooltip_C_GetBuffText::Type' has a wrong offset!");
static_assert(offsetof(WBP_ItemTooltip_C_GetBuffText, BuffText) == 0x000010, "Member 'WBP_ItemTooltip_C_GetBuffText::BuffText' has a wrong offset!");
static_assert(offsetof(WBP_ItemTooltip_C_GetBuffText, Temp_bool_Variable) == 0x000028, "Member 'WBP_ItemTooltip_C_GetBuffText::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_ItemTooltip_C_GetBuffText, CallFunc_GetNormalBuffText_BuffText) == 0x000030, "Member 'WBP_ItemTooltip_C_GetBuffText::CallFunc_GetNormalBuffText_BuffText' has a wrong offset!");
static_assert(offsetof(WBP_ItemTooltip_C_GetBuffText, CallFunc_GetQualityBuffText_BuffText) == 0x000048, "Member 'WBP_ItemTooltip_C_GetBuffText::CallFunc_GetQualityBuffText_BuffText' has a wrong offset!");
static_assert(offsetof(WBP_ItemTooltip_C_GetBuffText, K2Node_Select_Default) == 0x000060, "Member 'WBP_ItemTooltip_C_GetBuffText::K2Node_Select_Default' has a wrong offset!");

// Function WBP_ItemTooltip.WBP_ItemTooltip_C.GetHeaderColor
// 0x0098 (0x0098 - 0x0000)
struct WBP_ItemTooltip_C_GetHeaderColor final 
{
public:
	EItemRarity                                   ItemRarity;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4A08[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           Color;                                             // 0x0004(0x0010)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EItemRarity                                   Temp_byte_Variable;                                // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4A09[0x3];                                     // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           Temp_struct_Variable;                              // 0x0018(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_1;                            // 0x0028(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_2;                            // 0x0038(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_3;                            // 0x0048(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_4;                            // 0x0058(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_5;                            // 0x0068(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_6;                            // 0x0078(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_Select_Default;                             // 0x0088(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_ItemTooltip_C_GetHeaderColor) == 0x000004, "Wrong alignment on WBP_ItemTooltip_C_GetHeaderColor");
static_assert(sizeof(WBP_ItemTooltip_C_GetHeaderColor) == 0x000098, "Wrong size on WBP_ItemTooltip_C_GetHeaderColor");
static_assert(offsetof(WBP_ItemTooltip_C_GetHeaderColor, ItemRarity) == 0x000000, "Member 'WBP_ItemTooltip_C_GetHeaderColor::ItemRarity' has a wrong offset!");
static_assert(offsetof(WBP_ItemTooltip_C_GetHeaderColor, Color) == 0x000004, "Member 'WBP_ItemTooltip_C_GetHeaderColor::Color' has a wrong offset!");
static_assert(offsetof(WBP_ItemTooltip_C_GetHeaderColor, Temp_byte_Variable) == 0x000014, "Member 'WBP_ItemTooltip_C_GetHeaderColor::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_ItemTooltip_C_GetHeaderColor, Temp_struct_Variable) == 0x000018, "Member 'WBP_ItemTooltip_C_GetHeaderColor::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(WBP_ItemTooltip_C_GetHeaderColor, Temp_struct_Variable_1) == 0x000028, "Member 'WBP_ItemTooltip_C_GetHeaderColor::Temp_struct_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_ItemTooltip_C_GetHeaderColor, Temp_struct_Variable_2) == 0x000038, "Member 'WBP_ItemTooltip_C_GetHeaderColor::Temp_struct_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_ItemTooltip_C_GetHeaderColor, Temp_struct_Variable_3) == 0x000048, "Member 'WBP_ItemTooltip_C_GetHeaderColor::Temp_struct_Variable_3' has a wrong offset!");
static_assert(offsetof(WBP_ItemTooltip_C_GetHeaderColor, Temp_struct_Variable_4) == 0x000058, "Member 'WBP_ItemTooltip_C_GetHeaderColor::Temp_struct_Variable_4' has a wrong offset!");
static_assert(offsetof(WBP_ItemTooltip_C_GetHeaderColor, Temp_struct_Variable_5) == 0x000068, "Member 'WBP_ItemTooltip_C_GetHeaderColor::Temp_struct_Variable_5' has a wrong offset!");
static_assert(offsetof(WBP_ItemTooltip_C_GetHeaderColor, Temp_struct_Variable_6) == 0x000078, "Member 'WBP_ItemTooltip_C_GetHeaderColor::Temp_struct_Variable_6' has a wrong offset!");
static_assert(offsetof(WBP_ItemTooltip_C_GetHeaderColor, K2Node_Select_Default) == 0x000088, "Member 'WBP_ItemTooltip_C_GetHeaderColor::K2Node_Select_Default' has a wrong offset!");

// Function WBP_ItemTooltip.WBP_ItemTooltip_C.GetItemName
// 0x0178 (0x0178 - 0x0000)
struct WBP_ItemTooltip_C_GetItemName final 
{
public:
	class UVAL_ItemTypeDefinitionAsset*           ItemType;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         TintPersistID;                                     // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4A0A[0x4];                                     // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Text;                                              // 0x0010(0x0018)(Parm, OutParm)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4A0B[0x7];                                     // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UVAL_TintAsset>          CallFunc_GetTintFromPersistID_ReturnValue;         // 0x0030(0x0030)(UObjectWrapper, HasGetValueTypeHash)
	TSoftObjectPtr<class UVAL_TintAsset>          CallFunc_GetTintFromPersistID_ReturnValue_1;       // 0x0060(0x0030)(UObjectWrapper, HasGetValueTypeHash)
	class UObject*                                CallFunc_LoadAsset_Blocking_ReturnValue;           // 0x0090(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValidSoftObjectReference_ReturnValue;   // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4A0C[0x7];                                     // 0x0099(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UVAL_TintAsset*                         K2Node_DynamicCast_AsTint_Asset;                   // 0x00A0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x00A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4A0D[0x6];                                     // 0x00AA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x00B0(0x0050)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x0100(0x0050)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0150(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0160(0x0018)()
};
static_assert(alignof(WBP_ItemTooltip_C_GetItemName) == 0x000008, "Wrong alignment on WBP_ItemTooltip_C_GetItemName");
static_assert(sizeof(WBP_ItemTooltip_C_GetItemName) == 0x000178, "Wrong size on WBP_ItemTooltip_C_GetItemName");
static_assert(offsetof(WBP_ItemTooltip_C_GetItemName, ItemType) == 0x000000, "Member 'WBP_ItemTooltip_C_GetItemName::ItemType' has a wrong offset!");
static_assert(offsetof(WBP_ItemTooltip_C_GetItemName, TintPersistID) == 0x000008, "Member 'WBP_ItemTooltip_C_GetItemName::TintPersistID' has a wrong offset!");
static_assert(offsetof(WBP_ItemTooltip_C_GetItemName, Text) == 0x000010, "Member 'WBP_ItemTooltip_C_GetItemName::Text' has a wrong offset!");
static_assert(offsetof(WBP_ItemTooltip_C_GetItemName, CallFunc_Greater_IntInt_ReturnValue) == 0x000028, "Member 'WBP_ItemTooltip_C_GetItemName::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ItemTooltip_C_GetItemName, CallFunc_GetTintFromPersistID_ReturnValue) == 0x000030, "Member 'WBP_ItemTooltip_C_GetItemName::CallFunc_GetTintFromPersistID_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ItemTooltip_C_GetItemName, CallFunc_GetTintFromPersistID_ReturnValue_1) == 0x000060, "Member 'WBP_ItemTooltip_C_GetItemName::CallFunc_GetTintFromPersistID_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_ItemTooltip_C_GetItemName, CallFunc_LoadAsset_Blocking_ReturnValue) == 0x000090, "Member 'WBP_ItemTooltip_C_GetItemName::CallFunc_LoadAsset_Blocking_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ItemTooltip_C_GetItemName, CallFunc_IsValidSoftObjectReference_ReturnValue) == 0x000098, "Member 'WBP_ItemTooltip_C_GetItemName::CallFunc_IsValidSoftObjectReference_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ItemTooltip_C_GetItemName, K2Node_DynamicCast_AsTint_Asset) == 0x0000A0, "Member 'WBP_ItemTooltip_C_GetItemName::K2Node_DynamicCast_AsTint_Asset' has a wrong offset!");
static_assert(offsetof(WBP_ItemTooltip_C_GetItemName, K2Node_DynamicCast_bSuccess) == 0x0000A8, "Member 'WBP_ItemTooltip_C_GetItemName::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WBP_ItemTooltip_C_GetItemName, CallFunc_BooleanAND_ReturnValue) == 0x0000A9, "Member 'WBP_ItemTooltip_C_GetItemName::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ItemTooltip_C_GetItemName, K2Node_MakeStruct_FormatArgumentData) == 0x0000B0, "Member 'WBP_ItemTooltip_C_GetItemName::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(WBP_ItemTooltip_C_GetItemName, K2Node_MakeStruct_FormatArgumentData_1) == 0x000100, "Member 'WBP_ItemTooltip_C_GetItemName::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(WBP_ItemTooltip_C_GetItemName, K2Node_MakeArray_Array) == 0x000150, "Member 'WBP_ItemTooltip_C_GetItemName::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(WBP_ItemTooltip_C_GetItemName, CallFunc_Format_ReturnValue) == 0x000160, "Member 'WBP_ItemTooltip_C_GetItemName::CallFunc_Format_ReturnValue' has a wrong offset!");

// Function WBP_ItemTooltip.WBP_ItemTooltip_C.GetNormalBuffIcon
// 0x00B8 (0x00B8 - 0x0000)
struct WBP_ItemTooltip_C_GetNormalBuffIcon final 
{
public:
	class UVAL_ItemTypeDefinitionAsset*           ItemType;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             BuffIcon;                                          // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EValeriaFuncResult                            CallFunc_GetBuffDataTableRow_OutResult;            // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4A0E[0x6];                                     // 0x0012(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FBuffConfig                            CallFunc_GetBuffDataTableRow_ReturnValue;          // 0x0018(0x0098)()
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_ItemTooltip_C_GetNormalBuffIcon) == 0x000008, "Wrong alignment on WBP_ItemTooltip_C_GetNormalBuffIcon");
static_assert(sizeof(WBP_ItemTooltip_C_GetNormalBuffIcon) == 0x0000B8, "Wrong size on WBP_ItemTooltip_C_GetNormalBuffIcon");
static_assert(offsetof(WBP_ItemTooltip_C_GetNormalBuffIcon, ItemType) == 0x000000, "Member 'WBP_ItemTooltip_C_GetNormalBuffIcon::ItemType' has a wrong offset!");
static_assert(offsetof(WBP_ItemTooltip_C_GetNormalBuffIcon, BuffIcon) == 0x000008, "Member 'WBP_ItemTooltip_C_GetNormalBuffIcon::BuffIcon' has a wrong offset!");
static_assert(offsetof(WBP_ItemTooltip_C_GetNormalBuffIcon, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'WBP_ItemTooltip_C_GetNormalBuffIcon::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ItemTooltip_C_GetNormalBuffIcon, CallFunc_GetBuffDataTableRow_OutResult) == 0x000011, "Member 'WBP_ItemTooltip_C_GetNormalBuffIcon::CallFunc_GetBuffDataTableRow_OutResult' has a wrong offset!");
static_assert(offsetof(WBP_ItemTooltip_C_GetNormalBuffIcon, CallFunc_GetBuffDataTableRow_ReturnValue) == 0x000018, "Member 'WBP_ItemTooltip_C_GetNormalBuffIcon::CallFunc_GetBuffDataTableRow_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ItemTooltip_C_GetNormalBuffIcon, K2Node_SwitchEnum_CmpSuccess) == 0x0000B0, "Member 'WBP_ItemTooltip_C_GetNormalBuffIcon::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

// Function WBP_ItemTooltip.WBP_ItemTooltip_C.GetNormalBuffText
// 0x00C8 (0x00C8 - 0x0000)
struct WBP_ItemTooltip_C_GetNormalBuffText final 
{
public:
	class UVAL_ItemTypeDefinitionAsset*           ItemType;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FText                                   BuffText;                                          // 0x0008(0x0018)(Parm, OutParm)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EValeriaFuncResult                            CallFunc_GetBuffDataTableRow_OutResult;            // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4A0F[0x6];                                     // 0x0022(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FBuffConfig                            CallFunc_GetBuffDataTableRow_ReturnValue;          // 0x0028(0x0098)()
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_ItemTooltip_C_GetNormalBuffText) == 0x000008, "Wrong alignment on WBP_ItemTooltip_C_GetNormalBuffText");
static_assert(sizeof(WBP_ItemTooltip_C_GetNormalBuffText) == 0x0000C8, "Wrong size on WBP_ItemTooltip_C_GetNormalBuffText");
static_assert(offsetof(WBP_ItemTooltip_C_GetNormalBuffText, ItemType) == 0x000000, "Member 'WBP_ItemTooltip_C_GetNormalBuffText::ItemType' has a wrong offset!");
static_assert(offsetof(WBP_ItemTooltip_C_GetNormalBuffText, BuffText) == 0x000008, "Member 'WBP_ItemTooltip_C_GetNormalBuffText::BuffText' has a wrong offset!");
static_assert(offsetof(WBP_ItemTooltip_C_GetNormalBuffText, CallFunc_IsValid_ReturnValue) == 0x000020, "Member 'WBP_ItemTooltip_C_GetNormalBuffText::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ItemTooltip_C_GetNormalBuffText, CallFunc_GetBuffDataTableRow_OutResult) == 0x000021, "Member 'WBP_ItemTooltip_C_GetNormalBuffText::CallFunc_GetBuffDataTableRow_OutResult' has a wrong offset!");
static_assert(offsetof(WBP_ItemTooltip_C_GetNormalBuffText, CallFunc_GetBuffDataTableRow_ReturnValue) == 0x000028, "Member 'WBP_ItemTooltip_C_GetNormalBuffText::CallFunc_GetBuffDataTableRow_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ItemTooltip_C_GetNormalBuffText, K2Node_SwitchEnum_CmpSuccess) == 0x0000C0, "Member 'WBP_ItemTooltip_C_GetNormalBuffText::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

// Function WBP_ItemTooltip.WBP_ItemTooltip_C.GetQualityBuffIcon
// 0x00B8 (0x00B8 - 0x0000)
struct WBP_ItemTooltip_C_GetQualityBuffIcon final 
{
public:
	class UVAL_ItemTypeDefinitionAsset*           ItemType;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             BuffIcon;                                          // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EValeriaFuncResult                            CallFunc_GetBuffDataTableRow_OutResult;            // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4A10[0x6];                                     // 0x0012(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FBuffConfig                            CallFunc_GetBuffDataTableRow_ReturnValue;          // 0x0018(0x0098)()
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_ItemTooltip_C_GetQualityBuffIcon) == 0x000008, "Wrong alignment on WBP_ItemTooltip_C_GetQualityBuffIcon");
static_assert(sizeof(WBP_ItemTooltip_C_GetQualityBuffIcon) == 0x0000B8, "Wrong size on WBP_ItemTooltip_C_GetQualityBuffIcon");
static_assert(offsetof(WBP_ItemTooltip_C_GetQualityBuffIcon, ItemType) == 0x000000, "Member 'WBP_ItemTooltip_C_GetQualityBuffIcon::ItemType' has a wrong offset!");
static_assert(offsetof(WBP_ItemTooltip_C_GetQualityBuffIcon, BuffIcon) == 0x000008, "Member 'WBP_ItemTooltip_C_GetQualityBuffIcon::BuffIcon' has a wrong offset!");
static_assert(offsetof(WBP_ItemTooltip_C_GetQualityBuffIcon, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'WBP_ItemTooltip_C_GetQualityBuffIcon::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ItemTooltip_C_GetQualityBuffIcon, CallFunc_GetBuffDataTableRow_OutResult) == 0x000011, "Member 'WBP_ItemTooltip_C_GetQualityBuffIcon::CallFunc_GetBuffDataTableRow_OutResult' has a wrong offset!");
static_assert(offsetof(WBP_ItemTooltip_C_GetQualityBuffIcon, CallFunc_GetBuffDataTableRow_ReturnValue) == 0x000018, "Member 'WBP_ItemTooltip_C_GetQualityBuffIcon::CallFunc_GetBuffDataTableRow_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ItemTooltip_C_GetQualityBuffIcon, K2Node_SwitchEnum_CmpSuccess) == 0x0000B0, "Member 'WBP_ItemTooltip_C_GetQualityBuffIcon::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

// Function WBP_ItemTooltip.WBP_ItemTooltip_C.GetQualityBuffText
// 0x00C8 (0x00C8 - 0x0000)
struct WBP_ItemTooltip_C_GetQualityBuffText final 
{
public:
	class UVAL_ItemTypeDefinitionAsset*           ItemType;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FText                                   BuffText;                                          // 0x0008(0x0018)(Parm, OutParm)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EValeriaFuncResult                            CallFunc_GetBuffDataTableRow_OutResult;            // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4A11[0x6];                                     // 0x0022(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FBuffConfig                            CallFunc_GetBuffDataTableRow_ReturnValue;          // 0x0028(0x0098)()
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_ItemTooltip_C_GetQualityBuffText) == 0x000008, "Wrong alignment on WBP_ItemTooltip_C_GetQualityBuffText");
static_assert(sizeof(WBP_ItemTooltip_C_GetQualityBuffText) == 0x0000C8, "Wrong size on WBP_ItemTooltip_C_GetQualityBuffText");
static_assert(offsetof(WBP_ItemTooltip_C_GetQualityBuffText, ItemType) == 0x000000, "Member 'WBP_ItemTooltip_C_GetQualityBuffText::ItemType' has a wrong offset!");
static_assert(offsetof(WBP_ItemTooltip_C_GetQualityBuffText, BuffText) == 0x000008, "Member 'WBP_ItemTooltip_C_GetQualityBuffText::BuffText' has a wrong offset!");
static_assert(offsetof(WBP_ItemTooltip_C_GetQualityBuffText, CallFunc_IsValid_ReturnValue) == 0x000020, "Member 'WBP_ItemTooltip_C_GetQualityBuffText::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ItemTooltip_C_GetQualityBuffText, CallFunc_GetBuffDataTableRow_OutResult) == 0x000021, "Member 'WBP_ItemTooltip_C_GetQualityBuffText::CallFunc_GetBuffDataTableRow_OutResult' has a wrong offset!");
static_assert(offsetof(WBP_ItemTooltip_C_GetQualityBuffText, CallFunc_GetBuffDataTableRow_ReturnValue) == 0x000028, "Member 'WBP_ItemTooltip_C_GetQualityBuffText::CallFunc_GetBuffDataTableRow_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ItemTooltip_C_GetQualityBuffText, K2Node_SwitchEnum_CmpSuccess) == 0x0000C0, "Member 'WBP_ItemTooltip_C_GetQualityBuffText::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

// Function WBP_ItemTooltip.WBP_ItemTooltip_C.GetSellValuePerItem
// 0x0078 (0x0078 - 0x0000)
struct WBP_ItemTooltip_C_GetSellValuePerItem final 
{
public:
	struct FValeriaItem                           Param_Item;                                        // 0x0000(0x0068)(BlueprintVisible, BlueprintReadOnly, Parm)
	int32                                         Amount;                                            // 0x0068(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_ComputeSaleValuePerItem_vitalAmountPerItem; // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EVitalType                                    CallFunc_ComputeSaleValuePerItem_vitalType;        // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ItemIsEmpty_ReturnValue;                  // 0x0071(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_ItemTooltip_C_GetSellValuePerItem) == 0x000008, "Wrong alignment on WBP_ItemTooltip_C_GetSellValuePerItem");
static_assert(sizeof(WBP_ItemTooltip_C_GetSellValuePerItem) == 0x000078, "Wrong size on WBP_ItemTooltip_C_GetSellValuePerItem");
static_assert(offsetof(WBP_ItemTooltip_C_GetSellValuePerItem, Param_Item) == 0x000000, "Member 'WBP_ItemTooltip_C_GetSellValuePerItem::Param_Item' has a wrong offset!");
static_assert(offsetof(WBP_ItemTooltip_C_GetSellValuePerItem, Amount) == 0x000068, "Member 'WBP_ItemTooltip_C_GetSellValuePerItem::Amount' has a wrong offset!");
static_assert(offsetof(WBP_ItemTooltip_C_GetSellValuePerItem, CallFunc_ComputeSaleValuePerItem_vitalAmountPerItem) == 0x00006C, "Member 'WBP_ItemTooltip_C_GetSellValuePerItem::CallFunc_ComputeSaleValuePerItem_vitalAmountPerItem' has a wrong offset!");
static_assert(offsetof(WBP_ItemTooltip_C_GetSellValuePerItem, CallFunc_ComputeSaleValuePerItem_vitalType) == 0x000070, "Member 'WBP_ItemTooltip_C_GetSellValuePerItem::CallFunc_ComputeSaleValuePerItem_vitalType' has a wrong offset!");
static_assert(offsetof(WBP_ItemTooltip_C_GetSellValuePerItem, CallFunc_ItemIsEmpty_ReturnValue) == 0x000071, "Member 'WBP_ItemTooltip_C_GetSellValuePerItem::CallFunc_ItemIsEmpty_ReturnValue' has a wrong offset!");

// Function WBP_ItemTooltip.WBP_ItemTooltip_C.GetSellValueText
// 0x00A0 (0x00A0 - 0x0000)
struct WBP_ItemTooltip_C_GetSellValueText final 
{
public:
	struct FValeriaItem                           Param_Item;                                        // 0x0000(0x0068)(BlueprintVisible, BlueprintReadOnly, Parm)
	class FText                                   Text;                                              // 0x0068(0x0018)(Parm, OutParm)
	class FText                                   CallFunc_GetSellTextForItem_OutSellText;           // 0x0080(0x0018)()
	bool                                          CallFunc_ItemIsEmpty_ReturnValue;                  // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_ItemTooltip_C_GetSellValueText) == 0x000008, "Wrong alignment on WBP_ItemTooltip_C_GetSellValueText");
static_assert(sizeof(WBP_ItemTooltip_C_GetSellValueText) == 0x0000A0, "Wrong size on WBP_ItemTooltip_C_GetSellValueText");
static_assert(offsetof(WBP_ItemTooltip_C_GetSellValueText, Param_Item) == 0x000000, "Member 'WBP_ItemTooltip_C_GetSellValueText::Param_Item' has a wrong offset!");
static_assert(offsetof(WBP_ItemTooltip_C_GetSellValueText, Text) == 0x000068, "Member 'WBP_ItemTooltip_C_GetSellValueText::Text' has a wrong offset!");
static_assert(offsetof(WBP_ItemTooltip_C_GetSellValueText, CallFunc_GetSellTextForItem_OutSellText) == 0x000080, "Member 'WBP_ItemTooltip_C_GetSellValueText::CallFunc_GetSellTextForItem_OutSellText' has a wrong offset!");
static_assert(offsetof(WBP_ItemTooltip_C_GetSellValueText, CallFunc_ItemIsEmpty_ReturnValue) == 0x000098, "Member 'WBP_ItemTooltip_C_GetSellValueText::CallFunc_ItemIsEmpty_ReturnValue' has a wrong offset!");

// Function WBP_ItemTooltip.WBP_ItemTooltip_C.GetStarQualityFocusReward
// 0x01A8 (0x01A8 - 0x0000)
struct WBP_ItemTooltip_C_GetStarQualityFocusReward final 
{
public:
	struct FQuestRewardConfig                     QuestRewardConfig;                                 // 0x0000(0x0180)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	int32                                         FocusAmount;                                       // 0x0180(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4A12[0x4];                                     // 0x0184(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UQualityGlobalConfig*                   CallFunc_GetQualityGlobalConfig_ReturnValue;       // 0x0188(0x0008)(ConstParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_IntFloat_ReturnValue;            // 0x0190(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FTrunc_ReturnValue;                       // 0x0198(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4A13[0x4];                                     // 0x019C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_IntFloat_B_ImplicitCast;         // 0x01A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_ItemTooltip_C_GetStarQualityFocusReward) == 0x000008, "Wrong alignment on WBP_ItemTooltip_C_GetStarQualityFocusReward");
static_assert(sizeof(WBP_ItemTooltip_C_GetStarQualityFocusReward) == 0x0001A8, "Wrong size on WBP_ItemTooltip_C_GetStarQualityFocusReward");
static_assert(offsetof(WBP_ItemTooltip_C_GetStarQualityFocusReward, QuestRewardConfig) == 0x000000, "Member 'WBP_ItemTooltip_C_GetStarQualityFocusReward::QuestRewardConfig' has a wrong offset!");
static_assert(offsetof(WBP_ItemTooltip_C_GetStarQualityFocusReward, FocusAmount) == 0x000180, "Member 'WBP_ItemTooltip_C_GetStarQualityFocusReward::FocusAmount' has a wrong offset!");
static_assert(offsetof(WBP_ItemTooltip_C_GetStarQualityFocusReward, CallFunc_GetQualityGlobalConfig_ReturnValue) == 0x000188, "Member 'WBP_ItemTooltip_C_GetStarQualityFocusReward::CallFunc_GetQualityGlobalConfig_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ItemTooltip_C_GetStarQualityFocusReward, CallFunc_Multiply_IntFloat_ReturnValue) == 0x000190, "Member 'WBP_ItemTooltip_C_GetStarQualityFocusReward::CallFunc_Multiply_IntFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ItemTooltip_C_GetStarQualityFocusReward, CallFunc_FTrunc_ReturnValue) == 0x000198, "Member 'WBP_ItemTooltip_C_GetStarQualityFocusReward::CallFunc_FTrunc_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ItemTooltip_C_GetStarQualityFocusReward, CallFunc_Multiply_IntFloat_B_ImplicitCast) == 0x0001A0, "Member 'WBP_ItemTooltip_C_GetStarQualityFocusReward::CallFunc_Multiply_IntFloat_B_ImplicitCast' has a wrong offset!");

// Function WBP_ItemTooltip.WBP_ItemTooltip_C.GetTotalSellValue
// 0x0080 (0x0080 - 0x0000)
struct WBP_ItemTooltip_C_GetTotalSellValue final 
{
public:
	struct FValeriaItem                           Param_Item;                                        // 0x0000(0x0068)(BlueprintVisible, BlueprintReadOnly, Parm)
	int32                                         Amount;                                            // 0x0068(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ItemIsEmpty_ReturnValue;                  // 0x006C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4A14[0x3];                                     // 0x006D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_ComputeSaleValuePerItem_vitalAmountPerItem; // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EVitalType                                    CallFunc_ComputeSaleValuePerItem_vitalType;        // 0x0074(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4A15[0x3];                                     // 0x0075(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Multiply_IntInt_ReturnValue;              // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_ItemTooltip_C_GetTotalSellValue) == 0x000008, "Wrong alignment on WBP_ItemTooltip_C_GetTotalSellValue");
static_assert(sizeof(WBP_ItemTooltip_C_GetTotalSellValue) == 0x000080, "Wrong size on WBP_ItemTooltip_C_GetTotalSellValue");
static_assert(offsetof(WBP_ItemTooltip_C_GetTotalSellValue, Param_Item) == 0x000000, "Member 'WBP_ItemTooltip_C_GetTotalSellValue::Param_Item' has a wrong offset!");
static_assert(offsetof(WBP_ItemTooltip_C_GetTotalSellValue, Amount) == 0x000068, "Member 'WBP_ItemTooltip_C_GetTotalSellValue::Amount' has a wrong offset!");
static_assert(offsetof(WBP_ItemTooltip_C_GetTotalSellValue, CallFunc_ItemIsEmpty_ReturnValue) == 0x00006C, "Member 'WBP_ItemTooltip_C_GetTotalSellValue::CallFunc_ItemIsEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ItemTooltip_C_GetTotalSellValue, CallFunc_ComputeSaleValuePerItem_vitalAmountPerItem) == 0x000070, "Member 'WBP_ItemTooltip_C_GetTotalSellValue::CallFunc_ComputeSaleValuePerItem_vitalAmountPerItem' has a wrong offset!");
static_assert(offsetof(WBP_ItemTooltip_C_GetTotalSellValue, CallFunc_ComputeSaleValuePerItem_vitalType) == 0x000074, "Member 'WBP_ItemTooltip_C_GetTotalSellValue::CallFunc_ComputeSaleValuePerItem_vitalType' has a wrong offset!");
static_assert(offsetof(WBP_ItemTooltip_C_GetTotalSellValue, CallFunc_Multiply_IntInt_ReturnValue) == 0x000078, "Member 'WBP_ItemTooltip_C_GetTotalSellValue::CallFunc_Multiply_IntInt_ReturnValue' has a wrong offset!");

// Function WBP_ItemTooltip.WBP_ItemTooltip_C.IsRecipe
// 0x0002 (0x0002 - 0x0000)
struct WBP_ItemTooltip_C_IsRecipe final 
{
public:
	bool                                          Param_IsRecipe;                                    // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_ItemTooltip_C_IsRecipe) == 0x000001, "Wrong alignment on WBP_ItemTooltip_C_IsRecipe");
static_assert(sizeof(WBP_ItemTooltip_C_IsRecipe) == 0x000002, "Wrong size on WBP_ItemTooltip_C_IsRecipe");
static_assert(offsetof(WBP_ItemTooltip_C_IsRecipe, Param_IsRecipe) == 0x000000, "Member 'WBP_ItemTooltip_C_IsRecipe::Param_IsRecipe' has a wrong offset!");
static_assert(offsetof(WBP_ItemTooltip_C_IsRecipe, CallFunc_NotEqual_IntInt_ReturnValue) == 0x000001, "Member 'WBP_ItemTooltip_C_IsRecipe::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");

// Function WBP_ItemTooltip.WBP_ItemTooltip_C.IsStarQuality
// 0x0070 (0x0070 - 0x0000)
struct WBP_ItemTooltip_C_IsStarQuality final 
{
public:
	struct FValeriaItem                           Param_Item;                                        // 0x0000(0x0068)(BlueprintVisible, BlueprintReadOnly, Parm)
	bool                                          Param_IsStarQuality;                               // 0x0068(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_ByteByte_ReturnValue;             // 0x0069(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_ItemTooltip_C_IsStarQuality) == 0x000008, "Wrong alignment on WBP_ItemTooltip_C_IsStarQuality");
static_assert(sizeof(WBP_ItemTooltip_C_IsStarQuality) == 0x000070, "Wrong size on WBP_ItemTooltip_C_IsStarQuality");
static_assert(offsetof(WBP_ItemTooltip_C_IsStarQuality, Param_Item) == 0x000000, "Member 'WBP_ItemTooltip_C_IsStarQuality::Param_Item' has a wrong offset!");
static_assert(offsetof(WBP_ItemTooltip_C_IsStarQuality, Param_IsStarQuality) == 0x000068, "Member 'WBP_ItemTooltip_C_IsStarQuality::Param_IsStarQuality' has a wrong offset!");
static_assert(offsetof(WBP_ItemTooltip_C_IsStarQuality, CallFunc_Greater_ByteByte_ReturnValue) == 0x000069, "Member 'WBP_ItemTooltip_C_IsStarQuality::CallFunc_Greater_ByteByte_ReturnValue' has a wrong offset!");

// Function WBP_ItemTooltip.WBP_ItemTooltip_C.Set Item for Tooltip
// 0x0098 (0x0098 - 0x0000)
struct WBP_ItemTooltip_C_Set_Item_for_Tooltip final 
{
public:
	struct FValeriaItem                           NewItem;                                           // 0x0000(0x0068)(BlueprintVisible, BlueprintReadOnly, Parm)
	class UTexture2D*                             BuffIcon;                                          // 0x0068(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FText                                   BuffText;                                          // 0x0070(0x0018)(Edit, BlueprintVisible)
	class UVAL_ItemTypeDefinitionAsset*           ItemType;                                          // 0x0088(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          bHasAlert;                                         // 0x0090(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_ItemTooltip_C_Set_Item_for_Tooltip) == 0x000008, "Wrong alignment on WBP_ItemTooltip_C_Set_Item_for_Tooltip");
static_assert(sizeof(WBP_ItemTooltip_C_Set_Item_for_Tooltip) == 0x000098, "Wrong size on WBP_ItemTooltip_C_Set_Item_for_Tooltip");
static_assert(offsetof(WBP_ItemTooltip_C_Set_Item_for_Tooltip, NewItem) == 0x000000, "Member 'WBP_ItemTooltip_C_Set_Item_for_Tooltip::NewItem' has a wrong offset!");
static_assert(offsetof(WBP_ItemTooltip_C_Set_Item_for_Tooltip, BuffIcon) == 0x000068, "Member 'WBP_ItemTooltip_C_Set_Item_for_Tooltip::BuffIcon' has a wrong offset!");
static_assert(offsetof(WBP_ItemTooltip_C_Set_Item_for_Tooltip, BuffText) == 0x000070, "Member 'WBP_ItemTooltip_C_Set_Item_for_Tooltip::BuffText' has a wrong offset!");
static_assert(offsetof(WBP_ItemTooltip_C_Set_Item_for_Tooltip, ItemType) == 0x000088, "Member 'WBP_ItemTooltip_C_Set_Item_for_Tooltip::ItemType' has a wrong offset!");
static_assert(offsetof(WBP_ItemTooltip_C_Set_Item_for_Tooltip, bHasAlert) == 0x000090, "Member 'WBP_ItemTooltip_C_Set_Item_for_Tooltip::bHasAlert' has a wrong offset!");

// Function WBP_ItemTooltip.WBP_ItemTooltip_C.SetCategory
// 0x0060 (0x0060 - 0x0000)
struct WBP_ItemTooltip_C_SetCategory final 
{
public:
	class UVAL_ItemTypeDefinitionAsset*           ItemType;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4A16[0x7];                                     // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Temp_text_Variable;                                // 0x0010(0x0018)()
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4A17[0x7];                                     // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_GetItemCategoryName_Name;                 // 0x0030(0x0018)()
	class FText                                   K2Node_Select_Default;                             // 0x0048(0x0018)()
};
static_assert(alignof(WBP_ItemTooltip_C_SetCategory) == 0x000008, "Wrong alignment on WBP_ItemTooltip_C_SetCategory");
static_assert(sizeof(WBP_ItemTooltip_C_SetCategory) == 0x000060, "Wrong size on WBP_ItemTooltip_C_SetCategory");
static_assert(offsetof(WBP_ItemTooltip_C_SetCategory, ItemType) == 0x000000, "Member 'WBP_ItemTooltip_C_SetCategory::ItemType' has a wrong offset!");
static_assert(offsetof(WBP_ItemTooltip_C_SetCategory, Temp_bool_Variable) == 0x000008, "Member 'WBP_ItemTooltip_C_SetCategory::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_ItemTooltip_C_SetCategory, Temp_text_Variable) == 0x000010, "Member 'WBP_ItemTooltip_C_SetCategory::Temp_text_Variable' has a wrong offset!");
static_assert(offsetof(WBP_ItemTooltip_C_SetCategory, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x000028, "Member 'WBP_ItemTooltip_C_SetCategory::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ItemTooltip_C_SetCategory, CallFunc_GetItemCategoryName_Name) == 0x000030, "Member 'WBP_ItemTooltip_C_SetCategory::CallFunc_GetItemCategoryName_Name' has a wrong offset!");
static_assert(offsetof(WBP_ItemTooltip_C_SetCategory, K2Node_Select_Default) == 0x000048, "Member 'WBP_ItemTooltip_C_SetCategory::K2Node_Select_Default' has a wrong offset!");

// Function WBP_ItemTooltip.WBP_ItemTooltip_C.SetCost
// 0x0178 (0x0178 - 0x0000)
struct WBP_ItemTooltip_C_SetCost final 
{
public:
	struct FStoreItem                             StoreItemToDisplay;                                // 0x0000(0x0108)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	bool                                          Temp_bool_Variable;                                // 0x0108(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4A18[0x7];                                     // 0x0109(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Temp_text_Variable;                                // 0x0110(0x0018)()
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0128(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4A19[0x7];                                     // 0x0129(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Select_Default;                             // 0x0130(0x0018)()
	TSoftObjectPtr<class UTexture2D>              CallFunc_GetCostIcon_Icon;                         // 0x0148(0x0030)(HasGetValueTypeHash)
};
static_assert(alignof(WBP_ItemTooltip_C_SetCost) == 0x000008, "Wrong alignment on WBP_ItemTooltip_C_SetCost");
static_assert(sizeof(WBP_ItemTooltip_C_SetCost) == 0x000178, "Wrong size on WBP_ItemTooltip_C_SetCost");
static_assert(offsetof(WBP_ItemTooltip_C_SetCost, StoreItemToDisplay) == 0x000000, "Member 'WBP_ItemTooltip_C_SetCost::StoreItemToDisplay' has a wrong offset!");
static_assert(offsetof(WBP_ItemTooltip_C_SetCost, Temp_bool_Variable) == 0x000108, "Member 'WBP_ItemTooltip_C_SetCost::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_ItemTooltip_C_SetCost, Temp_text_Variable) == 0x000110, "Member 'WBP_ItemTooltip_C_SetCost::Temp_text_Variable' has a wrong offset!");
static_assert(offsetof(WBP_ItemTooltip_C_SetCost, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000128, "Member 'WBP_ItemTooltip_C_SetCost::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ItemTooltip_C_SetCost, K2Node_Select_Default) == 0x000130, "Member 'WBP_ItemTooltip_C_SetCost::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_ItemTooltip_C_SetCost, CallFunc_GetCostIcon_Icon) == 0x000148, "Member 'WBP_ItemTooltip_C_SetCost::CallFunc_GetCostIcon_Icon' has a wrong offset!");

// Function WBP_ItemTooltip.WBP_ItemTooltip_C.SetDescription
// 0x0080 (0x0080 - 0x0000)
struct WBP_ItemTooltip_C_SetDescription final 
{
public:
	struct FValeriaItem                           Param_Item;                                        // 0x0000(0x0068)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class FText                                   CallFunc_GetItemDescription_ReturnValue;           // 0x0068(0x0018)()
};
static_assert(alignof(WBP_ItemTooltip_C_SetDescription) == 0x000008, "Wrong alignment on WBP_ItemTooltip_C_SetDescription");
static_assert(sizeof(WBP_ItemTooltip_C_SetDescription) == 0x000080, "Wrong size on WBP_ItemTooltip_C_SetDescription");
static_assert(offsetof(WBP_ItemTooltip_C_SetDescription, Param_Item) == 0x000000, "Member 'WBP_ItemTooltip_C_SetDescription::Param_Item' has a wrong offset!");
static_assert(offsetof(WBP_ItemTooltip_C_SetDescription, CallFunc_GetItemDescription_ReturnValue) == 0x000068, "Member 'WBP_ItemTooltip_C_SetDescription::CallFunc_GetItemDescription_ReturnValue' has a wrong offset!");

// Function WBP_ItemTooltip.WBP_ItemTooltip_C.SetName
// 0x0028 (0x0028 - 0x0000)
struct WBP_ItemTooltip_C_SetName final 
{
public:
	class UVAL_ItemTypeDefinitionAsset*           ItemType;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         TintPersistID;                                     // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4A1A[0x4];                                     // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_GetItemName_Text;                         // 0x0010(0x0018)()
};
static_assert(alignof(WBP_ItemTooltip_C_SetName) == 0x000008, "Wrong alignment on WBP_ItemTooltip_C_SetName");
static_assert(sizeof(WBP_ItemTooltip_C_SetName) == 0x000028, "Wrong size on WBP_ItemTooltip_C_SetName");
static_assert(offsetof(WBP_ItemTooltip_C_SetName, ItemType) == 0x000000, "Member 'WBP_ItemTooltip_C_SetName::ItemType' has a wrong offset!");
static_assert(offsetof(WBP_ItemTooltip_C_SetName, TintPersistID) == 0x000008, "Member 'WBP_ItemTooltip_C_SetName::TintPersistID' has a wrong offset!");
static_assert(offsetof(WBP_ItemTooltip_C_SetName, CallFunc_GetItemName_Text) == 0x000010, "Member 'WBP_ItemTooltip_C_SetName::CallFunc_GetItemName_Text' has a wrong offset!");

// Function WBP_ItemTooltip.WBP_ItemTooltip_C.SetRarity
// 0x0024 (0x0024 - 0x0000)
struct WBP_ItemTooltip_C_SetRarity final 
{
public:
	EItemRarity                                   Rarity;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4A1B[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           CallFunc_GetBodyColor_Color;                       // 0x0004(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetHeaderColor_Color;                     // 0x0014(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_ItemTooltip_C_SetRarity) == 0x000004, "Wrong alignment on WBP_ItemTooltip_C_SetRarity");
static_assert(sizeof(WBP_ItemTooltip_C_SetRarity) == 0x000024, "Wrong size on WBP_ItemTooltip_C_SetRarity");
static_assert(offsetof(WBP_ItemTooltip_C_SetRarity, Rarity) == 0x000000, "Member 'WBP_ItemTooltip_C_SetRarity::Rarity' has a wrong offset!");
static_assert(offsetof(WBP_ItemTooltip_C_SetRarity, CallFunc_GetBodyColor_Color) == 0x000004, "Member 'WBP_ItemTooltip_C_SetRarity::CallFunc_GetBodyColor_Color' has a wrong offset!");
static_assert(offsetof(WBP_ItemTooltip_C_SetRarity, CallFunc_GetHeaderColor_Color) == 0x000014, "Member 'WBP_ItemTooltip_C_SetRarity::CallFunc_GetHeaderColor_Color' has a wrong offset!");

// Function WBP_ItemTooltip.WBP_ItemTooltip_C.SetRequirement_AlreadyOwned
// 0x0138 (0x0138 - 0x0000)
struct WBP_ItemTooltip_C_SetRequirement_AlreadyOwned final 
{
public:
	struct FStoreItem                             StoreItemToDisplay;                                // 0x0000(0x0108)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	bool                                          IsRequirementMet;                                  // 0x0108(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4A1C[0x7];                                     // 0x0109(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_TooltipRequirement_C*              CurrentRequirementWidget;                          // 0x0110(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          RequirementMet;                                    // 0x0118(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0119(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x011A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanNOR_ReturnValue;                   // 0x011B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4A1D[0x4];                                     // 0x011C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue;              // 0x0120(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPanelSlot*                             CallFunc_AddChild_ReturnValue;                     // 0x0128(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UWBP_TooltipRequirement_C*              CallFunc_Create_ReturnValue;                       // 0x0130(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_ItemTooltip_C_SetRequirement_AlreadyOwned) == 0x000008, "Wrong alignment on WBP_ItemTooltip_C_SetRequirement_AlreadyOwned");
static_assert(sizeof(WBP_ItemTooltip_C_SetRequirement_AlreadyOwned) == 0x000138, "Wrong size on WBP_ItemTooltip_C_SetRequirement_AlreadyOwned");
static_assert(offsetof(WBP_ItemTooltip_C_SetRequirement_AlreadyOwned, StoreItemToDisplay) == 0x000000, "Member 'WBP_ItemTooltip_C_SetRequirement_AlreadyOwned::StoreItemToDisplay' has a wrong offset!");
static_assert(offsetof(WBP_ItemTooltip_C_SetRequirement_AlreadyOwned, IsRequirementMet) == 0x000108, "Member 'WBP_ItemTooltip_C_SetRequirement_AlreadyOwned::IsRequirementMet' has a wrong offset!");
static_assert(offsetof(WBP_ItemTooltip_C_SetRequirement_AlreadyOwned, CurrentRequirementWidget) == 0x000110, "Member 'WBP_ItemTooltip_C_SetRequirement_AlreadyOwned::CurrentRequirementWidget' has a wrong offset!");
static_assert(offsetof(WBP_ItemTooltip_C_SetRequirement_AlreadyOwned, RequirementMet) == 0x000118, "Member 'WBP_ItemTooltip_C_SetRequirement_AlreadyOwned::RequirementMet' has a wrong offset!");
static_assert(offsetof(WBP_ItemTooltip_C_SetRequirement_AlreadyOwned, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000119, "Member 'WBP_ItemTooltip_C_SetRequirement_AlreadyOwned::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ItemTooltip_C_SetRequirement_AlreadyOwned, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x00011A, "Member 'WBP_ItemTooltip_C_SetRequirement_AlreadyOwned::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ItemTooltip_C_SetRequirement_AlreadyOwned, CallFunc_BooleanNOR_ReturnValue) == 0x00011B, "Member 'WBP_ItemTooltip_C_SetRequirement_AlreadyOwned::CallFunc_BooleanNOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ItemTooltip_C_SetRequirement_AlreadyOwned, CallFunc_GetOwningPlayer_ReturnValue) == 0x000120, "Member 'WBP_ItemTooltip_C_SetRequirement_AlreadyOwned::CallFunc_GetOwningPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ItemTooltip_C_SetRequirement_AlreadyOwned, CallFunc_AddChild_ReturnValue) == 0x000128, "Member 'WBP_ItemTooltip_C_SetRequirement_AlreadyOwned::CallFunc_AddChild_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ItemTooltip_C_SetRequirement_AlreadyOwned, CallFunc_Create_ReturnValue) == 0x000130, "Member 'WBP_ItemTooltip_C_SetRequirement_AlreadyOwned::CallFunc_Create_ReturnValue' has a wrong offset!");

// Function WBP_ItemTooltip.WBP_ItemTooltip_C.SetRequirement_CanAfford
// 0x0138 (0x0138 - 0x0000)
struct WBP_ItemTooltip_C_SetRequirement_CanAfford final 
{
public:
	struct FStoreItem                             StoreItemToDisplay;                                // 0x0000(0x0108)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	bool                                          IsRequirementMet;                                  // 0x0108(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4A1E[0x7];                                     // 0x0109(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_TooltipRequirement_C*              CurrentRequirementWidget;                          // 0x0110(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          RequirementMet;                                    // 0x0118(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4A1F[0x7];                                     // 0x0119(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue;              // 0x0120(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPanelSlot*                             CallFunc_AddChild_ReturnValue;                     // 0x0128(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UWBP_TooltipRequirement_C*              CallFunc_Create_ReturnValue;                       // 0x0130(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_ItemTooltip_C_SetRequirement_CanAfford) == 0x000008, "Wrong alignment on WBP_ItemTooltip_C_SetRequirement_CanAfford");
static_assert(sizeof(WBP_ItemTooltip_C_SetRequirement_CanAfford) == 0x000138, "Wrong size on WBP_ItemTooltip_C_SetRequirement_CanAfford");
static_assert(offsetof(WBP_ItemTooltip_C_SetRequirement_CanAfford, StoreItemToDisplay) == 0x000000, "Member 'WBP_ItemTooltip_C_SetRequirement_CanAfford::StoreItemToDisplay' has a wrong offset!");
static_assert(offsetof(WBP_ItemTooltip_C_SetRequirement_CanAfford, IsRequirementMet) == 0x000108, "Member 'WBP_ItemTooltip_C_SetRequirement_CanAfford::IsRequirementMet' has a wrong offset!");
static_assert(offsetof(WBP_ItemTooltip_C_SetRequirement_CanAfford, CurrentRequirementWidget) == 0x000110, "Member 'WBP_ItemTooltip_C_SetRequirement_CanAfford::CurrentRequirementWidget' has a wrong offset!");
static_assert(offsetof(WBP_ItemTooltip_C_SetRequirement_CanAfford, RequirementMet) == 0x000118, "Member 'WBP_ItemTooltip_C_SetRequirement_CanAfford::RequirementMet' has a wrong offset!");
static_assert(offsetof(WBP_ItemTooltip_C_SetRequirement_CanAfford, CallFunc_GetOwningPlayer_ReturnValue) == 0x000120, "Member 'WBP_ItemTooltip_C_SetRequirement_CanAfford::CallFunc_GetOwningPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ItemTooltip_C_SetRequirement_CanAfford, CallFunc_AddChild_ReturnValue) == 0x000128, "Member 'WBP_ItemTooltip_C_SetRequirement_CanAfford::CallFunc_AddChild_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ItemTooltip_C_SetRequirement_CanAfford, CallFunc_Create_ReturnValue) == 0x000130, "Member 'WBP_ItemTooltip_C_SetRequirement_CanAfford::CallFunc_Create_ReturnValue' has a wrong offset!");

// Function WBP_ItemTooltip.WBP_ItemTooltip_C.SetRequirement_PlayerState
// 0x0160 (0x0160 - 0x0000)
struct WBP_ItemTooltip_C_SetRequirement_PlayerState final 
{
public:
	struct FStoreItem                             StoreItemToDisplay;                                // 0x0000(0x0108)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	bool                                          IsRequirementMet;                                  // 0x0108(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4A20[0x7];                                     // 0x0109(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_TooltipRequirement_C*              CurrentRequirementWidget;                          // 0x0110(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          RequirementMet;                                    // 0x0118(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4A21[0x3];                                     // 0x0119(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x011C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue;              // 0x0120(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPanelSlot*                             CallFunc_AddChild_ReturnValue;                     // 0x0128(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UWBP_TooltipRequirement_C*              CallFunc_Create_ReturnValue;                       // 0x0130(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0138(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x013C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Array_Get_Item;                           // 0x0140(0x0018)()
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0158(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x015C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_ItemTooltip_C_SetRequirement_PlayerState) == 0x000008, "Wrong alignment on WBP_ItemTooltip_C_SetRequirement_PlayerState");
static_assert(sizeof(WBP_ItemTooltip_C_SetRequirement_PlayerState) == 0x000160, "Wrong size on WBP_ItemTooltip_C_SetRequirement_PlayerState");
static_assert(offsetof(WBP_ItemTooltip_C_SetRequirement_PlayerState, StoreItemToDisplay) == 0x000000, "Member 'WBP_ItemTooltip_C_SetRequirement_PlayerState::StoreItemToDisplay' has a wrong offset!");
static_assert(offsetof(WBP_ItemTooltip_C_SetRequirement_PlayerState, IsRequirementMet) == 0x000108, "Member 'WBP_ItemTooltip_C_SetRequirement_PlayerState::IsRequirementMet' has a wrong offset!");
static_assert(offsetof(WBP_ItemTooltip_C_SetRequirement_PlayerState, CurrentRequirementWidget) == 0x000110, "Member 'WBP_ItemTooltip_C_SetRequirement_PlayerState::CurrentRequirementWidget' has a wrong offset!");
static_assert(offsetof(WBP_ItemTooltip_C_SetRequirement_PlayerState, RequirementMet) == 0x000118, "Member 'WBP_ItemTooltip_C_SetRequirement_PlayerState::RequirementMet' has a wrong offset!");
static_assert(offsetof(WBP_ItemTooltip_C_SetRequirement_PlayerState, Temp_int_Array_Index_Variable) == 0x00011C, "Member 'WBP_ItemTooltip_C_SetRequirement_PlayerState::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WBP_ItemTooltip_C_SetRequirement_PlayerState, CallFunc_GetOwningPlayer_ReturnValue) == 0x000120, "Member 'WBP_ItemTooltip_C_SetRequirement_PlayerState::CallFunc_GetOwningPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ItemTooltip_C_SetRequirement_PlayerState, CallFunc_AddChild_ReturnValue) == 0x000128, "Member 'WBP_ItemTooltip_C_SetRequirement_PlayerState::CallFunc_AddChild_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ItemTooltip_C_SetRequirement_PlayerState, CallFunc_Create_ReturnValue) == 0x000130, "Member 'WBP_ItemTooltip_C_SetRequirement_PlayerState::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ItemTooltip_C_SetRequirement_PlayerState, Temp_int_Loop_Counter_Variable) == 0x000138, "Member 'WBP_ItemTooltip_C_SetRequirement_PlayerState::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WBP_ItemTooltip_C_SetRequirement_PlayerState, CallFunc_Add_IntInt_ReturnValue) == 0x00013C, "Member 'WBP_ItemTooltip_C_SetRequirement_PlayerState::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ItemTooltip_C_SetRequirement_PlayerState, CallFunc_Array_Get_Item) == 0x000140, "Member 'WBP_ItemTooltip_C_SetRequirement_PlayerState::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WBP_ItemTooltip_C_SetRequirement_PlayerState, CallFunc_Array_Length_ReturnValue) == 0x000158, "Member 'WBP_ItemTooltip_C_SetRequirement_PlayerState::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ItemTooltip_C_SetRequirement_PlayerState, CallFunc_Less_IntInt_ReturnValue) == 0x00015C, "Member 'WBP_ItemTooltip_C_SetRequirement_PlayerState::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function WBP_ItemTooltip.WBP_ItemTooltip_C.SetRequirement_Skill
// 0x01F8 (0x01F8 - 0x0000)
struct WBP_ItemTooltip_C_SetRequirement_Skill final 
{
public:
	struct FValeriaItem                           ItemToDisplay;                                     // 0x0000(0x0068)(BlueprintVisible, BlueprintReadOnly, Parm)
	bool                                          IsRequirementMet;                                  // 0x0068(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4A22[0x7];                                     // 0x0069(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UVAL_ItemTypeDefinitionAsset*           ItemType;                                          // 0x0070(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          RequirementMet;                                    // 0x0078(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0079(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4A23[0x6];                                     // 0x007A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UVAL_ItemTypeDefinitionAsset*           CallFunc_FindConfig_Loaded_Item_Type;              // 0x0080(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_FindConfig_Success;                       // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0089(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x008A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4A24[0x5];                                     // 0x008B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	int64                                         CallFunc_Conv_IntToInt64_ReturnValue;              // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSkillLevelConfig                      CallFunc_GetSkillLevelConfigByType_ReturnValue;    // 0x0098(0x0088)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0120(0x0050)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x0170(0x0050)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x01C0(0x0010)(ReferenceParm)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x01D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4A25[0x7];                                     // 0x01D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x01D8(0x0018)()
	ESlateVisibility                              K2Node_Select_Default;                             // 0x01F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x01F1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_ItemTooltip_C_SetRequirement_Skill) == 0x000008, "Wrong alignment on WBP_ItemTooltip_C_SetRequirement_Skill");
static_assert(sizeof(WBP_ItemTooltip_C_SetRequirement_Skill) == 0x0001F8, "Wrong size on WBP_ItemTooltip_C_SetRequirement_Skill");
static_assert(offsetof(WBP_ItemTooltip_C_SetRequirement_Skill, ItemToDisplay) == 0x000000, "Member 'WBP_ItemTooltip_C_SetRequirement_Skill::ItemToDisplay' has a wrong offset!");
static_assert(offsetof(WBP_ItemTooltip_C_SetRequirement_Skill, IsRequirementMet) == 0x000068, "Member 'WBP_ItemTooltip_C_SetRequirement_Skill::IsRequirementMet' has a wrong offset!");
static_assert(offsetof(WBP_ItemTooltip_C_SetRequirement_Skill, ItemType) == 0x000070, "Member 'WBP_ItemTooltip_C_SetRequirement_Skill::ItemType' has a wrong offset!");
static_assert(offsetof(WBP_ItemTooltip_C_SetRequirement_Skill, RequirementMet) == 0x000078, "Member 'WBP_ItemTooltip_C_SetRequirement_Skill::RequirementMet' has a wrong offset!");
static_assert(offsetof(WBP_ItemTooltip_C_SetRequirement_Skill, Temp_byte_Variable) == 0x000079, "Member 'WBP_ItemTooltip_C_SetRequirement_Skill::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_ItemTooltip_C_SetRequirement_Skill, CallFunc_FindConfig_Loaded_Item_Type) == 0x000080, "Member 'WBP_ItemTooltip_C_SetRequirement_Skill::CallFunc_FindConfig_Loaded_Item_Type' has a wrong offset!");
static_assert(offsetof(WBP_ItemTooltip_C_SetRequirement_Skill, CallFunc_FindConfig_Success) == 0x000088, "Member 'WBP_ItemTooltip_C_SetRequirement_Skill::CallFunc_FindConfig_Success' has a wrong offset!");
static_assert(offsetof(WBP_ItemTooltip_C_SetRequirement_Skill, Temp_byte_Variable_1) == 0x000089, "Member 'WBP_ItemTooltip_C_SetRequirement_Skill::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_ItemTooltip_C_SetRequirement_Skill, Temp_bool_Variable) == 0x00008A, "Member 'WBP_ItemTooltip_C_SetRequirement_Skill::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_ItemTooltip_C_SetRequirement_Skill, CallFunc_Conv_IntToInt64_ReturnValue) == 0x000090, "Member 'WBP_ItemTooltip_C_SetRequirement_Skill::CallFunc_Conv_IntToInt64_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ItemTooltip_C_SetRequirement_Skill, CallFunc_GetSkillLevelConfigByType_ReturnValue) == 0x000098, "Member 'WBP_ItemTooltip_C_SetRequirement_Skill::CallFunc_GetSkillLevelConfigByType_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ItemTooltip_C_SetRequirement_Skill, K2Node_MakeStruct_FormatArgumentData) == 0x000120, "Member 'WBP_ItemTooltip_C_SetRequirement_Skill::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(WBP_ItemTooltip_C_SetRequirement_Skill, K2Node_MakeStruct_FormatArgumentData_1) == 0x000170, "Member 'WBP_ItemTooltip_C_SetRequirement_Skill::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(WBP_ItemTooltip_C_SetRequirement_Skill, K2Node_MakeArray_Array) == 0x0001C0, "Member 'WBP_ItemTooltip_C_SetRequirement_Skill::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(WBP_ItemTooltip_C_SetRequirement_Skill, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x0001D0, "Member 'WBP_ItemTooltip_C_SetRequirement_Skill::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ItemTooltip_C_SetRequirement_Skill, CallFunc_Format_ReturnValue) == 0x0001D8, "Member 'WBP_ItemTooltip_C_SetRequirement_Skill::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ItemTooltip_C_SetRequirement_Skill, K2Node_Select_Default) == 0x0001F0, "Member 'WBP_ItemTooltip_C_SetRequirement_Skill::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_ItemTooltip_C_SetRequirement_Skill, CallFunc_IsValid_ReturnValue) == 0x0001F1, "Member 'WBP_ItemTooltip_C_SetRequirement_Skill::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function WBP_ItemTooltip.WBP_ItemTooltip_C.SetupItem
// 0x0098 (0x0098 - 0x0000)
struct WBP_ItemTooltip_C_SetupItem final 
{
public:
	struct FValeriaItem                           ItemToDisplay;                                     // 0x0000(0x0068)(BlueprintVisible, BlueprintReadOnly, Parm)
	bool                                          bHasAlert;                                         // 0x0068(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4A26[0x7];                                     // 0x0069(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UVAL_ItemTypeDefinitionAsset*           ItemType;                                          // 0x0070(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsRecipe_IsRecipe;                        // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0079(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SetupItemRequirements_MeetsRequirements;  // 0x007A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4A27[0x5];                                     // 0x007B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UVAL_ItemTypeDefinitionAsset*           CallFunc_FindConfig_Loaded_Item_Type;              // 0x0080(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_FindConfig_Success;                       // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0089(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x008A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4A28[0x1];                                     // 0x008B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue;               // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0091(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_ItemTooltip_C_SetupItem) == 0x000008, "Wrong alignment on WBP_ItemTooltip_C_SetupItem");
static_assert(sizeof(WBP_ItemTooltip_C_SetupItem) == 0x000098, "Wrong size on WBP_ItemTooltip_C_SetupItem");
static_assert(offsetof(WBP_ItemTooltip_C_SetupItem, ItemToDisplay) == 0x000000, "Member 'WBP_ItemTooltip_C_SetupItem::ItemToDisplay' has a wrong offset!");
static_assert(offsetof(WBP_ItemTooltip_C_SetupItem, bHasAlert) == 0x000068, "Member 'WBP_ItemTooltip_C_SetupItem::bHasAlert' has a wrong offset!");
static_assert(offsetof(WBP_ItemTooltip_C_SetupItem, ItemType) == 0x000070, "Member 'WBP_ItemTooltip_C_SetupItem::ItemType' has a wrong offset!");
static_assert(offsetof(WBP_ItemTooltip_C_SetupItem, CallFunc_IsRecipe_IsRecipe) == 0x000078, "Member 'WBP_ItemTooltip_C_SetupItem::CallFunc_IsRecipe_IsRecipe' has a wrong offset!");
static_assert(offsetof(WBP_ItemTooltip_C_SetupItem, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000079, "Member 'WBP_ItemTooltip_C_SetupItem::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ItemTooltip_C_SetupItem, CallFunc_SetupItemRequirements_MeetsRequirements) == 0x00007A, "Member 'WBP_ItemTooltip_C_SetupItem::CallFunc_SetupItemRequirements_MeetsRequirements' has a wrong offset!");
static_assert(offsetof(WBP_ItemTooltip_C_SetupItem, CallFunc_FindConfig_Loaded_Item_Type) == 0x000080, "Member 'WBP_ItemTooltip_C_SetupItem::CallFunc_FindConfig_Loaded_Item_Type' has a wrong offset!");
static_assert(offsetof(WBP_ItemTooltip_C_SetupItem, CallFunc_FindConfig_Success) == 0x000088, "Member 'WBP_ItemTooltip_C_SetupItem::CallFunc_FindConfig_Success' has a wrong offset!");
static_assert(offsetof(WBP_ItemTooltip_C_SetupItem, Temp_byte_Variable) == 0x000089, "Member 'WBP_ItemTooltip_C_SetupItem::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_ItemTooltip_C_SetupItem, Temp_byte_Variable_1) == 0x00008A, "Member 'WBP_ItemTooltip_C_SetupItem::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_ItemTooltip_C_SetupItem, CallFunc_Conv_ByteToInt_ReturnValue) == 0x00008C, "Member 'WBP_ItemTooltip_C_SetupItem::CallFunc_Conv_ByteToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ItemTooltip_C_SetupItem, Temp_bool_Variable) == 0x000090, "Member 'WBP_ItemTooltip_C_SetupItem::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_ItemTooltip_C_SetupItem, K2Node_Select_Default) == 0x000091, "Member 'WBP_ItemTooltip_C_SetupItem::K2Node_Select_Default' has a wrong offset!");

// Function WBP_ItemTooltip.WBP_ItemTooltip_C.SetupItemRequirements
// 0x0070 (0x0070 - 0x0000)
struct WBP_ItemTooltip_C_SetupItemRequirements final 
{
public:
	struct FValeriaItem                           ItemToDisplay;                                     // 0x0000(0x0068)(BlueprintVisible, BlueprintReadOnly, Parm)
	bool                                          MeetsRequirements;                                 // 0x0068(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ShouldDisplayRequirementsBox;                      // 0x0069(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x006A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x006B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x006C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x006D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x006E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SetRequirement_Skill_IsRequirementMet;    // 0x006F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_ItemTooltip_C_SetupItemRequirements) == 0x000008, "Wrong alignment on WBP_ItemTooltip_C_SetupItemRequirements");
static_assert(sizeof(WBP_ItemTooltip_C_SetupItemRequirements) == 0x000070, "Wrong size on WBP_ItemTooltip_C_SetupItemRequirements");
static_assert(offsetof(WBP_ItemTooltip_C_SetupItemRequirements, ItemToDisplay) == 0x000000, "Member 'WBP_ItemTooltip_C_SetupItemRequirements::ItemToDisplay' has a wrong offset!");
static_assert(offsetof(WBP_ItemTooltip_C_SetupItemRequirements, MeetsRequirements) == 0x000068, "Member 'WBP_ItemTooltip_C_SetupItemRequirements::MeetsRequirements' has a wrong offset!");
static_assert(offsetof(WBP_ItemTooltip_C_SetupItemRequirements, ShouldDisplayRequirementsBox) == 0x000069, "Member 'WBP_ItemTooltip_C_SetupItemRequirements::ShouldDisplayRequirementsBox' has a wrong offset!");
static_assert(offsetof(WBP_ItemTooltip_C_SetupItemRequirements, Temp_byte_Variable) == 0x00006A, "Member 'WBP_ItemTooltip_C_SetupItemRequirements::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_ItemTooltip_C_SetupItemRequirements, Temp_byte_Variable_1) == 0x00006B, "Member 'WBP_ItemTooltip_C_SetupItemRequirements::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_ItemTooltip_C_SetupItemRequirements, Temp_bool_Variable) == 0x00006C, "Member 'WBP_ItemTooltip_C_SetupItemRequirements::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_ItemTooltip_C_SetupItemRequirements, CallFunc_Not_PreBool_ReturnValue) == 0x00006D, "Member 'WBP_ItemTooltip_C_SetupItemRequirements::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ItemTooltip_C_SetupItemRequirements, K2Node_Select_Default) == 0x00006E, "Member 'WBP_ItemTooltip_C_SetupItemRequirements::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_ItemTooltip_C_SetupItemRequirements, CallFunc_SetRequirement_Skill_IsRequirementMet) == 0x00006F, "Member 'WBP_ItemTooltip_C_SetupItemRequirements::CallFunc_SetRequirement_Skill_IsRequirementMet' has a wrong offset!");

// Function WBP_ItemTooltip.WBP_ItemTooltip_C.SetupStoreItem
// 0x0178 (0x0178 - 0x0000)
struct WBP_ItemTooltip_C_SetupStoreItem final 
{
public:
	struct FStoreItem                             StoreItemToDisplay;                                // 0x0000(0x0108)(BlueprintVisible, BlueprintReadOnly, Parm)
	struct FValeriaItem                           ValeriaItem;                                       // 0x0108(0x0068)(Edit, BlueprintVisible)
	class UVAL_ItemTypeDefinitionAsset*           ItemType;                                          // 0x0170(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_ItemTooltip_C_SetupStoreItem) == 0x000008, "Wrong alignment on WBP_ItemTooltip_C_SetupStoreItem");
static_assert(sizeof(WBP_ItemTooltip_C_SetupStoreItem) == 0x000178, "Wrong size on WBP_ItemTooltip_C_SetupStoreItem");
static_assert(offsetof(WBP_ItemTooltip_C_SetupStoreItem, StoreItemToDisplay) == 0x000000, "Member 'WBP_ItemTooltip_C_SetupStoreItem::StoreItemToDisplay' has a wrong offset!");
static_assert(offsetof(WBP_ItemTooltip_C_SetupStoreItem, ValeriaItem) == 0x000108, "Member 'WBP_ItemTooltip_C_SetupStoreItem::ValeriaItem' has a wrong offset!");
static_assert(offsetof(WBP_ItemTooltip_C_SetupStoreItem, ItemType) == 0x000170, "Member 'WBP_ItemTooltip_C_SetupStoreItem::ItemType' has a wrong offset!");

// Function WBP_ItemTooltip.WBP_ItemTooltip_C.SetupStoreItemRequirements
// 0x0110 (0x0110 - 0x0000)
struct WBP_ItemTooltip_C_SetupStoreItemRequirements final 
{
public:
	struct FStoreItem                             StoreItemToDisplay;                                // 0x0000(0x0108)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	bool                                          ShouldDisplayRequirementsBox;                      // 0x0108(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0109(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x010A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x010B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x010C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SetRequirement_AlreadyOwned_IsRequirementMet; // 0x010D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SetRequirement_CanAfford_IsRequirementMet; // 0x010E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SetRequirement_PlayerState_IsRequirementMet; // 0x010F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_ItemTooltip_C_SetupStoreItemRequirements) == 0x000008, "Wrong alignment on WBP_ItemTooltip_C_SetupStoreItemRequirements");
static_assert(sizeof(WBP_ItemTooltip_C_SetupStoreItemRequirements) == 0x000110, "Wrong size on WBP_ItemTooltip_C_SetupStoreItemRequirements");
static_assert(offsetof(WBP_ItemTooltip_C_SetupStoreItemRequirements, StoreItemToDisplay) == 0x000000, "Member 'WBP_ItemTooltip_C_SetupStoreItemRequirements::StoreItemToDisplay' has a wrong offset!");
static_assert(offsetof(WBP_ItemTooltip_C_SetupStoreItemRequirements, ShouldDisplayRequirementsBox) == 0x000108, "Member 'WBP_ItemTooltip_C_SetupStoreItemRequirements::ShouldDisplayRequirementsBox' has a wrong offset!");
static_assert(offsetof(WBP_ItemTooltip_C_SetupStoreItemRequirements, Temp_byte_Variable) == 0x000109, "Member 'WBP_ItemTooltip_C_SetupStoreItemRequirements::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_ItemTooltip_C_SetupStoreItemRequirements, Temp_byte_Variable_1) == 0x00010A, "Member 'WBP_ItemTooltip_C_SetupStoreItemRequirements::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_ItemTooltip_C_SetupStoreItemRequirements, Temp_bool_Variable) == 0x00010B, "Member 'WBP_ItemTooltip_C_SetupStoreItemRequirements::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_ItemTooltip_C_SetupStoreItemRequirements, K2Node_Select_Default) == 0x00010C, "Member 'WBP_ItemTooltip_C_SetupStoreItemRequirements::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_ItemTooltip_C_SetupStoreItemRequirements, CallFunc_SetRequirement_AlreadyOwned_IsRequirementMet) == 0x00010D, "Member 'WBP_ItemTooltip_C_SetupStoreItemRequirements::CallFunc_SetRequirement_AlreadyOwned_IsRequirementMet' has a wrong offset!");
static_assert(offsetof(WBP_ItemTooltip_C_SetupStoreItemRequirements, CallFunc_SetRequirement_CanAfford_IsRequirementMet) == 0x00010E, "Member 'WBP_ItemTooltip_C_SetupStoreItemRequirements::CallFunc_SetRequirement_CanAfford_IsRequirementMet' has a wrong offset!");
static_assert(offsetof(WBP_ItemTooltip_C_SetupStoreItemRequirements, CallFunc_SetRequirement_PlayerState_IsRequirementMet) == 0x00010F, "Member 'WBP_ItemTooltip_C_SetupStoreItemRequirements::CallFunc_SetRequirement_PlayerState_IsRequirementMet' has a wrong offset!");

// Function WBP_ItemTooltip.WBP_ItemTooltip_C.SetValue
// 0x02E0 (0x02E0 - 0x0000)
struct WBP_ItemTooltip_C_SetValue final 
{
public:
	struct FValeriaItem                           ItemToDisplay;                                     // 0x0000(0x0068)(BlueprintVisible, BlueprintReadOnly, Parm)
	bool                                          CanSell;                                           // 0x0068(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0069(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4A29[0x6];                                     // 0x006A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Temp_text_Variable;                                // 0x0070(0x0018)()
	bool                                          Temp_bool_Variable_1;                              // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0089(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x008A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x008B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4A2A[0x4];                                     // 0x008C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Temp_text_Variable_1;                              // 0x0090(0x0018)()
	class UTexture2D*                             CallFunc_GetSellIconForItem_ReturnValue;           // 0x00A8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsRecipe_IsRecipe;                        // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4A2B[0x7];                                     // 0x00B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Temp_text_Variable_2;                              // 0x00B8(0x0018)()
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_3;                              // 0x00D1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_1;             // 0x00D2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4A2C[0x1];                                     // 0x00D3(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetTotalSellValue_Amount;                 // 0x00D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4A2D[0x7];                                     // 0x00D9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_IntToText_ReturnValue;               // 0x00E0(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x00F8(0x0050)(HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_2;                              // 0x0148(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4A2E[0x7];                                     // 0x0149(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0150(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0160(0x0018)()
	ESlateVisibility                              Temp_byte_Variable_3;                              // 0x0178(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4A2F[0x7];                                     // 0x0179(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Select_Default;                             // 0x0180(0x0018)()
	bool                                          CallFunc_CanItemBeSold_ReturnValue;                // 0x0198(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4A30[0x3];                                     // 0x0199(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetSellValuePerItem_Amount;               // 0x019C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_4;                              // 0x01A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x01A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x01A2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_1;                           // 0x01A3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4A31[0x4];                                     // 0x01A4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_GetSellValueText_Text;                    // 0x01A8(0x0018)()
	class FText                                   K2Node_Select_Default_2;                           // 0x01C0(0x0018)()
	ESlateVisibility                              K2Node_Select_Default_3;                           // 0x01D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4A32[0x7];                                     // 0x01D9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x01E0(0x0050)(HasGetValueTypeHash)
	int32                                         CallFunc_GetSellValuePerItem_Amount_1;             // 0x0230(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4A33[0x4];                                     // 0x0234(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_IntToText_ReturnValue_1;             // 0x0238(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_2;            // 0x0250(0x0050)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_1;                          // 0x02A0(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue_1;                     // 0x02B0(0x0018)()
	class FText                                   K2Node_Select_Default_4;                           // 0x02C8(0x0018)()
};
static_assert(alignof(WBP_ItemTooltip_C_SetValue) == 0x000008, "Wrong alignment on WBP_ItemTooltip_C_SetValue");
static_assert(sizeof(WBP_ItemTooltip_C_SetValue) == 0x0002E0, "Wrong size on WBP_ItemTooltip_C_SetValue");
static_assert(offsetof(WBP_ItemTooltip_C_SetValue, ItemToDisplay) == 0x000000, "Member 'WBP_ItemTooltip_C_SetValue::ItemToDisplay' has a wrong offset!");
static_assert(offsetof(WBP_ItemTooltip_C_SetValue, CanSell) == 0x000068, "Member 'WBP_ItemTooltip_C_SetValue::CanSell' has a wrong offset!");
static_assert(offsetof(WBP_ItemTooltip_C_SetValue, Temp_bool_Variable) == 0x000069, "Member 'WBP_ItemTooltip_C_SetValue::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_ItemTooltip_C_SetValue, Temp_text_Variable) == 0x000070, "Member 'WBP_ItemTooltip_C_SetValue::Temp_text_Variable' has a wrong offset!");
static_assert(offsetof(WBP_ItemTooltip_C_SetValue, Temp_bool_Variable_1) == 0x000088, "Member 'WBP_ItemTooltip_C_SetValue::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_ItemTooltip_C_SetValue, Temp_byte_Variable) == 0x000089, "Member 'WBP_ItemTooltip_C_SetValue::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_ItemTooltip_C_SetValue, Temp_byte_Variable_1) == 0x00008A, "Member 'WBP_ItemTooltip_C_SetValue::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_ItemTooltip_C_SetValue, Temp_bool_Variable_2) == 0x00008B, "Member 'WBP_ItemTooltip_C_SetValue::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_ItemTooltip_C_SetValue, Temp_text_Variable_1) == 0x000090, "Member 'WBP_ItemTooltip_C_SetValue::Temp_text_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_ItemTooltip_C_SetValue, CallFunc_GetSellIconForItem_ReturnValue) == 0x0000A8, "Member 'WBP_ItemTooltip_C_SetValue::CallFunc_GetSellIconForItem_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ItemTooltip_C_SetValue, CallFunc_IsRecipe_IsRecipe) == 0x0000B0, "Member 'WBP_ItemTooltip_C_SetValue::CallFunc_IsRecipe_IsRecipe' has a wrong offset!");
static_assert(offsetof(WBP_ItemTooltip_C_SetValue, Temp_text_Variable_2) == 0x0000B8, "Member 'WBP_ItemTooltip_C_SetValue::Temp_text_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_ItemTooltip_C_SetValue, CallFunc_Greater_IntInt_ReturnValue) == 0x0000D0, "Member 'WBP_ItemTooltip_C_SetValue::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ItemTooltip_C_SetValue, Temp_bool_Variable_3) == 0x0000D1, "Member 'WBP_ItemTooltip_C_SetValue::Temp_bool_Variable_3' has a wrong offset!");
static_assert(offsetof(WBP_ItemTooltip_C_SetValue, CallFunc_Greater_IntInt_ReturnValue_1) == 0x0000D2, "Member 'WBP_ItemTooltip_C_SetValue::CallFunc_Greater_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_ItemTooltip_C_SetValue, CallFunc_GetTotalSellValue_Amount) == 0x0000D4, "Member 'WBP_ItemTooltip_C_SetValue::CallFunc_GetTotalSellValue_Amount' has a wrong offset!");
static_assert(offsetof(WBP_ItemTooltip_C_SetValue, CallFunc_BooleanAND_ReturnValue) == 0x0000D8, "Member 'WBP_ItemTooltip_C_SetValue::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ItemTooltip_C_SetValue, CallFunc_Conv_IntToText_ReturnValue) == 0x0000E0, "Member 'WBP_ItemTooltip_C_SetValue::CallFunc_Conv_IntToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ItemTooltip_C_SetValue, K2Node_MakeStruct_FormatArgumentData) == 0x0000F8, "Member 'WBP_ItemTooltip_C_SetValue::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(WBP_ItemTooltip_C_SetValue, Temp_byte_Variable_2) == 0x000148, "Member 'WBP_ItemTooltip_C_SetValue::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_ItemTooltip_C_SetValue, K2Node_MakeArray_Array) == 0x000150, "Member 'WBP_ItemTooltip_C_SetValue::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(WBP_ItemTooltip_C_SetValue, CallFunc_Format_ReturnValue) == 0x000160, "Member 'WBP_ItemTooltip_C_SetValue::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ItemTooltip_C_SetValue, Temp_byte_Variable_3) == 0x000178, "Member 'WBP_ItemTooltip_C_SetValue::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(WBP_ItemTooltip_C_SetValue, K2Node_Select_Default) == 0x000180, "Member 'WBP_ItemTooltip_C_SetValue::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_ItemTooltip_C_SetValue, CallFunc_CanItemBeSold_ReturnValue) == 0x000198, "Member 'WBP_ItemTooltip_C_SetValue::CallFunc_CanItemBeSold_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ItemTooltip_C_SetValue, CallFunc_GetSellValuePerItem_Amount) == 0x00019C, "Member 'WBP_ItemTooltip_C_SetValue::CallFunc_GetSellValuePerItem_Amount' has a wrong offset!");
static_assert(offsetof(WBP_ItemTooltip_C_SetValue, Temp_bool_Variable_4) == 0x0001A0, "Member 'WBP_ItemTooltip_C_SetValue::Temp_bool_Variable_4' has a wrong offset!");
static_assert(offsetof(WBP_ItemTooltip_C_SetValue, CallFunc_NotEqual_IntInt_ReturnValue) == 0x0001A1, "Member 'WBP_ItemTooltip_C_SetValue::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ItemTooltip_C_SetValue, CallFunc_BooleanAND_ReturnValue_1) == 0x0001A2, "Member 'WBP_ItemTooltip_C_SetValue::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_ItemTooltip_C_SetValue, K2Node_Select_Default_1) == 0x0001A3, "Member 'WBP_ItemTooltip_C_SetValue::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(WBP_ItemTooltip_C_SetValue, CallFunc_GetSellValueText_Text) == 0x0001A8, "Member 'WBP_ItemTooltip_C_SetValue::CallFunc_GetSellValueText_Text' has a wrong offset!");
static_assert(offsetof(WBP_ItemTooltip_C_SetValue, K2Node_Select_Default_2) == 0x0001C0, "Member 'WBP_ItemTooltip_C_SetValue::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(WBP_ItemTooltip_C_SetValue, K2Node_Select_Default_3) == 0x0001D8, "Member 'WBP_ItemTooltip_C_SetValue::K2Node_Select_Default_3' has a wrong offset!");
static_assert(offsetof(WBP_ItemTooltip_C_SetValue, K2Node_MakeStruct_FormatArgumentData_1) == 0x0001E0, "Member 'WBP_ItemTooltip_C_SetValue::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(WBP_ItemTooltip_C_SetValue, CallFunc_GetSellValuePerItem_Amount_1) == 0x000230, "Member 'WBP_ItemTooltip_C_SetValue::CallFunc_GetSellValuePerItem_Amount_1' has a wrong offset!");
static_assert(offsetof(WBP_ItemTooltip_C_SetValue, CallFunc_Conv_IntToText_ReturnValue_1) == 0x000238, "Member 'WBP_ItemTooltip_C_SetValue::CallFunc_Conv_IntToText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_ItemTooltip_C_SetValue, K2Node_MakeStruct_FormatArgumentData_2) == 0x000250, "Member 'WBP_ItemTooltip_C_SetValue::K2Node_MakeStruct_FormatArgumentData_2' has a wrong offset!");
static_assert(offsetof(WBP_ItemTooltip_C_SetValue, K2Node_MakeArray_Array_1) == 0x0002A0, "Member 'WBP_ItemTooltip_C_SetValue::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(WBP_ItemTooltip_C_SetValue, CallFunc_Format_ReturnValue_1) == 0x0002B0, "Member 'WBP_ItemTooltip_C_SetValue::CallFunc_Format_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_ItemTooltip_C_SetValue, K2Node_Select_Default_4) == 0x0002C8, "Member 'WBP_ItemTooltip_C_SetValue::K2Node_Select_Default_4' has a wrong offset!");

// Function WBP_ItemTooltip.WBP_ItemTooltip_C.Update Days to Harvest
// 0x0098 (0x0098 - 0x0000)
struct WBP_ItemTooltip_C_Update_Days_to_Harvest final 
{
public:
	class UVAL_ItemTypeDefinitionAsset*           ItemType;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4A34[0x4];                                     // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	int64                                         CallFunc_Conv_IntToInt64_ReturnValue;              // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4A35[0x7];                                     // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0020(0x0050)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0070(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0080(0x0018)()
};
static_assert(alignof(WBP_ItemTooltip_C_Update_Days_to_Harvest) == 0x000008, "Wrong alignment on WBP_ItemTooltip_C_Update_Days_to_Harvest");
static_assert(sizeof(WBP_ItemTooltip_C_Update_Days_to_Harvest) == 0x000098, "Wrong size on WBP_ItemTooltip_C_Update_Days_to_Harvest");
static_assert(offsetof(WBP_ItemTooltip_C_Update_Days_to_Harvest, ItemType) == 0x000000, "Member 'WBP_ItemTooltip_C_Update_Days_to_Harvest::ItemType' has a wrong offset!");
static_assert(offsetof(WBP_ItemTooltip_C_Update_Days_to_Harvest, Temp_byte_Variable) == 0x000008, "Member 'WBP_ItemTooltip_C_Update_Days_to_Harvest::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_ItemTooltip_C_Update_Days_to_Harvest, CallFunc_IsValid_ReturnValue) == 0x000009, "Member 'WBP_ItemTooltip_C_Update_Days_to_Harvest::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ItemTooltip_C_Update_Days_to_Harvest, Temp_byte_Variable_1) == 0x00000A, "Member 'WBP_ItemTooltip_C_Update_Days_to_Harvest::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_ItemTooltip_C_Update_Days_to_Harvest, Temp_bool_Variable) == 0x00000B, "Member 'WBP_ItemTooltip_C_Update_Days_to_Harvest::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_ItemTooltip_C_Update_Days_to_Harvest, CallFunc_Conv_IntToInt64_ReturnValue) == 0x000010, "Member 'WBP_ItemTooltip_C_Update_Days_to_Harvest::CallFunc_Conv_IntToInt64_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ItemTooltip_C_Update_Days_to_Harvest, K2Node_Select_Default) == 0x000018, "Member 'WBP_ItemTooltip_C_Update_Days_to_Harvest::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_ItemTooltip_C_Update_Days_to_Harvest, K2Node_MakeStruct_FormatArgumentData) == 0x000020, "Member 'WBP_ItemTooltip_C_Update_Days_to_Harvest::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(WBP_ItemTooltip_C_Update_Days_to_Harvest, K2Node_MakeArray_Array) == 0x000070, "Member 'WBP_ItemTooltip_C_Update_Days_to_Harvest::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(WBP_ItemTooltip_C_Update_Days_to_Harvest, CallFunc_Format_ReturnValue) == 0x000080, "Member 'WBP_ItemTooltip_C_Update_Days_to_Harvest::CallFunc_Format_ReturnValue' has a wrong offset!");

// Function WBP_ItemTooltip.WBP_ItemTooltip_C.UpdateBuff
// 0x00E0 (0x00E0 - 0x0000)
struct WBP_ItemTooltip_C_UpdateBuff final 
{
public:
	struct FValeriaItem                           ValeriaItem;                                       // 0x0000(0x0068)(BlueprintVisible, BlueprintReadOnly, Parm)
	class FText                                   BuffText;                                          // 0x0068(0x0018)(Edit, BlueprintVisible)
	class UTexture2D*                             BuffIcon;                                          // 0x0080(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UVAL_ItemTypeDefinitionAsset*           NewLocalVar_0;                                     // 0x0088(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4A36[0x7];                                     // 0x0091(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_LoadAsset_Blocking_ReturnValue;           // 0x0098(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4A37[0x7];                                     // 0x00A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UVAL_ItemTypeDefinitionAsset*           K2Node_DynamicCast_AsItem_Type_Definition;         // 0x00A8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_TextIsEmpty_ReturnValue;                  // 0x00B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x00B2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsStarQuality_IsStarQuality;              // 0x00B3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4A38[0x4];                                     // 0x00B4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_GetBuffText_BuffText;                     // 0x00B8(0x0018)()
	ESlateVisibility                              K2Node_Select_Default;                             // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsStarQuality_IsStarQuality_1;            // 0x00D1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4A39[0x6];                                     // 0x00D2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture2D*                             CallFunc_GetBuffIcon_BuffIcon;                     // 0x00D8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_ItemTooltip_C_UpdateBuff) == 0x000008, "Wrong alignment on WBP_ItemTooltip_C_UpdateBuff");
static_assert(sizeof(WBP_ItemTooltip_C_UpdateBuff) == 0x0000E0, "Wrong size on WBP_ItemTooltip_C_UpdateBuff");
static_assert(offsetof(WBP_ItemTooltip_C_UpdateBuff, ValeriaItem) == 0x000000, "Member 'WBP_ItemTooltip_C_UpdateBuff::ValeriaItem' has a wrong offset!");
static_assert(offsetof(WBP_ItemTooltip_C_UpdateBuff, BuffText) == 0x000068, "Member 'WBP_ItemTooltip_C_UpdateBuff::BuffText' has a wrong offset!");
static_assert(offsetof(WBP_ItemTooltip_C_UpdateBuff, BuffIcon) == 0x000080, "Member 'WBP_ItemTooltip_C_UpdateBuff::BuffIcon' has a wrong offset!");
static_assert(offsetof(WBP_ItemTooltip_C_UpdateBuff, NewLocalVar_0) == 0x000088, "Member 'WBP_ItemTooltip_C_UpdateBuff::NewLocalVar_0' has a wrong offset!");
static_assert(offsetof(WBP_ItemTooltip_C_UpdateBuff, Temp_byte_Variable) == 0x000090, "Member 'WBP_ItemTooltip_C_UpdateBuff::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_ItemTooltip_C_UpdateBuff, CallFunc_LoadAsset_Blocking_ReturnValue) == 0x000098, "Member 'WBP_ItemTooltip_C_UpdateBuff::CallFunc_LoadAsset_Blocking_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ItemTooltip_C_UpdateBuff, Temp_byte_Variable_1) == 0x0000A0, "Member 'WBP_ItemTooltip_C_UpdateBuff::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_ItemTooltip_C_UpdateBuff, K2Node_DynamicCast_AsItem_Type_Definition) == 0x0000A8, "Member 'WBP_ItemTooltip_C_UpdateBuff::K2Node_DynamicCast_AsItem_Type_Definition' has a wrong offset!");
static_assert(offsetof(WBP_ItemTooltip_C_UpdateBuff, K2Node_DynamicCast_bSuccess) == 0x0000B0, "Member 'WBP_ItemTooltip_C_UpdateBuff::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WBP_ItemTooltip_C_UpdateBuff, CallFunc_TextIsEmpty_ReturnValue) == 0x0000B1, "Member 'WBP_ItemTooltip_C_UpdateBuff::CallFunc_TextIsEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ItemTooltip_C_UpdateBuff, Temp_bool_Variable) == 0x0000B2, "Member 'WBP_ItemTooltip_C_UpdateBuff::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_ItemTooltip_C_UpdateBuff, CallFunc_IsStarQuality_IsStarQuality) == 0x0000B3, "Member 'WBP_ItemTooltip_C_UpdateBuff::CallFunc_IsStarQuality_IsStarQuality' has a wrong offset!");
static_assert(offsetof(WBP_ItemTooltip_C_UpdateBuff, CallFunc_GetBuffText_BuffText) == 0x0000B8, "Member 'WBP_ItemTooltip_C_UpdateBuff::CallFunc_GetBuffText_BuffText' has a wrong offset!");
static_assert(offsetof(WBP_ItemTooltip_C_UpdateBuff, K2Node_Select_Default) == 0x0000D0, "Member 'WBP_ItemTooltip_C_UpdateBuff::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_ItemTooltip_C_UpdateBuff, CallFunc_IsStarQuality_IsStarQuality_1) == 0x0000D1, "Member 'WBP_ItemTooltip_C_UpdateBuff::CallFunc_IsStarQuality_IsStarQuality_1' has a wrong offset!");
static_assert(offsetof(WBP_ItemTooltip_C_UpdateBuff, CallFunc_GetBuffIcon_BuffIcon) == 0x0000D8, "Member 'WBP_ItemTooltip_C_UpdateBuff::CallFunc_GetBuffIcon_BuffIcon' has a wrong offset!");

// Function WBP_ItemTooltip.WBP_ItemTooltip_C.UpdateFocusPoints
// 0x03B0 (0x03B0 - 0x0000)
struct WBP_ItemTooltip_C_UpdateFocusPoints final 
{
public:
	struct FValeriaItem                           Param_Item;                                        // 0x0000(0x0068)(BlueprintVisible, BlueprintReadOnly, Parm)
	class UWBP_FocusPoints_C*                     FocusPointsWidget;                                 // 0x0068(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FQuestRewardConfig                     CurrentReward;                                     // 0x0070(0x0180)(Edit, BlueprintVisible)
	int32                                         FocusAmount;                                       // 0x01F0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x01F4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x01F5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4A3A[0x2];                                     // 0x01F6(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x01F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetStarQualityFocusReward_FocusAmount;    // 0x01FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0200(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0204(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4A3B[0x3];                                     // 0x0205(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0208(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsStarQuality_IsStarQuality;              // 0x020C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4A3C[0x3];                                     // 0x020D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UVAL_ItemTypeDefinitionAsset*           CallFunc_FindConfig_Loaded_Item_Type;              // 0x0210(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_FindConfig_Success;                       // 0x0218(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4A3D[0x3];                                     // 0x0219(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_SelectInt_ReturnValue;                    // 0x021C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FQuestRewardConfig                     CallFunc_Array_Get_Item;                           // 0x0220(0x0180)()
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x03A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x03A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x03A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x03A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x03AA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x03AB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_ItemTooltip_C_UpdateFocusPoints) == 0x000008, "Wrong alignment on WBP_ItemTooltip_C_UpdateFocusPoints");
static_assert(sizeof(WBP_ItemTooltip_C_UpdateFocusPoints) == 0x0003B0, "Wrong size on WBP_ItemTooltip_C_UpdateFocusPoints");
static_assert(offsetof(WBP_ItemTooltip_C_UpdateFocusPoints, Param_Item) == 0x000000, "Member 'WBP_ItemTooltip_C_UpdateFocusPoints::Param_Item' has a wrong offset!");
static_assert(offsetof(WBP_ItemTooltip_C_UpdateFocusPoints, FocusPointsWidget) == 0x000068, "Member 'WBP_ItemTooltip_C_UpdateFocusPoints::FocusPointsWidget' has a wrong offset!");
static_assert(offsetof(WBP_ItemTooltip_C_UpdateFocusPoints, CurrentReward) == 0x000070, "Member 'WBP_ItemTooltip_C_UpdateFocusPoints::CurrentReward' has a wrong offset!");
static_assert(offsetof(WBP_ItemTooltip_C_UpdateFocusPoints, FocusAmount) == 0x0001F0, "Member 'WBP_ItemTooltip_C_UpdateFocusPoints::FocusAmount' has a wrong offset!");
static_assert(offsetof(WBP_ItemTooltip_C_UpdateFocusPoints, Temp_byte_Variable) == 0x0001F4, "Member 'WBP_ItemTooltip_C_UpdateFocusPoints::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_ItemTooltip_C_UpdateFocusPoints, Temp_byte_Variable_1) == 0x0001F5, "Member 'WBP_ItemTooltip_C_UpdateFocusPoints::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_ItemTooltip_C_UpdateFocusPoints, Temp_int_Array_Index_Variable) == 0x0001F8, "Member 'WBP_ItemTooltip_C_UpdateFocusPoints::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WBP_ItemTooltip_C_UpdateFocusPoints, CallFunc_GetStarQualityFocusReward_FocusAmount) == 0x0001FC, "Member 'WBP_ItemTooltip_C_UpdateFocusPoints::CallFunc_GetStarQualityFocusReward_FocusAmount' has a wrong offset!");
static_assert(offsetof(WBP_ItemTooltip_C_UpdateFocusPoints, Temp_int_Loop_Counter_Variable) == 0x000200, "Member 'WBP_ItemTooltip_C_UpdateFocusPoints::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WBP_ItemTooltip_C_UpdateFocusPoints, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000204, "Member 'WBP_ItemTooltip_C_UpdateFocusPoints::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ItemTooltip_C_UpdateFocusPoints, CallFunc_Add_IntInt_ReturnValue) == 0x000208, "Member 'WBP_ItemTooltip_C_UpdateFocusPoints::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ItemTooltip_C_UpdateFocusPoints, CallFunc_IsStarQuality_IsStarQuality) == 0x00020C, "Member 'WBP_ItemTooltip_C_UpdateFocusPoints::CallFunc_IsStarQuality_IsStarQuality' has a wrong offset!");
static_assert(offsetof(WBP_ItemTooltip_C_UpdateFocusPoints, CallFunc_FindConfig_Loaded_Item_Type) == 0x000210, "Member 'WBP_ItemTooltip_C_UpdateFocusPoints::CallFunc_FindConfig_Loaded_Item_Type' has a wrong offset!");
static_assert(offsetof(WBP_ItemTooltip_C_UpdateFocusPoints, CallFunc_FindConfig_Success) == 0x000218, "Member 'WBP_ItemTooltip_C_UpdateFocusPoints::CallFunc_FindConfig_Success' has a wrong offset!");
static_assert(offsetof(WBP_ItemTooltip_C_UpdateFocusPoints, CallFunc_SelectInt_ReturnValue) == 0x00021C, "Member 'WBP_ItemTooltip_C_UpdateFocusPoints::CallFunc_SelectInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ItemTooltip_C_UpdateFocusPoints, CallFunc_Array_Get_Item) == 0x000220, "Member 'WBP_ItemTooltip_C_UpdateFocusPoints::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WBP_ItemTooltip_C_UpdateFocusPoints, CallFunc_Add_IntInt_ReturnValue_1) == 0x0003A0, "Member 'WBP_ItemTooltip_C_UpdateFocusPoints::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_ItemTooltip_C_UpdateFocusPoints, CallFunc_Array_Length_ReturnValue) == 0x0003A4, "Member 'WBP_ItemTooltip_C_UpdateFocusPoints::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ItemTooltip_C_UpdateFocusPoints, Temp_bool_Variable) == 0x0003A8, "Member 'WBP_ItemTooltip_C_UpdateFocusPoints::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_ItemTooltip_C_UpdateFocusPoints, CallFunc_Less_IntInt_ReturnValue) == 0x0003A9, "Member 'WBP_ItemTooltip_C_UpdateFocusPoints::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ItemTooltip_C_UpdateFocusPoints, CallFunc_Greater_IntInt_ReturnValue) == 0x0003AA, "Member 'WBP_ItemTooltip_C_UpdateFocusPoints::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ItemTooltip_C_UpdateFocusPoints, K2Node_Select_Default) == 0x0003AB, "Member 'WBP_ItemTooltip_C_UpdateFocusPoints::K2Node_Select_Default' has a wrong offset!");

// Function WBP_ItemTooltip.WBP_ItemTooltip_C.UpdateRecipeIngredientsForItem
// 0x0858 (0x0858 - 0x0000)
struct WBP_ItemTooltip_C_UpdateRecipeIngredientsForItem final 
{
public:
	class UVAL_ItemTypeDefinitionAsset*           ItemType;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FRecipe_RequireItem                    CurrentIngredient;                                 // 0x0008(0x0018)(Edit, BlueprintVisible, NoDestructor)
	struct FRecipeConfig                          RecipeConfig;                                      // 0x0020(0x0280)(Edit, BlueprintVisible)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x02A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x02A4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4A3E[0x3];                                     // 0x02A5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue;              // 0x02A8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x02B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4A3F[0x4];                                     // 0x02B4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_StoreItemToolip_RecipeIngredient_C* CallFunc_Create_ReturnValue;                       // 0x02B8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UVerticalBoxSlot*                       CallFunc_AddChildToVerticalBox_ReturnValue;        // 0x02C0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x02C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EValeriaFuncResult                            CallFunc_FindRecipeConfigById_OutResult;           // 0x02CC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4A40[0x3];                                     // 0x02CD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRecipeConfig                          CallFunc_FindRecipeConfigById_ReturnValue;         // 0x02D0(0x0280)()
	struct FRecipe_RequireItem                    CallFunc_Array_Get_Item;                           // 0x0550(0x0018)(NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0568(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4A41[0x7];                                     // 0x0569(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	int64                                         CallFunc_Conv_IntToInt64_ReturnValue;              // 0x0570(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int64                                         CallFunc_Conv_IntToInt64_ReturnValue_1;            // 0x0578(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0580(0x0050)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x05D0(0x0050)(HasGetValueTypeHash)
	int64                                         CallFunc_Conv_IntToInt64_ReturnValue_2;            // 0x0620(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_GetTagName_ReturnValue;                   // 0x0628(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_2;            // 0x0630(0x0050)(HasGetValueTypeHash)
	struct FIngredientTagConfig                   CallFunc_GetDataTableRowFromName_OutRow;           // 0x0680(0x0040)()
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x06C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4A42[0x7];                                     // 0x06C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x06C8(0x0010)(ReferenceParm)
	bool                                          CallFunc_FNameIsNone_ReturnValue;                  // 0x06D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4A43[0x7];                                     // 0x06D9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x06E0(0x0018)()
	bool                                          CallFunc_TextIsEmpty_ReturnValue;                  // 0x06F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4A44[0x7];                                     // 0x06F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_3;            // 0x0700(0x0050)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_1;                          // 0x0750(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue_1;                     // 0x0760(0x0018)()
	class FText                                   CallFunc_GetItemName_Text;                         // 0x0778(0x0018)()
	class FText                                   K2Node_Select_Default;                             // 0x0790(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_4;            // 0x07A8(0x0050)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_2;                          // 0x07F8(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue_2;                     // 0x0808(0x0018)()
	class UObject*                                CallFunc_LoadAsset_Blocking_ReturnValue;           // 0x0820(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0828(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4A45[0x4];                                     // 0x082C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture2D*                             K2Node_DynamicCast_AsTexture_2D;                   // 0x0830(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0838(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0839(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4A46[0x6];                                     // 0x083A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue_1;            // 0x0840(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UWBP_StoreItemToolip_RecipeIngredient_C* CallFunc_Create_ReturnValue_1;                     // 0x0848(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UVerticalBoxSlot*                       CallFunc_AddChildToVerticalBox_ReturnValue_1;      // 0x0850(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_ItemTooltip_C_UpdateRecipeIngredientsForItem) == 0x000008, "Wrong alignment on WBP_ItemTooltip_C_UpdateRecipeIngredientsForItem");
static_assert(sizeof(WBP_ItemTooltip_C_UpdateRecipeIngredientsForItem) == 0x000858, "Wrong size on WBP_ItemTooltip_C_UpdateRecipeIngredientsForItem");
static_assert(offsetof(WBP_ItemTooltip_C_UpdateRecipeIngredientsForItem, ItemType) == 0x000000, "Member 'WBP_ItemTooltip_C_UpdateRecipeIngredientsForItem::ItemType' has a wrong offset!");
static_assert(offsetof(WBP_ItemTooltip_C_UpdateRecipeIngredientsForItem, CurrentIngredient) == 0x000008, "Member 'WBP_ItemTooltip_C_UpdateRecipeIngredientsForItem::CurrentIngredient' has a wrong offset!");
static_assert(offsetof(WBP_ItemTooltip_C_UpdateRecipeIngredientsForItem, RecipeConfig) == 0x000020, "Member 'WBP_ItemTooltip_C_UpdateRecipeIngredientsForItem::RecipeConfig' has a wrong offset!");
static_assert(offsetof(WBP_ItemTooltip_C_UpdateRecipeIngredientsForItem, Temp_int_Array_Index_Variable) == 0x0002A0, "Member 'WBP_ItemTooltip_C_UpdateRecipeIngredientsForItem::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WBP_ItemTooltip_C_UpdateRecipeIngredientsForItem, Temp_bool_Variable) == 0x0002A4, "Member 'WBP_ItemTooltip_C_UpdateRecipeIngredientsForItem::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_ItemTooltip_C_UpdateRecipeIngredientsForItem, CallFunc_GetOwningPlayer_ReturnValue) == 0x0002A8, "Member 'WBP_ItemTooltip_C_UpdateRecipeIngredientsForItem::CallFunc_GetOwningPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ItemTooltip_C_UpdateRecipeIngredientsForItem, Temp_int_Loop_Counter_Variable) == 0x0002B0, "Member 'WBP_ItemTooltip_C_UpdateRecipeIngredientsForItem::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WBP_ItemTooltip_C_UpdateRecipeIngredientsForItem, CallFunc_Create_ReturnValue) == 0x0002B8, "Member 'WBP_ItemTooltip_C_UpdateRecipeIngredientsForItem::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ItemTooltip_C_UpdateRecipeIngredientsForItem, CallFunc_AddChildToVerticalBox_ReturnValue) == 0x0002C0, "Member 'WBP_ItemTooltip_C_UpdateRecipeIngredientsForItem::CallFunc_AddChildToVerticalBox_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ItemTooltip_C_UpdateRecipeIngredientsForItem, CallFunc_Add_IntInt_ReturnValue) == 0x0002C8, "Member 'WBP_ItemTooltip_C_UpdateRecipeIngredientsForItem::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ItemTooltip_C_UpdateRecipeIngredientsForItem, CallFunc_FindRecipeConfigById_OutResult) == 0x0002CC, "Member 'WBP_ItemTooltip_C_UpdateRecipeIngredientsForItem::CallFunc_FindRecipeConfigById_OutResult' has a wrong offset!");
static_assert(offsetof(WBP_ItemTooltip_C_UpdateRecipeIngredientsForItem, CallFunc_FindRecipeConfigById_ReturnValue) == 0x0002D0, "Member 'WBP_ItemTooltip_C_UpdateRecipeIngredientsForItem::CallFunc_FindRecipeConfigById_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ItemTooltip_C_UpdateRecipeIngredientsForItem, CallFunc_Array_Get_Item) == 0x000550, "Member 'WBP_ItemTooltip_C_UpdateRecipeIngredientsForItem::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WBP_ItemTooltip_C_UpdateRecipeIngredientsForItem, K2Node_SwitchEnum_CmpSuccess) == 0x000568, "Member 'WBP_ItemTooltip_C_UpdateRecipeIngredientsForItem::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(WBP_ItemTooltip_C_UpdateRecipeIngredientsForItem, CallFunc_Conv_IntToInt64_ReturnValue) == 0x000570, "Member 'WBP_ItemTooltip_C_UpdateRecipeIngredientsForItem::CallFunc_Conv_IntToInt64_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ItemTooltip_C_UpdateRecipeIngredientsForItem, CallFunc_Conv_IntToInt64_ReturnValue_1) == 0x000578, "Member 'WBP_ItemTooltip_C_UpdateRecipeIngredientsForItem::CallFunc_Conv_IntToInt64_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_ItemTooltip_C_UpdateRecipeIngredientsForItem, K2Node_MakeStruct_FormatArgumentData) == 0x000580, "Member 'WBP_ItemTooltip_C_UpdateRecipeIngredientsForItem::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(WBP_ItemTooltip_C_UpdateRecipeIngredientsForItem, K2Node_MakeStruct_FormatArgumentData_1) == 0x0005D0, "Member 'WBP_ItemTooltip_C_UpdateRecipeIngredientsForItem::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(WBP_ItemTooltip_C_UpdateRecipeIngredientsForItem, CallFunc_Conv_IntToInt64_ReturnValue_2) == 0x000620, "Member 'WBP_ItemTooltip_C_UpdateRecipeIngredientsForItem::CallFunc_Conv_IntToInt64_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_ItemTooltip_C_UpdateRecipeIngredientsForItem, CallFunc_GetTagName_ReturnValue) == 0x000628, "Member 'WBP_ItemTooltip_C_UpdateRecipeIngredientsForItem::CallFunc_GetTagName_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ItemTooltip_C_UpdateRecipeIngredientsForItem, K2Node_MakeStruct_FormatArgumentData_2) == 0x000630, "Member 'WBP_ItemTooltip_C_UpdateRecipeIngredientsForItem::K2Node_MakeStruct_FormatArgumentData_2' has a wrong offset!");
static_assert(offsetof(WBP_ItemTooltip_C_UpdateRecipeIngredientsForItem, CallFunc_GetDataTableRowFromName_OutRow) == 0x000680, "Member 'WBP_ItemTooltip_C_UpdateRecipeIngredientsForItem::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(WBP_ItemTooltip_C_UpdateRecipeIngredientsForItem, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x0006C0, "Member 'WBP_ItemTooltip_C_UpdateRecipeIngredientsForItem::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ItemTooltip_C_UpdateRecipeIngredientsForItem, K2Node_MakeArray_Array) == 0x0006C8, "Member 'WBP_ItemTooltip_C_UpdateRecipeIngredientsForItem::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(WBP_ItemTooltip_C_UpdateRecipeIngredientsForItem, CallFunc_FNameIsNone_ReturnValue) == 0x0006D8, "Member 'WBP_ItemTooltip_C_UpdateRecipeIngredientsForItem::CallFunc_FNameIsNone_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ItemTooltip_C_UpdateRecipeIngredientsForItem, CallFunc_Format_ReturnValue) == 0x0006E0, "Member 'WBP_ItemTooltip_C_UpdateRecipeIngredientsForItem::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ItemTooltip_C_UpdateRecipeIngredientsForItem, CallFunc_TextIsEmpty_ReturnValue) == 0x0006F8, "Member 'WBP_ItemTooltip_C_UpdateRecipeIngredientsForItem::CallFunc_TextIsEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ItemTooltip_C_UpdateRecipeIngredientsForItem, K2Node_MakeStruct_FormatArgumentData_3) == 0x000700, "Member 'WBP_ItemTooltip_C_UpdateRecipeIngredientsForItem::K2Node_MakeStruct_FormatArgumentData_3' has a wrong offset!");
static_assert(offsetof(WBP_ItemTooltip_C_UpdateRecipeIngredientsForItem, K2Node_MakeArray_Array_1) == 0x000750, "Member 'WBP_ItemTooltip_C_UpdateRecipeIngredientsForItem::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(WBP_ItemTooltip_C_UpdateRecipeIngredientsForItem, CallFunc_Format_ReturnValue_1) == 0x000760, "Member 'WBP_ItemTooltip_C_UpdateRecipeIngredientsForItem::CallFunc_Format_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_ItemTooltip_C_UpdateRecipeIngredientsForItem, CallFunc_GetItemName_Text) == 0x000778, "Member 'WBP_ItemTooltip_C_UpdateRecipeIngredientsForItem::CallFunc_GetItemName_Text' has a wrong offset!");
static_assert(offsetof(WBP_ItemTooltip_C_UpdateRecipeIngredientsForItem, K2Node_Select_Default) == 0x000790, "Member 'WBP_ItemTooltip_C_UpdateRecipeIngredientsForItem::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_ItemTooltip_C_UpdateRecipeIngredientsForItem, K2Node_MakeStruct_FormatArgumentData_4) == 0x0007A8, "Member 'WBP_ItemTooltip_C_UpdateRecipeIngredientsForItem::K2Node_MakeStruct_FormatArgumentData_4' has a wrong offset!");
static_assert(offsetof(WBP_ItemTooltip_C_UpdateRecipeIngredientsForItem, K2Node_MakeArray_Array_2) == 0x0007F8, "Member 'WBP_ItemTooltip_C_UpdateRecipeIngredientsForItem::K2Node_MakeArray_Array_2' has a wrong offset!");
static_assert(offsetof(WBP_ItemTooltip_C_UpdateRecipeIngredientsForItem, CallFunc_Format_ReturnValue_2) == 0x000808, "Member 'WBP_ItemTooltip_C_UpdateRecipeIngredientsForItem::CallFunc_Format_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_ItemTooltip_C_UpdateRecipeIngredientsForItem, CallFunc_LoadAsset_Blocking_ReturnValue) == 0x000820, "Member 'WBP_ItemTooltip_C_UpdateRecipeIngredientsForItem::CallFunc_LoadAsset_Blocking_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ItemTooltip_C_UpdateRecipeIngredientsForItem, CallFunc_Array_Length_ReturnValue) == 0x000828, "Member 'WBP_ItemTooltip_C_UpdateRecipeIngredientsForItem::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ItemTooltip_C_UpdateRecipeIngredientsForItem, K2Node_DynamicCast_AsTexture_2D) == 0x000830, "Member 'WBP_ItemTooltip_C_UpdateRecipeIngredientsForItem::K2Node_DynamicCast_AsTexture_2D' has a wrong offset!");
static_assert(offsetof(WBP_ItemTooltip_C_UpdateRecipeIngredientsForItem, K2Node_DynamicCast_bSuccess) == 0x000838, "Member 'WBP_ItemTooltip_C_UpdateRecipeIngredientsForItem::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WBP_ItemTooltip_C_UpdateRecipeIngredientsForItem, CallFunc_Less_IntInt_ReturnValue) == 0x000839, "Member 'WBP_ItemTooltip_C_UpdateRecipeIngredientsForItem::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ItemTooltip_C_UpdateRecipeIngredientsForItem, CallFunc_GetOwningPlayer_ReturnValue_1) == 0x000840, "Member 'WBP_ItemTooltip_C_UpdateRecipeIngredientsForItem::CallFunc_GetOwningPlayer_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_ItemTooltip_C_UpdateRecipeIngredientsForItem, CallFunc_Create_ReturnValue_1) == 0x000848, "Member 'WBP_ItemTooltip_C_UpdateRecipeIngredientsForItem::CallFunc_Create_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_ItemTooltip_C_UpdateRecipeIngredientsForItem, CallFunc_AddChildToVerticalBox_ReturnValue_1) == 0x000850, "Member 'WBP_ItemTooltip_C_UpdateRecipeIngredientsForItem::CallFunc_AddChildToVerticalBox_ReturnValue_1' has a wrong offset!");

}

