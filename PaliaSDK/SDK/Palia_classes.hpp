#pragma once

// Dumped with Dumper-7!

#ifdef _MSC_VER
	#pragma pack(push, 0x01)
#endif

namespace SDK
{
//---------------------------------------------------------------------------------------------------------------------
// CLASSES
//---------------------------------------------------------------------------------------------------------------------

// 0x1D8 (0x278 - 0xA0)
// Class Palia.AbilityAnimationComponent
class UAbilityAnimationComponent : public UActorComponent
{
public:
	class UDataTable*                            AnimationMappings;                                 // 0xA0(0x8)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TMap<class FName, class UDataTable*>         ExtraAnimationMappings;                            // 0xA8(0x50)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	class FName                                  LastUsedAnimMappingName;                           // 0xF8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bLastUsedAnimWasBlendSpace;                        // 0x100(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1E09[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TMap<class FName, class UDataTable*>         AudioAnimNotifyMappings;                           // 0x108(0x50)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnMontageNotify;                                   // 0x158(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnNotifyStateBegin;                                // 0x168(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnNotifyStateEnd;                                  // 0x178(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnChanged;                                         // 0x188(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnLocomotionTagChanged;                            // 0x198(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnCombatTagChanged;                                // 0x1A8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TArray<class FName>                          ActiveMontageNotifyStates;                         // 0x1B8(0x10)(ZeroConstructor, NativeAccessSpecifierPrivate)
	class UAICombatStateComponent*               AiCombatState;                                     // 0x1C8(0x8)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UEquipmentComponent*                   EquipmentComponent;                                // 0x1D0(0x8)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FAnimState                            AnimState;                                         // 0x1D8(0x18)(Net, RepNotify, NoDestructor, NativeAccessSpecifierPrivate)
	struct FGameplayTag                          LocomotionTag;                                     // 0x1F0(0x8)(Net, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FGameplayTag                          CombatTag;                                         // 0x1F8(0x8)(Net, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FGameplayAbilityRepAnimMontage        RepAnimMontageInfo;                                // 0x200(0x38)(Net, RepNotify, NoDestructor, NativeAccessSpecifierPrivate)
	struct FGameplayAbilityLocalAnimMontage      LocalAnimMontageInfo;                              // 0x238(0x30)(NoDestructor, NativeAccessSpecifierPrivate)
	uint8                                        Pad_1E0A[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("AbilityAnimationComponent");
		return Clss;
	}

	void TryChangeState(struct FAnimState& InContext, enum class ERpcAction InRpcAction);
	bool StopMontage(class UAnimMontage* InAnimMontage);
	void StopAnimation(struct FGameplayTag& InAnimTag);
	void StopAll(float InBlendOut);
	void RpcServer_TryChangeState(struct FAnimState& InContext, enum class ERpcAction InRpcAction);
	void RpcServer_MontageAction(struct FMontageActionContext& InContext);
	void RpcMontageAction(struct FMontageActionContext& InContext);
	void RpcClient_TryChangeState(struct FAnimState& InContext, enum class ERpcAction InRpcAction);
	bool PlayMontage(const struct FMontageInfo& InMontageInfo);
	void PlayAnimation(struct FGameplayTag& InAnimTag);
	void OnRep_ReplicatedAnimMontage();
	void OnRep_LocomotionTag(struct FGameplayTag& InOldTag);
	void OnRep_CombatTag(struct FGameplayTag& InOldTag);
	void OnAbilityStarted(class UGameplayAbility* InActivatedAbility);
	void OnAbilityEnded(class UGameplayAbility* InEndedAbility);
	void MontageActionFromContext(struct FMontageActionContext& InContext);
	void MontageAction(enum class ERpcMontageAction InEvent, class UAnimMontage* InMontage);
	bool IsNotifyStateActive(class FName& InNotifyStateName);
	void HandleStateChanged(class UCharacterStateMachineComponent* InCsm, const struct FCharacterStateChangeParams& InParams);
	void HandleOnAnimInitialized();
	void HandleEquipmentVisibilityChanged(class UEquipmentComponent* InInEquipmentComponent, bool InbHidden);
	void HandleEquipmentChanged(class UEquipmentComponent* InInEquipmentComponent, const struct FEquipmentItem& InItem);
	void HandleAnimNotifyStateEnd(class FName InNotifyName, struct FBranchingPointNotifyPayload& InBranchingPointNotifyPayload);
	void HandleAnimNotifyStateBegin(class FName InNotifyName, struct FBranchingPointNotifyPayload& InBranchingPointNotifyPayload);
	struct FGameplayTag GetTagAssociatedWithRowName(class FName InName);
	class UAnimSequence* GetSequenceByName(class FName& InName, class FName& InMappingQualifier);
	class UAnimSequence* GetSequence(const struct FGameplayTag& InTag, class FName& InMappingQualifier);
	class FName GetRowNameAssociatedWithTag(const struct FGameplayTag& InTag);
	class UAnimMontage* GetMontageByName(class FName& InName, class FName& InMappingQualifier);
	class UAnimMontage* GetMontage(const struct FGameplayTag& InTag, class FName& InMappingQualifier);
	class FName GetMappingNameByTag(const struct FGameplayTag& InTag, class FName& InMappingQualifier);
	struct FGameplayTag GetLocomotionTag();
	struct FGameplayTag GetCombatTag();
	class UBlendSpace* GetBlendSpaceByName(class FName& InName, class FName& InMappingQualifier);
	class UBlendSpace* GetBlendSpace(const struct FGameplayTag& InTag, class FName& InMappingQualifier);
	void Client_OnAnimStateChange(struct FAnimState& InOldAnimState);
};

// 0x88 (0xB8 - 0x30)
// Class Palia.ValeriaAccomplishmentsManager
class UValeriaAccomplishmentsManager : public UGameInstanceSubsystem
{
public:
	FMulticastInlineDelegateProperty_            OnBatchAccomplishmentStatsUpdated;                 // 0x30(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnBatchAccomplishmentsUpdated;                     // 0x40(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnStatUpdated;                                     // 0x50(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnAccomplishmentUnlocked;                          // 0x60(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnAccomplishmentRedeemed;                          // 0x70(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                        Pad_1E3D[0x38];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("ValeriaAccomplishmentsManager");
		return Clss;
	}

	void UpdateIntegerStatForPlayer(class APlayerController* InPlayer, const class FString& InStatName, enum class EValeriaStatModificationType InModificationType, int32 InValue);
	void UpdateFloatStatForPlayer(class APlayerController* InPlayer, const class FString& InStatName, enum class EValeriaStatModificationType InModificationType, float InValue);
	void UpdateDoubleStatForPlayer(class APlayerController* InPlayer, const class FString& InStatName, enum class EValeriaStatModificationType InModificationType, double InValue);
	void SetBooleanStatForPlayer(class APlayerController* InPlayer, const class FString& InStatName, bool InNewValue);
	void IncrementCollectionStatForPlayer(class APlayerController* InPlayer, const class FString& InStatName, int32 InPersistId, int32 InValue);
	bool HasSetCollectionStatForPlayer(class APlayerController* InPlayer, const class FString& InStatName, int32 InPersistId, bool* InValue);
	bool HasRedeemedAchievementRewards(class APlayerController* InPlayer, const class FString& InAchievementID);
	bool HasAchievementUnlocked(class APlayerController* InPlayer, const class FString& InAchievementID);
	TArray<struct FAchievementUnlockRule> GetUnlockRulesForAchievement(const class FString& InAchievementID);
	bool GetStatValueForPlayerAsString(class APlayerController* InPlayer, const class FString& InStatName, class FString* InValue);
	TArray<struct FAchievementRewards> GetRewardsForAchievement(const class FString& InAchievementID);
	bool GetIntegerStatForPlayer(class APlayerController* InPlayer, const class FString& InStatName, int32* InValue);
	bool GetFloatStatForPlayer(class APlayerController* InPlayer, const class FString& InStatName, float* InValue);
	int32 GetCurrentTierOfAchievementGroup(class APlayerController* InPlayer, const class FString& InGroupID);
	bool GetCollectionStatForPlayer(class APlayerController* InPlayer, const class FString& InStatName, int32 InPersistId, int32* InValue);
	bool GetBooleanStatForPlayer(class APlayerController* InPlayer, const class FString& InStatName, bool* InValue);
	void GetAllStatsForPlayer(class APlayerController* InPlayer, TMap<class FString, class FString>* InOutStatNameValueTable);
	TArray<struct FValeriaOnlineAchievement> GetAchievementsForPlayer(class APlayerController* InPlayer);
	TArray<struct FValeriaOnlineAchievement> GetAchievementsForNetId(struct FUniqueNetIdRepl& InAccountId);
	class FString GetAchievementInGroupByTier(int32 InTier, const class FString& InGroupID);
	TArray<class FString> GetAchievementGroup(const class FString& InAccomplishmentId, const class FString& InGroupID);
	TArray<struct FValeriaOnlineAchievementDefinition> GetAchievementDefinitions();
	struct FValeriaOnlineAchievementDefinition GetAchievementDefinition(const class FString& InAchievementID);
	bool CanPlayerRedeemAchievement(class APlayerController* InPlayer, const class FString& InAchievementID);
};

// 0xA0 (0xD0 - 0x30)
// Class Palia.ActorSpawnPointsManager
class UActorSpawnPointsManager : public UGameInstanceSubsystem
{
public:
	TMap<class UClass*, struct FActorSpawnPointList> ActorSpawnPointsAvailable;                         // 0x30(0x50)(Transient, NativeAccessSpecifierPrivate)
	TMap<class AActor*, class AActor*>           ActorSpawnPointsUsed;                              // 0x80(0x50)(Transient, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("ActorSpawnPointsManager");
		return Clss;
	}

	void RemoveSpawnPoint(class AActor* InSpawnPointActor);
	void OnSpawnPointActorDestroyed(class AActor* InSpawnPointActor);
	void OnOccupierActorDestroyed(class AActor* InOccupierActor);
};

// 0x78 (0x118 - 0xA0)
// Class Palia.ActorTagComponent
class UActorTagComponent : public UActorComponent
{
public:
	uint8                                        Pad_1E50[0x58];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	FMulticastInlineDelegateProperty_            OnActorTagComponentUpdatedDel;                     // 0xF8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TArray<struct FTagEntry>                     TagValues;                                         // 0x108(0x10)(Edit, BlueprintVisible, Net, ZeroConstructor, RepNotify, NativeAccessSpecifierPublic)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("ActorTagComponent");
		return Clss;
	}

	void OnRep_TagValues();
	int32 GetTagValue(struct FGameplayTag& InTag);
};

// 0x18 (0xB8 - 0xA0)
// Class Palia.ActorTestHarnessComponent
class UActorTestHarnessComponent : public UActorComponent
{
public:
	float                                        SecondsBeforeSwitchingServer;                      // 0xA0(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1E52[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FString                                CurrentTestCase;                                   // 0xA8(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("ActorTestHarnessComponent");
		return Clss;
	}

	void OnTestStopped(const class FString& InTestCase);
	void OnTestStarted(const class FString& InTestCase);
};

// 0x18 (0x2A8 - 0x290)
// Class Palia.ActorWithGAS
class AActorWithGAS : public AActor
{
public:
	uint8                                        Pad_1E54[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UValeriaGASComponent*                  ValeriaGAS;                                        // 0x298(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UValeriaGASAttributeSet*               AttributeSet;                                      // 0x2A0(0x8)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("ActorWithGAS");
		return Clss;
	}

};

// 0x130 (0x1D0 - 0xA0)
// Class Palia.AICombatStateComponent
class UAICombatStateComponent : public UActorComponent
{
public:
	class AActor*                                HighestThreatReplicatedToClient;                   // 0xA0(0x8)(Edit, Net, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         IsCombatEnabled;                                   // 0xA8(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1E85[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	FMulticastInlineDelegateProperty_            OnCharacterAddedAsThreat;                          // 0xB0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FAIBehaviourRanges                    BehaviourRanges;                                   // 0xC0(0x40)(Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPrivate)
	TMap<class FName, float>                     Speeds;                                            // 0x100(0x50)(Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	float                                        InitialThreatLevel;                                // 0x150(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         UseOldThreatSystem;                                // 0x154(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_1E86[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        MaxAbilityId;                                      // 0x158(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        LockedInAbilityUntil;                              // 0x15C(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UBehaviorTreeComponent*                BTComp;                                            // 0x160(0x8)(ExportObject, ZeroConstructor, Transient, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UVitalsComponent*                      Vitals;                                            // 0x168(0x8)(ExportObject, ZeroConstructor, Transient, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        LastBlockedDamageAt;                               // 0x170(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bIsInCombat;                                       // 0x174(0x1)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_1E89[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FAIThreatList                         ThreatList;                                        // 0x178(0x50)(NativeAccessSpecifierPrivate)
	struct FTimerHandle                          TickThreatListTimerHandle;                         // 0x1C8(0x8)(NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("AICombatStateComponent");
		return Clss;
	}

	void WipeThreatList();
	void WasDamaged(class UVitalsComponent* InVitalsComp, const struct FVitalsChange& InChange);
	void TickThreatList();
	void SetThreat(class AActor* InActor, int32 InThreat);
	void SetIsInCombat(bool InIsInCombat);
	void Server_DrawMeleeAttackFeedback(class FName InSocketName, float InRadius);
	void OverwriteThreatList(const struct FAIThreatList& InNewThreatList);
	void Multicast_DrawMeleeAttackFeedback(class FName InSocketName, float InRadius);
	bool IsOnThreatList(class AActor* InActor);
	bool IsInCombat();
	bool IsAbilityActive(int32 InAbilityId);
	struct FAIThreatList GetThreatList();
	int32 GetThreatCount();
	float GetSpeed(class FName InKey);
	class AActor* GetHighestThreatReplicatedToClient();
	class FString GetDebugString();
	class AActor* GetClosestThreat();
	struct FAIBehaviourRanges GetBehaviourRanges();
	float GetAwarenessRadius();
	class AActor* FindTarget();
	int32 FindBestAbility(class AActor* InTarget, enum class EValeriaFuncResult* InOutResult);
	void DeactivateAbilitiesOutOfRange(class AActor* InTarget);
	bool CanMoveDuringAbility();
	void AddThreat(class AActor* InActor, int32 InThreat);
	void AddCharacterToThreatList(class AValeriaCharacter* InCharacter, bool InSendToTopOfThreatList);
	bool ActivateAbility(int32 InAbilityId);
};

// 0xA0 (0x140 - 0xA0)
// Class Palia.AimingComponent
class UAimingComponent : public UActorComponent
{
public:
	bool                                         NeedsToReload;                                     // 0xA0(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1EA2[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UCurveFloat*                           BeginCurve;                                        // 0xA8(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        BeginAimDuration;                                  // 0xB0(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ZoomedInBoomDistance;                              // 0xB4(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCurveFloat*                           EndCurve;                                          // 0xB8(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        EndAimDuration;                                    // 0xC0(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ZoomedOutBoomDistance;                             // 0xC4(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               ZoomedInTargetOffset;                              // 0xC8(0x18)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               ZoomedInSocketOffset;                              // 0xE0(0x18)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               ZoomedOutTargetOffset;                             // 0xF8(0x18)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               ZoomedOutSocketOffset;                             // 0x110(0x18)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EAimingState                      CurrentState;                                      // 0x128(0x1)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	enum class EAimingAnimationAimOffset         CurrentAnimationAimOffsetToUse;                    // 0x129(0x1)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_1EA7[0xE];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class USpringArmComponent*                   CameraBoom;                                        // 0x138(0x8)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("AimingComponent");
		return Clss;
	}

	void SetAimingState(enum class EAimingState InNewState, enum class EAimingAnimationAimOffset InOffset);
	void RemoveQueuedUpWeaponFire();
	void QueueUpWeaponFire();
	void NotifyEndAiming();
	void NotifyBeginAiming();
	bool IsAiming();
	bool HasQueuedUpWeaponFire();
	enum class EAimingAnimationAimOffset GetAnimationAimOffsetToUse();
	float GetAimPitchDirection();
	enum class EAimingState GetAimingState();
};

// 0x28 (0x70 - 0x48)
// Class Palia.AISenseConfig_ValeriaHearing
class UAISenseConfig_ValeriaHearing : public UAISenseConfig
{
public:
	TSubclassOf<class UAISense_ValeriaHearing>   Implementation;                                    // 0x48(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, DisableEditOnInstance, NoClear, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        DefaultHearingRange;                               // 0x50(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        HearingRangeForQuietActions;                       // 0x54(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        HearingRangeForNormalActions;                      // 0x58(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        HearingRangeForLoudActions;                        // 0x5C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        HearingRangeForStealthedActions;                   // 0x60(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        StealthMask;                                       // 0x64(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FAISenseAffiliationFilter             DetectionByAffiliation;                            // 0x68(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, Config, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                        Pad_1EAC[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("AISenseConfig_ValeriaHearing");
		return Clss;
	}

};

// 0x40 (0x68 - 0x28)
// Class Palia.AISenseEvent_ValeriaHearing
class UAISenseEvent_ValeriaHearing : public UAISenseEvent
{
public:
	struct FAIValeriaNoiseEvent                  Event;                                             // 0x28(0x40)(Edit, BlueprintVisible, NoDestructor, Protected, NativeAccessSpecifierProtected)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("AISenseEvent_ValeriaHearing");
		return Clss;
	}

};

// 0x60 (0xE0 - 0x80)
// Class Palia.AISense_ValeriaHearing
class UAISense_ValeriaHearing : public UAISense
{
public:
	TArray<struct FAIValeriaNoiseEvent>          NoiseEvents;                                       // 0x80(0x10)(ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_1EC5[0x50];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("AISense_ValeriaHearing");
		return Clss;
	}

	void ReportValeriaNoiseEvent(class UObject* InWorldContextObject, const struct FVector& InNoiseLocation, class AActor* InInstigator, enum class EValeriaNoiseEventVolume InVolume, int32 InStealthMask, class FName InTag);
};

// 0x50 (0x2F0 - 0x2A0)
// Class Palia.AkCulledComponent
class UAkCulledComponent : public USceneComponent
{
public:
	uint8                                        Pad_1ED4[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UAkAudioEvent*                         AkAudioEvent;                                      // 0x2A8(0x8)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        OcclusionRefreshInterval;                          // 0x2B0(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AttenuationScalingFactor;                          // 0x2B4(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bAutoStart;                                        // 0x2B8(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1ED7[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        MinUpdateTime;                                     // 0x2BC(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MaxUpdateTime;                                     // 0x2C0(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        DebounceDistance;                                  // 0x2C4(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bOverrideCullRadius;                               // 0x2C8(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1ED8[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        MaxCullRadius;                                     // 0x2CC(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MaxCullRadiusSquared;                              // 0x2D0(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        PlayingID;                                         // 0x2D4(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAkComponent*                          AssociatedAkComponent;                             // 0x2D8(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, Transient, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIsPlaying;                                        // 0x2E0(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIsAllowedToPlay;                                  // 0x2E1(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1EDA[0xE];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("AkCulledComponent");
		return Clss;
	}

	void Update();
	void Stop(int32 InFadeDuration);
	void Start();
	void SpawnAkComponent();
	void RemoveAkComponent(int32 InFadeDuration);
	float GetCullRadius();
	float GetAttenuationRadius();
};

// 0xB0 (0x340 - 0x290)
// Class Palia.AkEventDebugActor
class AAkEventDebugActor : public AActor
{
public:
	class AActor*                                FollowActor;                                       // 0x290(0x8)(ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAkComponent*                          FollowAkComponent;                                 // 0x298(0x8)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAkAudioEvent*                         AkAudioEvent;                                      // 0x2A0(0x8)(ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FTransform>                    Positions;                                         // 0x2A8(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	uint8                                        Pad_1EE6[0x20];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UAkAudioEvent*                         AudioEvent;                                        // 0x2D8(0x8)(ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class APlayerCameraManager*                  PlayerCameraManager;                               // 0x2E0(0x8)(ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class AActor*                                OwningActor;                                       // 0x2E8(0x8)(ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FTimerHandle                          DestroyTimerHandle;                                // 0x2F0(0x8)(NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FTimerHandle                          TrackingTimerHandle;                               // 0x2F8(0x8)(NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FTimerHandle                          ActionTimerHandle;                                 // 0x300(0x8)(NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_1EE8[0x38];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("AkEventDebugActor");
		return Clss;
	}

	void OnFinishedPlaying();
	void DestroySelf();
};

// 0x0 (0x28 - 0x28)
// Class Palia.AnimStateFunctions
class UAnimStateFunctions : public UBlueprintFunctionLibrary
{
public:

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("AnimStateFunctions");
		return Clss;
	}

	bool IsIdle(struct FAnimState& InAnimState);
	bool IsEmpty(struct FAnimState& InAnimState);
};

// 0x40 (0xE0 - 0xA0)
// Class Palia.ArcadeCommandComponent
class UArcadeCommandComponent : public UActorComponent
{
public:
	FMulticastInlineDelegateProperty_            OnScoresReceived;                                  // 0xA0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FArcadeInputState                     CurrentInputState;                                 // 0xB0(0x30)(NoDestructor, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("ArcadeCommandComponent");
		return Clss;
	}

	void SendArcadeGameCommand(const struct FArcadeGameCommand& InCommand);
	void RpcServer_SendArcadeGameCommand(const struct FArcadeGameCommand& InCommand);
	void RpcClient_SendLeaderboardScores(TArray<struct FArcadeLeaderboardEntry>& InScores);
	struct FArcadeInputState ConsumeArcadeInputState();
};

// 0x38 (0x68 - 0x30)
// Class Palia.SubgameConfig
class USubgameConfig : public UDataAsset
{
public:
	TSubclassOf<class USubgameManagerComponent>  SubgameManagerClass;                               // 0x30(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class USubgameInputHandlerComponent> SubgameInputHandlerClass;                          // 0x38(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        MaxNumConcurrentPlayers;                           // 0x40(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        CameraTransitionTime;                              // 0x44(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FQuestRewardConfig>            Rewards;                                           // 0x48(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	class UAkRtpc*                               SubgameMixRtpc;                                    // 0x58(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class ASubgameCutawayScene>      SubgameCutawaySceneToCreate;                       // 0x60(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("SubgameConfig");
		return Clss;
	}

	bool IsSubgameValid(class FString* InError);
};

// 0x8 (0x70 - 0x68)
// Class Palia.ArcadeConfig
class UArcadeConfig : public USubgameConfig
{
public:
	struct FGameplayTag                          ArcadeMachineHighScoreTag;                         // 0x68(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("ArcadeConfig");
		return Clss;
	}

};

// 0x198 (0x428 - 0x290)
// Class Palia.ArcadeMachineActor
class AArcadeMachineActor : public AActor
{
public:
	TArray<struct FArcadeLeaderboardEntry>       RequiredVillagerScores;                            // 0x290(0x10)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TArray<struct FArcadeLeaderboardEntry>       ExtraVillagerScores;                               // 0x2A0(0x10)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FGameplayTag                          ArcadeMachineHighScoreTag;                         // 0x2B0(0x8)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIsCurrentlyPlaying;                               // 0x2B8(0x1)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_1F24[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class AActor*                                CurrentlyPlayingActor;                             // 0x2C0(0x8)(ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FGuid                                 Server_CurrentReplayId;                            // 0x2C8(0x10)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FArcadeReplicatedReplayFrameArray     Server_ReplicatedReplayFrames;                     // 0x2D8(0x128)(Net, NativeAccessSpecifierPrivate)
	struct FGuid                                 Client_CurrentReplayId;                            // 0x400(0x10)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int32                                        Client_CurrentFrameIndex;                          // 0x410(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int32                                        Client_ReplayInputsConsumed;                       // 0x414(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<struct FArcadeInputState>             Client_CurrentReplayInputs;                        // 0x418(0x10)(ZeroConstructor, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("ArcadeMachineActor");
		return Clss;
	}

	bool ViewingOthersIsEnabled();
	void OnCurrentReplayInputsChanged();
	bool IsMachineLocked();
	int32 GetNumberOfReplayInputsToConsume();
	struct FGuid GetCurrentReplayGuid();
	int32 ConvertReplayGuidToSeed(const struct FGuid& InGuid);
	struct FArcadeInputState ConsumeReplayInput();
	void Client_OnReplayInputReplicated();
};

// 0x68 (0x2F8 - 0x290)
// Class Palia.ArcadeMachineBase
class AArcadeMachineBase : public AActor
{
public:
	class USceneComponent*                       ArcadeMachineRootComponent;                        // 0x290(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USphereComponent*                      InteractableSphereCollider;                        // 0x298(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCameraComponent*                      CameraComponent;                                   // 0x2A0(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UAkComponent*                          AkComponent;                                       // 0x2A8(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UInteractableComponent*                InteractableComponent;                             // 0x2B0(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USubgameActivatorComponent*            SubgameActivatorComponent;                         // 0x2B8(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<struct FArcadeLeaderboardEntry>       RequiredVillagerScores;                            // 0x2C0(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	TArray<struct FArcadeLeaderboardEntry>       ExtraVillagerScores;                               // 0x2D0(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	TArray<struct FArcadeLeaderboardEntry>       LeaderboardEntries;                                // 0x2E0(0x10)(BlueprintVisible, Net, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	struct FGameplayTag                          ArcadeMachineHighScoreTag;                         // 0x2F0(0x8)(BlueprintVisible, BlueprintReadOnly, Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("ArcadeMachineBase");
		return Clss;
	}

	void SetArcadeMachineHighScoreTag(struct FGameplayTag& InInGameplayTag);
	void LoadLeaderboardScores(int32 InNumScoresToRetrieve);
	void AddLeaderboardScore(class AValeriaCharacter* InInCharacter, int32 InInScore);
	void AddLeaderboardEntryToSortedArray(TArray<struct FArcadeLeaderboardEntry>* InLeaderboard, struct FArcadeLeaderboardEntry& InEntry);
};

// 0x50 (0xF0 - 0xA0)
// Class Palia.SubgameManagerComponent
class USubgameManagerComponent : public UActorComponent
{
public:
	FMulticastInlineDelegateProperty_            OnCharacterEnteredSubgameManager;                  // 0xA0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnCharacterExitedSubgameManager;                   // 0xB0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	float                                        CompletedScreenTime;                               // 0xC0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1F5C[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class AValeriaCharacter*                     OwningCharacter;                                   // 0xC8(0x8)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<class AValeriaCharacter*>             PlayingCharacters;                                 // 0xD0(0x10)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	enum class ESubgameState                     SubgameState;                                      // 0xE0(0x1)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1F5D[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class USubgameConfig*                        SubgameConfig;                                     // 0xE8(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("SubgameManagerComponent");
		return Clss;
	}

	void TransitionToSubgameCamera(class AValeriaPlayerController* InValeriaPlayerController);
	void TransitionBackToMainCamera(class AValeriaPlayerController* InValeriaPlayerController);
	void RemoveAllCharacters(enum class ESubgameResult InInSubgameResult);
	void InitializeSubgame(class USubgameConfig* InInSubgameConfig, class AValeriaCharacter* InCreatingCharacter);
	enum class ESubgameState GetSubgameState();
	int32 GetNumActivePlayingCharacters();
	void ExitSubgame(class AValeriaCharacter* InExitingCharacter, enum class ESubgameResult InSubgameResult);
	void EnterSubgame(class AValeriaCharacter* InEnteringCharacter);
	void DestroyAfterDelay();
	void CompleteSubgame();
	bool BPNE_ShouldFadeToBlackOnCameraChange();
	class AActor* BPNE_GetSubgameCameraActor();
	void BPIE_CompleteSubgame();
	void BPIE_CharacterExitedSubgame(class AValeriaCharacter* InEnteringCharacter, enum class ESubgameResult InSubgameResult);
	void BPIE_CharacterEnteredSubgame(class AValeriaCharacter* InEnteringCharacter);
	void BPIE_BeginSubgame();
	void BeginSubgame();
};

// 0x10 (0x100 - 0xF0)
// Class Palia.ArcadeSubgameManagerComponent
class UArcadeSubgameManagerComponent : public USubgameManagerComponent
{
public:
	class UArcadeConfig*                         ArcadeConfig;                                      // 0xF0(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class AArcadeMachineBase*                    ManagedArcadeMachine;                              // 0xF8(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("ArcadeSubgameManagerComponent");
		return Clss;
	}

};

// 0x28 (0x50 - 0x28)
// Class Palia.ArraySorter
class UArraySorter : public UObject
{
public:
	FMulticastInlineDelegateProperty_            OnCompare;                                         // 0x28(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TArray<int32>                                SortedIndices;                                     // 0x38(0x10)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	bool                                         PreviousCompareResult;                             // 0x48(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_1F5F[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("ArraySorter");
		return Clss;
	}

	void Sort(int32 InNumberOfElements);
	void SetCompareResult(bool InIsLeftLessThanRight);
};

// 0x0 (0xA0 - 0xA0)
// Class Palia.AudioFoliageManagerComponent
class UAudioFoliageManagerComponent : public UActorComponent
{
public:

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("AudioFoliageManagerComponent");
		return Clss;
	}

	TArray<struct FVector> SortVectorsByClosest(const TArray<struct FVector>& InVectors, const struct FVector& InCenter);
};

// 0x50 (0x80 - 0x30)
// Class Palia.AudioFoliageRustleDataAsset
class UAudioFoliageRustleDataAsset : public UPrimaryDataAsset
{
public:
	TMap<TSoftObjectPtr<class UStaticMesh>, class UAkAudioEvent*> RustleAudioByMesh;                                 // 0x30(0x50)(Edit, BlueprintVisible, DisableEditOnInstance, NativeAccessSpecifierPublic)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("AudioFoliageRustleDataAsset");
		return Clss;
	}

};

// 0x58 (0x88 - 0x30)
// Class Palia.AudioManager
class UAudioManager : public UGameInstanceSubsystem
{
public:
	uint8                                        Pad_1F64[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TMap<int32, class AAkEventDebugActor*>       AudioDebugActors;                                  // 0x38(0x50)(NativeAccessSpecifierPrivate)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("AudioManager");
		return Clss;
	}

	void UnregisterDebugActor(int32 InPlayingID);
	void SetDebugDisplayStatus(bool InbShowDebugInfo);
	void SetDebugDisplayOutOfRange(bool InbShowDebugInfo);
	void OnAAkEventDebugActorDestroyed(class AActor* InActor);
};

// 0xD0 (0x100 - 0x30)
// Class Palia.AuthManager
class UAuthManager : public ULocalPlayerSubsystem
{
public:
	FMulticastInlineDelegateProperty_            LoggedIn;                                          // 0x30(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            SignedInAsCharacter;                               // 0x40(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            LogInFailure;                                      // 0x50(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            RegisterSuccess;                                   // 0x60(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            RegisterFailure;                                   // 0x70(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            LoginResetStatusDelegate;                          // 0x80(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            LinkedSuccess_PF;                                  // 0x90(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            LinkedFailure_PF;                                  // 0xA0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnJWTTokenRefreshCompleted;                        // 0xB0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                        Pad_1F8E[0x40];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("AuthManager");
		return Clss;
	}

	void StartRegisterUser(const struct FValeriaUserDTO& InNewUserDTO);
	void StartLoginResetUser(const struct FValeriaUserDTO& InLoginData);
	void StartLogin();
	void StartLink(bool InbUseHeadlessAccount);
	void SetPassword(const class FString& InPassword);
	void SetAccountUsername(const class FString& InAccountUsername);
	void QuickRegisterUser(const class FString& InNewUserName);
	void OnJWTTokenRefreshCompleted__DelegateSignature(bool InbSucceeded, int32 InErrorCode);
	void LoginResetHandler(int32 InForLocalUserNum, bool InbWasSuccessful, const struct FValeriaUserDTO& InResultsData);
	bool IsLoggedIn();
	bool HasValidJWT();
	void HandleRegisterAccountSucceeded(int32 InForLocalUserNum, struct FValeriaUserDTO& InNewUser);
	void HandleRegisterAccountFailed(int32 InForLocalUserNum, class FText& InErrorMessage);
	void HandleOnPlatformLoggedIn(int32 InForLocalUserNum, bool InWasSuccessful, const struct FGuid& InInAccountId, const class FString& InInAccountUsername, const class FString& InErrorMessage, int32 InErrorCode);
	void HandleOnCharacterSelected(struct FOSSVAL_SelectedCharacter& InSelectedCharacter);
	int32 GetValidJWTTokenErrorCode();
	struct FUniqueNetIdRepl GetNetId();
	class FString GetCharacterName();
	struct FGuid GetCharacterId();
	class FString GetAccountUsername();
	struct FGuid GetAccountId();
	class FString GenerateRandomUserName();
	void FakeLogin(int32 InLocalUserNum, const class FString& InAccountUsername, const class FString& InCharacterName);
	void ChangeCharacter(const class FString& InCharacterName, const class FString& InNickname);
};

// 0x128 (0x1C8 - 0xA0)
// Class Palia.VAL_BingoBoardgamePlayerComponent
class UVAL_BingoBoardgamePlayerComponent : public UActorComponent
{
public:
	FMulticastInlineDelegateProperty_            OnBingoBoardgameDataUpdated;                       // 0xA0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	float                                        DataStalenessThresholdSeconds;                     // 0xB0(0x4)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_1F9B[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSoftObjectPtr<class UBingoBoardgamesConfiguration> CurrentConfigurationSoftReference;                 // 0xB8(0x30)(UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UBingoBoardgamesConfiguration*         CurrentConfiguration;                              // 0xE8(0x8)(ZeroConstructor, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FVAL_BingoBoardgameReplicatedState    BingoBoardgameReplicatedState;                     // 0xF0(0x80)(Net, RepNotify, NoDestructor, NativeAccessSpecifierPrivate)
	TMap<struct FGuid, struct FVAL_OnContributeBingoItemsDelegates> ContributeItemsRequestIdToResponseDelegatesMap;    // 0x170(0x50)(Transient, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	uint8                                        Pad_1F9C[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("VAL_BingoBoardgamePlayerComponent");
		return Clss;
	}

	bool TryGetBingoBoardgameData(struct FBingoBoardTemplateData* InOutBingoBoardTemplate, struct FBingoBoardgameState* InOutBingoBoardgameState, bool InbAllowFetch);
	void ServerMakeRequest_ContributeItems(int32 InBingoCellIndex, TSoftObjectPtr<class UVAL_ItemTypeDefinitionAsset>& InItemType, int32 InQuantity, const struct FGuid& InRequestId);
	void ServerFetchBingoBoardData();
	void OnRep_BingoBoardgameReplicatedState();
	void OnBingoBoardgameDataUpdated__DelegateSignature(class UVAL_BingoBoardgamePlayerComponent* InBingoBoardgamePlayerComponent);
	void HandlePlayerStateIdentityInitialized(class AVAL_PlayerState* InPlayerState);
	void FetchBingoBoardData();
	void ContributeItems(int32 InBingoCellIndex, TSoftObjectPtr<class UVAL_ItemTypeDefinitionAsset>& InItemType, int32 InQuantity, FDelegateProperty_& InOnSuccess, FDelegateProperty_& InOnFailure);
	void ClientReceiveResponse_ContributeItems_Success(const struct FGuid& InRequestId, TSoftObjectPtr<class UVAL_ItemTypeDefinitionAsset>& InItemType, int32 InBingoCellIndex, int32 InUpdatedTotal, int32 InContributedQuantity);
	void ClientReceiveResponse_ContributeItems_Failure(const struct FGuid& InRequestId, class FText& InErrorMessage);
};

// 0x10 (0x40 - 0x30)
// Class Palia.BingoBoardgamesConfiguration
class UBingoBoardgamesConfiguration : public UDataAsset
{
public:
	TArray<struct FBingoBoardTemplateData>       BingoBoards;                                       // 0x30(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("BingoBoardgamesConfiguration");
		return Clss;
	}

};

// 0x0 (0x28 - 0x28)
// Class Palia.VAL_BingoBoardgameBlueprintFunctionLibrary
class UVAL_BingoBoardgameBlueprintFunctionLibrary : public UBlueprintFunctionLibrary
{
public:

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("VAL_BingoBoardgameBlueprintFunctionLibrary");
		return Clss;
	}

	bool TryGetBingoCellFromTemplateByIndex(struct FBingoBoardTemplateData& InTemplate, int32 InIndex, struct FBingoBoardGridCellTemplate* InOutBingoCell);
	bool TryGetBingoCellFromTemplateByCartesian(struct FBingoBoardTemplateData& InTemplate, int32 InColumnIndex, int32 InRowIndex, struct FBingoBoardGridCellTemplate* InOutBingoCell);
	bool TryGetBingoCellFromBoardgameStateByIndex(struct FBingoBoardgameState& InBoardgameState, int32 InIndex, int32* InOutProgress);
	bool TryGetBingoCellFromBoardgameStateByCartesian(struct FBingoBoardgameState& InBoardgameState, int32 InColumnIndex, int32 InRowIndex, int32* InOutProgress);
	bool IsBillboardQuestsFeatureEnabled();
	int32 GetBingoCellIndexFromCartesian(int32 InColumnIndex, int32 InRowIndex);
	void GetBingoCellCartesianFromIndex(int32 InIndex, int32* InOutColumnIndex, int32* InOutRowIndex);
	int32 GetBingoBoardSquareSize();
	int32 GetBingoBoardLinearArraySize();
};

// 0x58 (0xF8 - 0xA0)
// Class Palia.BookReadingComponent
class UBookReadingComponent : public UActorComponent
{
public:
	uint8                                        Pad_1FA2[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FBookReadingPersistBlock              BookReadingPersistBlock;                           // 0xA8(0x50)(Net, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("BookReadingComponent");
		return Clss;
	}

};

// 0x0 (0x98 - 0x98)
// Class Palia.BTTaskCreatureMoveForward
class UBTTaskCreatureMoveForward : public UBTTask_BlackboardBase
{
public:

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("BTTaskCreatureMoveForward");
		return Clss;
	}

};

// 0x10 (0x80 - 0x70)
// Class Palia.BTTask_CreatureBecomeAware
class UBTTask_CreatureBecomeAware : public UBTTaskNode
{
public:
	float                                        NavigationCheckRadius;                             // 0x70(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        JumpImpulseStrength;                               // 0x74(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        Duration;                                          // 0x78(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        MovementDuration;                                  // 0x7C(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("BTTask_CreatureBecomeAware");
		return Clss;
	}

};

// 0x8 (0xA0 - 0x98)
// Class Palia.BTTask_CreatureDespawn
class UBTTask_CreatureDespawn : public UBTTask_BlackboardBase
{
public:
	float                                        DespawnDuration;                                   // 0x98(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_1FA4[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("BTTask_CreatureDespawn");
		return Clss;
	}

};

// 0x0 (0x70 - 0x70)
// Class Palia.BTTask_CreatureDie
class UBTTask_CreatureDie : public UBTTaskNode
{
public:

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("BTTask_CreatureDie");
		return Clss;
	}

};

// 0x8 (0xA0 - 0x98)
// Class Palia.BTTask_CreatureEscape
class UBTTask_CreatureEscape : public UBTTask_BlackboardBase
{
public:
	float                                        NavAcceptanceRadius;                               // 0x98(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bReachTestIncludesAgentRadius;                     // 0x9C(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bReachTestIncludesGoalRadius;                      // 0x9D(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_1FA6[0x2];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("BTTask_CreatureEscape");
		return Clss;
	}

};

// 0x38 (0xD0 - 0x98)
// Class Palia.BTTask_CreatureEvade
class UBTTask_CreatureEvade : public UBTTask_BlackboardBase
{
public:
	float                                        PathRefreshFrequency;                              // 0x98(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        MinimumTimeToEvade;                                // 0x9C(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        MaximumTimeToEvade;                                // 0xA0(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        DistanceFromThreatsToStopEvading;                  // 0xA4(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        PathDistanceToCompleteOnStopEvading;               // 0xA8(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        InitialDirectionAngleNoise;                        // 0xAC(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        SubsequentAngleInterval;                           // 0xB0(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        MinimumEvadeTimeAfterTeleport;                     // 0xB4(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        MinimumViablePathDistance;                         // 0xB8(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        TargetPathDistance;                                // 0xBC(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        MinPauseTimeAfterEvadePathComplete;                // 0xC0(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        MaxPauseTimeAfterEvadePathComplete;                // 0xC4(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        NavAcceptanceRadius;                               // 0xC8(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bReachTestIncludesAgentRadius;                     // 0xCC(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bReachTestIncludesGoalRadius;                      // 0xCD(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_1FA8[0x2];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("BTTask_CreatureEvade");
		return Clss;
	}

};

// 0x0 (0x98 - 0x98)
// Class Palia.BTTask_CreatureHitReact
class UBTTask_CreatureHitReact : public UBTTask_BlackboardBase
{
public:

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("BTTask_CreatureHitReact");
		return Clss;
	}

};

// 0x0 (0x70 - 0x70)
// Class Palia.BTTask_CreatureStunned
class UBTTask_CreatureStunned : public UBTTaskNode
{
public:

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("BTTask_CreatureStunned");
		return Clss;
	}

};

// 0x8 (0x78 - 0x70)
// Class Palia.BTTask_CreatureWander
class UBTTask_CreatureWander : public UBTTaskNode
{
public:
	float                                        WanderRadius;                                      // 0x70(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1FA9[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("BTTask_CreatureWander");
		return Clss;
	}

};

// 0x8 (0xA0 - 0x98)
// Class Palia.BTTask_PerformAbility
class UBTTask_PerformAbility : public UBTTask_BlackboardBase
{
public:
	int32                                        AbilityIndexToPerform;                             // 0x98(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AbilityCooldown;                                   // 0x9C(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("BTTask_PerformAbility");
		return Clss;
	}

};

// 0x0 (0x70 - 0x70)
// Class Palia.BTTask_ReturnToIdle
class UBTTask_ReturnToIdle : public UBTTaskNode
{
public:

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("BTTask_ReturnToIdle");
		return Clss;
	}

};

// 0x10 (0x88 - 0x78)
// Class Palia.BTTask_WaitCustom
class UBTTask_WaitCustom : public UBTTask_Wait
{
public:
	TArray<float>                                AllowedWaitTimes;                                  // 0x78(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("BTTask_WaitCustom");
		return Clss;
	}

};

// 0xA8 (0x148 - 0xA0)
// Class Palia.BuffComponent
class UBuffComponent : public UActorComponent
{
public:
	uint8                                        Pad_1FB7[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	FMulticastInlineDelegateProperty_            OnChanged;                                         // 0xA8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnStarted;                                         // 0xB8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintAuthorityOnly, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnStopped;                                         // 0xC8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintAuthorityOnly, NativeAccessSpecifierPublic)
	TArray<struct FBuffActivation>               ActiveBuffs;                                       // 0xD8(0x10)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, RepNotify, NativeAccessSpecifierPrivate)
	uint8                                        Pad_1FB8[0x60];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("BuffComponent");
		return Clss;
	}

	void RpcServer_ForceRemoveBuffInstance(int32 InBuffInstanceId);
	void RpcServer_CheatClearAllBuffs();
	bool RemoveBuffInstance(int32 InInstanceId);
	bool RemoveBuffByConfig(int32 InBuffConfigId);
	void OnReplicatedAndShouldBroadcast();
	float GetPercentUsedFromActivation(struct FBuffActivation& InBuffActivation);
	float GetPercentUsed(int32 InInstanceId);
	int32 GetInstanceId(int32 InBuffConfigId);
	float GetEffectQuantifier(enum class EBuffEffect InEffect);
	void Client_ForceRemoveBuffInstance(int32 InBuffInstanceId);
	bool BuffIsActive(int32 InInstanceId);
	int32 ApplyEffectQuantifier(enum class EBuffEffect InEffect, int32 InBase);
	int32 AddBuff(int32 InBuffConfigId);
};

// 0x0 (0x30 - 0x30)
// Class Palia.BuffGroupConfig
class UBuffGroupConfig : public UDataAsset
{
public:

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("BuffGroupConfig");
		return Clss;
	}

};

// 0x68 (0x98 - 0x30)
// Class Palia.BugReportSubsystem
class UBugReportSubsystem : public ULocalPlayerSubsystem
{
public:
	FMulticastInlineDelegateProperty_            OnFailedToReportBug;                               // 0x30(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                        Pad_1FBC[0x58];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("BugReportSubsystem");
		return Clss;
	}

	void ReportBug(const class FString& InSummary);
};

// 0x68 (0x108 - 0xA0)
// Class Palia.BundlesComponent
class UBundlesComponent : public UActorComponent
{
public:
	uint8                                        Pad_1FD8[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	FMulticastInlineDelegateProperty_            BundleCompletedDel;                                // 0xA8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FBundlePersistBlock                   BundlePersistBlock;                                // 0xB8(0x50)(Net, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("BundlesComponent");
		return Clss;
	}

	void RpcServer_RemoveAndApplyBundleItems(TSoftObjectPtr<class UBundleShrineConfig>& InbundleConfigPtr, int32 InSubBundleId, TSoftObjectPtr<class UVAL_ItemTypeDefinitionAsset>& InItemType, int32 InAmount);
	void RpcServer_InitializeBundle(int32 InBundleConfigId, int32 InSubBundleConfigId);
	void RpcServer_GrantSubBundleRewards(TSoftObjectPtr<class UBundleShrineConfig>& InbundleConfigPtr, int32 InSubBundleId);
	void RpcServer_GrantBundleRewards(TSoftObjectPtr<class UBundleShrineConfig>& InbundleConfigPtr);
	void RpcClient_BundleCompleted();
	bool IsSubBundleRewardGranted(int32 InBundleID, int32 InSubBundleId);
	bool IsSubBundleRequirementComplete(int32 InBundleID, int32 InSubBundleId, int32 InRequirementId);
	bool IsSubBundleComplete(int32 InBundleID, int32 InSubBundleId);
	bool IsBundleRewardGranted(int32 InBundleID);
	bool IsBundleComplete(int32 InBundleID);
	int32 GetSubmittedItemCount(int32 InBundleID, int32 InSubBundleId, int32 InRequirementId);
	int32 GetSubBundleRequirementCompletedCount(int32 InBundleID, int32 InSubBundleId);
	bool Client_RemoveAndApplyBundleItems(TSoftObjectPtr<class UBundleShrineConfig>& InbundleConfigPtr, int32 InSubBundleId, TSoftObjectPtr<class UVAL_ItemTypeDefinitionAsset>& InItemType, int32 InAmount, enum class EValeriaFuncResult* InOutResult);
	void Client_InitializeBundle(int32 InBundleConfigId, int32 InSubBundleConfigId);
	bool Client_GrantSubBundleRewards(TSoftObjectPtr<class UBundleShrineConfig>& InbundleConfigPtr, int32 InSubBundleId, enum class EValeriaFuncResult* InOutResult);
	bool Client_GrantBundleRewards(TSoftObjectPtr<class UBundleShrineConfig>& InbundleConfigPtr, enum class EValeriaFuncResult* InOutResult);
};

// 0x38 (0x68 - 0x30)
// Class Palia.BundleShrineConfig
class UBundleShrineConfig : public UDataAsset
{
public:
	int32                                        PersistId;                                         // 0x30(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1FDE[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FString                                BundleName;                                        // 0x38(0x10)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FQuestRewardConfig>            BundleRewards;                                     // 0x48(0x10)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FSubBundleShrineConfig>        SubBundles;                                        // 0x58(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("BundleShrineConfig");
		return Clss;
	}

};

// 0x38 (0xD8 - 0xA0)
// Class Palia.BundleVaultComponent
class UBundleVaultComponent : public UActorComponent
{
public:
	uint8                                        Pad_1FEE[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UBundleShrineConfig*                   BundleConfig;                                      // 0xA8(0x8)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FText                                  InteractText;                                      // 0xB0(0x18)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	TArray<struct FPersistentTagWriteback>       PlayerTagWritebackOnInteract;                      // 0xC8(0x10)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("BundleVaultComponent");
		return Clss;
	}

	struct FServerUseEventResult OnServerInteract(class UInteractableComponent* InInteractable, class AValeriaCharacter* InCharacter, const struct FInteractEventParams& InEventParams);
	struct FUseEventResult OnClientInteract(class UInteractableComponent* InInteractable, class AValeriaPlayerController* InPlayer, const struct FInteractEventParams& InEventParams);
	bool IsInteractable(class AValeriaCharacter* InCharacter, const struct FInteractEventParams& InEventParams);
	bool GetText(class AValeriaCharacter* InCharacter, enum class EInteractEventIndex InEventIndex, struct FGetTextParams* InParams);
};

// 0x10 (0xB0 - 0xA0)
// Class Palia.BurstNetSpeedComponent
class UBurstNetSpeedComponent : public UActorComponent
{
public:
	int32                                        BurstNetSpeed;                                     // 0xA0(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        BurstNetSpeedDuration;                             // 0xA4(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_1FF1[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("BurstNetSpeedComponent");
		return Clss;
	}

	void DisableBurstOfNetSpeed();
};

// 0x10 (0x2A0 - 0x290)
// Class Palia.CameraTargetActor
class ACameraTargetActor : public AActor
{
public:
	class USpringArmComponent*                   CameraBoom;                                        // 0x290(0x8)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCameraComponent*                      FollowCamera;                                      // 0x298(0x8)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("CameraTargetActor");
		return Clss;
	}

};

// 0x60 (0x100 - 0xA0)
// Class Palia.CameraTargetComponent
class UCameraTargetComponent : public UActorComponent
{
public:
	class ACameraTargetActor*                    CameraActor;                                       // 0xA0(0x8)(ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FCameraTarget                         Target;                                            // 0xA8(0x30)(NoDestructor, NativeAccessSpecifierPrivate)
	struct FTimerHandle                          RefreshTargetsTimerHandle;                         // 0xD8(0x8)(NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_1FFA[0x20];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("CameraTargetComponent");
		return Clss;
	}

	class AActor* GetTarget();
	void Client_TurnAtRate(float InRate);
	void Client_Turn(float InRate);
	void Client_LookUpAtRate(float InRate);
	void Client_LookUp(float InRate);
};

// 0x18 (0xB8 - 0xA0)
// Class Palia.CapsuleCollisionOverrideComponent
class UCapsuleCollisionOverrideComponent : public UActorComponent
{
public:
	class UCapsuleComponent*                     OwnerCapsule;                                      // 0xA0(0x8)(ExportObject, ZeroConstructor, Transient, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FName                                  CollisionProfileOriginal;                          // 0xA8(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FName                                  CollisionProfileOverride;                          // 0xB0(0x8)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("CapsuleCollisionOverrideComponent");
		return Clss;
	}

	void OnReplicatedNotify();
};

// 0x100 (0x148 - 0x48)
// Class Palia.ChallengeConfig
class UChallengeConfig : public UGuidDataAsset
{
public:
	class FText                                  DisplayName;                                       // 0x48(0x18)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	class FText                                  DisplayText;                                       // 0x60(0x18)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	struct FLootRequirements                     Requirements;                                      // 0x78(0xB0)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	TArray<struct FVillagerQuestRequirement>     Goals;                                             // 0x128(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FQuestRewardConfig>            Rewards;                                           // 0x138(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("ChallengeConfig");
		return Clss;
	}

};

// 0x0 (0x30 - 0x30)
// Class Palia.ChallengesSubsystem
class UChallengesSubsystem : public UGameInstanceSubsystem
{
public:

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("ChallengesSubsystem");
		return Clss;
	}

	struct FTimespan GetTimeTillExpiration(class UObject* InContext);
	void GetDisplayInfo(class AValeriaCharacter* InCharacter, TArray<struct FChallengeDisplayInfo>* InInfos);
};

// 0x0 (0x580 - 0x580)
// Class Palia.CreatureSpawnBoxComponent
class UCreatureSpawnBoxComponent : public UBoxComponent
{
public:

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("CreatureSpawnBoxComponent");
		return Clss;
	}

};

// 0x128 (0x3B8 - 0x290)
// Class Palia.ChapaaChaseManager
class AChapaaChaseManager : public AActor
{
public:
	FMulticastInlineDelegateProperty_            OnChapaaChaseStateChange;                          // 0x290(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnChapaaChaseCurrentGameChange;                    // 0x2A0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnChapaaChaseParticipantChange;                    // 0x2B0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TArray<struct FCreatureSpawnEntry>           CreatureSpawnConfig;                               // 0x2C0(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	float                                        MaxRunTimeSeconds;                                 // 0x2D0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bUseCaptureGoal;                                   // 0x2D4(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_206C[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        GoalCapturesPerPlayer;                             // 0x2D8(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SpawnWaveIntervalSeconds;                          // 0x2DC(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        MinWaveCreatureSpawn;                              // 0x2E0(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        MaxWaveCreatureSpawn;                              // 0x2E4(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        CreatureSpawnPerPlayer;                            // 0x2E8(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        LimitCreaturesPerPlayer;                           // 0x2EC(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        MaxLimitCreatures;                                 // 0x2F0(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        InitialDelay;                                      // 0x2F4(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        MaxCreaturesHeld;                                  // 0x2F8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2074[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UCurrencyConfig*                       CurrencyToAward;                                   // 0x300(0x8)(Edit, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        GameStartTimestamp;                                // 0x308(0x4)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2075[0xC];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UVAL_ItemTypeDefinitionAsset*          TempCreatureItemToEquip;                           // 0x318(0x8)(Edit, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EChappaChaseState                 CurrentState;                                      // 0x320(0x1)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2077[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UBoxComponent*                         PlayerParticipationBox;                            // 0x328(0x8)(Edit, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UCreatureSpawnBoxComponent*            DefaultSpawnBox;                                   // 0x330(0x8)(Edit, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UBillboardComponent*                   RootBillboard;                                     // 0x338(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bOverridePlayerCount;                              // 0x340(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2079[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        OverridePlayerCount;                               // 0x344(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_207C[0x38];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FChapaaChaseParticipant>       CurrentParticipantInfo;                            // 0x380(0x10)(Net, ZeroConstructor, RepNotify, NativeAccessSpecifierPrivate)
	TArray<class ACreatureCharacter*>            SpawnedCreatures;                                  // 0x390(0x10)(ZeroConstructor, NativeAccessSpecifierPrivate)
	uint8                                        Pad_207F[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        CurrentGameCaptureGoal;                            // 0x3A8(0x4)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int32                                        CurrentGameCaptureCount;                           // 0x3AC(0x4)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int32                                        CurrentGameScore;                                  // 0x3B0(0x4)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bPreviousGameSuccess;                              // 0x3B4(0x1)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2082[0x3];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("ChapaaChaseManager");
		return Clss;
	}

	void TryDropCreatures(class AValeriaPlayerController* InPlayer);
	bool Stop();
	bool Start();
	void SetState(enum class EChappaChaseState InNewState);
	void SetEnableSpawning(bool InbEnable);
	bool PickUpCreature(class AValeriaPlayerController* InPlayer, class ACreatureCharacter* InCreature);
	void OnRep_CurrentState(enum class EChappaChaseState InOldState);
	void OnRep_CurrentParticipantInfo();
	void OnRep_CurrentGameInfo();
	bool IsReadyToPlay();
	bool IsPlayerParticipating(const struct FChapaaChaseParticipant& InPlayer);
	bool IsInProgress();
	void Initialize();
	void HandleParticipationBoxEndOverlap(class UPrimitiveComponent* InOverlappedComponent, class AActor* InOtherActor, class UPrimitiveComponent* InOtherComp, int32 InOtherBodyIndex);
	void HandleParticipationBoxBeginOverlap(class UPrimitiveComponent* InOverlappedComponent, class AActor* InOtherActor, class UPrimitiveComponent* InOtherComp, int32 InOtherBodyIndex, bool InbFromSweep, struct FHitResult& InSweepResult);
	void HandleCreatureDestroyed(class AActor* InDestroyedActor);
	enum class EChappaChaseState GetState();
	bool GetPreviousGameSuccess();
	bool GetParticipantInfo(class AValeriaPlayerController* InPlayer, struct FChapaaChaseParticipant* InOutParticipantInfo);
	int32 GetParticipantCreatureHeldCount(class AValeriaPlayerController* InInPlayer);
	int32 GetCurrentGameScore();
	int32 GetCurrentGameCaptureGoal();
	int32 GetCurrentGameCaptureCount();
	int32 GetCreatureCaptureValue(TSubclassOf<class ACreatureCharacter> InInCreatureClass);
	TArray<struct FChapaaChaseParticipant> GetAllParticipantsSorted();
	TArray<struct FChapaaChaseParticipant> GetAllParticipants();
	int32 CaptureCreatures(class AValeriaPlayerController* InPlayer);
	bool CanPickUpCreature(class AValeriaPlayerController* InPlayer, class ACreatureCharacter* InCreature);
};

// 0x28 (0x50 - 0x28)
// Class Palia.CharacterCustomizationItemConfig
class UCharacterCustomizationItemConfig : public UObject
{
public:
	uint8                                        Pad_208C[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	enum class ECustomizationItemSlot            ItemSlot;                                          // 0x2C(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_208D[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class USkeletalMesh*                         Mesh;                                              // 0x30(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsBasicItem;                                       // 0x38(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2090[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<int32>                                Weights;                                           // 0x40(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, NativeAccessSpecifierPublic)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("CharacterCustomizationItemConfig");
		return Clss;
	}

};

// 0x0 (0x28 - 0x28)
// Class Palia.ValeriaItemConfigBlueprintFunctions
class UValeriaItemConfigBlueprintFunctions : public UBlueprintFunctionLibrary
{
public:

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("ValeriaItemConfigBlueprintFunctions");
		return Clss;
	}

	class UCharacterCustomizationItemConfig* FromTorsoConfig(class UObject* InContext, const struct FCharacterCustomizationTorsoConfig& InTorsoConfig);
	class UCharacterCustomizationItemConfig* FromLegsConfig(class UObject* InContext, const struct FCharacterCustomizationLegsConfig& InLegsConfig);
	class UCharacterCustomizationItemConfig* FromFullBodyConfig(class UObject* InContext, const struct FCharacterCustomizationFullBodyConfig& InFullBodyConfig);
};

// 0xE0 (0x110 - 0x30)
// Class Palia.CharacterCustomManager
class UCharacterCustomManager : public ULocalPlayerSubsystem
{
public:
	FMulticastInlineDelegateProperty_            CharacterCreated;                                  // 0x30(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            CharacterUpdated;                                  // 0x40(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            CharacterDeleted;                                  // 0x50(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            CharactersReceived;                                // 0x60(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            CharacterReceived;                                 // 0x70(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            CharactersReceivedFailed;                          // 0x80(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnRefreshedAllOurCharacters;                       // 0x90(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnCharacterRenderStudioRegistered;                 // 0xA0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                        Pad_210D[0x30];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class AVAL_CharacterRenderStudio*            CharacterRenderStudio;                             // 0xE0(0x8)(ZeroConstructor, Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UVAL_CharacterCustomization_ColorsDataAsset* ColorsDataAsset;                                   // 0xE8(0x8)(ZeroConstructor, Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<class UObject*>                       CachedCharacterCustomizationSettingsObjects;       // 0xF0(0x10)(ZeroConstructor, Transient, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_2110[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("CharacterCustomManager");
		return Clss;
	}

	void UpdateCharacter(const struct FVALDTOS_MetaCharacterFormat& InCharacterData);
	bool TryGetAllOurCharacters(TArray<struct FVALDTOS_MetaCharacterFormat>* InOutOurCharacters);
	void OnRegisterCharacter_Successful__DelegateSignature(const class FString& InCharacterName);
	void OnRegisterCharacter_Failure__DelegateSignature(class FText InErrorMessage, int32 InErrorCode);
	void OnRefreshedAllOurCharacters__DelegateSignature(class UCharacterCustomManager* InCharacterCustomManager);
	void OnCharacterRenderStudioRegistered__DelegateSignature(class AVAL_CharacterRenderStudio* InStudio);
	class UVAL_CharacterCustomization_ColorsDataAsset* GetColorsDataAsset();
	class AVAL_CharacterRenderStudio* GetCharacterRenderStudio();
};

// 0x40 (0xE0 - 0xA0)
// Class Palia.CharacterStateChangeInteraction
class UCharacterStateChangeInteraction : public UActorComponent
{
public:
	uint8                                        Pad_2144[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FAnimState                            AnimState;                                         // 0xA8(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
	enum class ECharacterState                   CharacterState;                                    // 0xC0(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2146[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FText                                  Text;                                              // 0xC8(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("CharacterStateChangeInteraction");
		return Clss;
	}

	struct FServerUseEventResult OnServerInteract(class UInteractableComponent* InInteractable, class AValeriaCharacter* InCharacter, const struct FInteractEventParams& InEventParams);
	bool IsInteractable(class AValeriaCharacter* InCharacter, const struct FInteractEventParams& InEventParams);
	int32 InteractPriority();
	bool GetText(class AValeriaCharacter* InCharacter, enum class EInteractEventIndex InEventIndex, struct FGetTextParams* InParams);
	bool CheckCanGather(class AValeriaCharacter* InCharacter);
};

// 0x120 (0x1C0 - 0xA0)
// Class Palia.CharacterStateMachineComponent
class UCharacterStateMachineComponent : public UActorComponent
{
public:
	uint8                                        Pad_21EF[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	FMulticastInlineDelegateProperty_            OnCharacterStateChanged;                           // 0xA8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnExitingCharacterState;                           // 0xB8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnEnteredCharacterState;                           // 0xC8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	class AValeriaCharacter*                     CachedCharacter;                                   // 0xD8(0x8)(ZeroConstructor, Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UValeriaCharacterMoveComponent*        CachedMovement;                                    // 0xE0(0x8)(ExportObject, ZeroConstructor, Transient, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_21F4[0xC8];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<enum class ECharacterState>           CurrentStateStack;                                 // 0x1B0(0x10)(ZeroConstructor, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("CharacterStateMachineComponent");
		return Clss;
	}

	bool UseEquippedInputEnabled(bool InInward, bool InPressed);
	void ToggleState(enum class ECharacterState InStateTypeToToggle, const struct FCharacterStateChangeParams& InParams);
	bool StartPlacementInputIsEnabled();
	bool ShouldHideInventoryToolbar();
	void RpcServer_ChangeMovementMode(enum class ECharacterMoveMode InMode);
	void RpcClient_ToggleState(enum class ECharacterState InState, const struct FCharacterStateChangeParams& InParams);
	void RpcClient_RevertToWorldState();
	void RpcClient_EndState(enum class ECharacterState InState, const struct FCharacterStateChangeParams& InParams);
	void RpcClient_ChangeState(enum class ECharacterState InState, const struct FCharacterStateChangeParams& InParams);
	void RevertToWorldState();
	bool PlacementInputIsEnabled();
	void OnExitingCharacterState__DelegateSignature(class UCharacterStateMachineComponent* InCsm, struct FCharacterStateChangeParams& InParams, enum class ECharacterState InStateBeingExited, enum class ECharacterState InStateBeingEntered);
	void OnEnteredCharacterState__DelegateSignature(class UCharacterStateMachineComponent* InCsm, struct FCharacterStateChangeParams& InParams, TArray<enum class ECharacterState>& InStatesExited, enum class ECharacterState InStateEntered);
	void OnControllerAttachedToCharacter(class AValeriaPlayerController* InPlayer, class AValeriaCharacter* InCharacter);
	enum class EMovementRelativeTo MovementRelativeTo();
	bool MovementByInputIsEnabled();
	bool JumpByInputIsEnabled();
	bool IsOnStack(enum class ECharacterState InState);
	bool IsEquippedHidden();
	enum class ECharacterState GetCurrentStateType();
	bool FishingInputIsEnabled();
	void EndState(enum class ECharacterState InStateTypeToEnd, const struct FCharacterStateChangeParams& InParams);
	bool CustomCameraControl();
	bool ChangeState(enum class ECharacterState InNewState, const struct FCharacterStateChangeParams& InParams);
	bool CanTriggerAbility();
	bool CanTransitionTo(enum class ECharacterState InState);
	bool CanSprint();
	bool CanChangeActionBar();
	bool AllowDashCancelling();
};

// 0x270 (0x2A0 - 0x30)
// Class Palia.ChatManager
class UChatManager : public ULocalPlayerSubsystem
{
public:
	FMulticastInlineDelegateProperty_            OnRequestOpenChannel;                              // 0x30(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnSessionConnected;                                // 0x40(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnSessionDisconnected;                             // 0x50(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnNewChatMessage;                                  // 0x60(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnNewControlMessage;                               // 0x70(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnReceivedValeriagram;                             // 0x80(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnCharacterMuted;                                  // 0x90(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnPlayerMuted;                                     // 0xA0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnRequestDisplayChatError;                         // 0xB0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnRequestDisplayChatUnreachable;                   // 0xC0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnRequestDisplayChatRetryLogin;                    // 0xD0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnRequestActivateChat;                             // 0xE0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnRequestInactiveChat;                             // 0xF0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnRequestInpurBarChangeMessageTarget;              // 0x100(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnRequestInputBarInsertText;                       // 0x110(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnDisplayReconnectChat;                            // 0x120(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnPermissionsChanged;                              // 0x130(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                        Pad_22A5[0x40];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	struct FTimerHandle                          ReconnectTimerHandle;                              // 0x180(0x8)(NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_22A6[0x118];                                   // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("ChatManager");
		return Clss;
	}

	void ValChat_OnDisplayReconnectChat__DelegateSignature(bool InbReconnecting, const class FString& InErrorMsg);
	void SessionConnectionFailureHandler(const class FString& InError);
	void SendValeriagram(class UVAL_ValeriagramPost* InValeriagramPost);
	void SendValeriaChatMessage(const struct FValeriaChatMessage& InChatMessage);
	void SendControlMessage(const struct FMessageTarget& InMessageTarget, const struct FControlMessage& InControlMessage);
	void SendChatNotification(const struct FMessageTarget& InMessageTarget, const class FString& InNotificationContent);
	void SendChatMessage(const struct FMessageTarget& InMessageTarget, const class FString& InHumanMessage);
	void SendChatImage(const struct FMessageTarget& InMessageTarget, class UTextureRenderTarget2D* InImageTexture);
	void RequestOpenChannel(struct FMessageTarget& InMessageTarget);
	void RequestMuteUser_New(bool InbMute, struct FUniqueNetIdRepl& InPlayerNetId, const class FString& InCharacterName);
	void RequestMuteUser(bool InbMute, class FName& InCharacterName);
	void RemoveChatPermission(enum class EVAL_ChatPermissions InPermission);
	void OnRequestOpenChannel__DelegateSignature(const struct FMessageTarget& InMessageTarget);
	void OnRequestInputBarInsertText__DelegateSignature(class FText& InText);
	void OnRequestInputBarChangeMessageTarget__DelegateSignature(const struct FMessageTarget& InMessageTarget);
	void OnRequestInactivateChat__DelegateSignature();
	void OnRequestDisplayChatUnreachable__DelegateSignature(class FText InErrorText);
	void OnRequestDisplayChatRetryLogin__DelegateSignature(class FText InErrorText);
	void OnRequestDisplayChatErrorMessage__DelegateSignature(class FText InErrorText);
	void OnRequestActivateChat__DelegateSignature();
	void OnPlayerMuted__DelegateSignature(const struct FUniqueNetIdRepl& InPlayerNetId, bool InbMuted);
	void OnChatPermissionsChanged__DelegateSignature(enum class EVAL_ChatPermissions InPermissions);
	void OnCharacterMuted__DelegateSignature(class FName InCharacterName, bool InbMuted);
	int32 MaximumCharacterLimit();
	void JoinRoom(const class FString& InRoomId);
	bool IsUserMuted_New(struct FUniqueNetIdRepl& InPlayerNetId);
	bool IsUserMuted(class FName& InCharacterName);
	bool IsReconnectingToChat();
	bool IsConnected();
	bool HasChatPermission(enum class EVAL_ChatPermissions InPermission);
	void HandlePlayerGuildChanged(class UVAL_PlayerGuildSubsystem* InPlayerGuildSubsystem, const struct FGuid& InNewGuildId);
	void HandleOnVivoxLoginFailed(int32 InErrorCode, const class FString& InErrorMsg);
	void HandleOnVivoxLoggedIn();
	void HandleOnSignedInAsCharacter(const class FString& InCharacterName, int32 InLocalUserNum, const struct FGuid& InCharacterId);
	void HandleOnServerIdChanged(const class FString& InID);
	void HandleOnPawnChanged(class APawn* InPawn);
	void HandleOnPartyStateChanged(enum class EVAL_PartyManagerState InState);
	void HandleOnDirectMsgReceived(struct FS6Vivox_TextMsg& InMsg);
	void HandleOnChannelMsgReceived(struct FS6Vivox_ChannelTextMsg& InMsg);
	class FString GetServerName();
	TArray<class FString> GetJoinedRoomList();
	enum class EVAL_ChatPermissions GetChatPermissionFlags();
	class FString GetChatErrorMsg();
	void EchoValeriaChatMessage(const struct FValeriaChatMessage& InChatMessage);
	void EchoChatNotificationToSelf(const class FString& InMessage);
	void EchoChatNotification(const struct FMessageTarget& InMessageTarget, const class FString& InNotificationContent);
	void ChatSessionReadyHandler();
	class UTexture2D* ChatImageTextureFromBufferString(const class FString& InImageData);
	void AddChatPermission(enum class EVAL_ChatPermissions InPermission);
};

// 0x88 (0xD0 - 0x48)
// Class Palia.CheatSetConfig
class UCheatSetConfig : public UGuidDataAsset
{
public:
	bool                                         bRepeatable;                                       // 0x48(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_22C5[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FPersistentTagWriteback>       PlayerTagWritebacks;                               // 0x50(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FValeriaItem>                  ItemsToGive;                                       // 0x60(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FDataTableRowHandle>           VillagersToMarkAsMet;                              // 0x70(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<class UVAL_QuestDef*>                 QuestsToGrant;                                     // 0x80(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<class UVAL_QuestDef*>                 QuestsToComplete;                                  // 0x90(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<class UPrivateSpaceVillagerVisitConfig*> HousingPlotVillagerVisitsToGrant;                  // 0xA0(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<class UPrivateSpaceVillagerVisitConfig*> HousingPlotVillagerVisitsToComplete;               // 0xB0(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FQuestRewardConfig>            AdditionalRewards;                                 // 0xC0(0x10)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("CheatSetConfig");
		return Clss;
	}

};

// 0x88 (0x128 - 0xA0)
// Class Palia.ConfigurableTriggerVolume
class UConfigurableTriggerVolume : public UActorComponent
{
public:
	struct FTimeOfDayFilter                      TimeOfDayRequirement;                              // 0xA0(0x18)(Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
	float                                        TimeInsideVolumeRequired;                          // 0xB8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_22CD[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FVillagerQuestProgressSubConfig> RequiredQuestProgress;                             // 0xC0(0x10)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FQuestActivityPrereq>          RequiredQuestActivity;                             // 0xD0(0x10)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FDataTableRowHandle>           RequiredVillagersInVolume;                         // 0xE0(0x10)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FPersistentTagFilter>          PlayerTagRequirements;                             // 0xF0(0x10)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FPersistentTagWriteback>       PlayerTagWriteback;                                // 0x100(0x10)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	bool                                         RevertWritebackOnExit;                             // 0x110(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         ApplyToVillagers;                                  // 0x111(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_22D1[0x16];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("ConfigurableTriggerVolume");
		return Clss;
	}

	void ActorEndOverlap(class AActor* InMyActor, class AActor* InOtherActor);
	void ActorBeginOverlap(class AActor* InMyActor, class AActor* InOtherActor);
};

// 0x20 (0x58 - 0x38)
// Class Palia.ValeriaContainerHashesConfig
class UValeriaContainerHashesConfig : public UDeveloperSettings
{
public:
	TArray<struct FValeriaContainerHash>         CharacterContainerHashes;                          // 0x38(0x10)(Edit, ZeroConstructor, Config, NativeAccessSpecifierPublic)
	TArray<struct FValeriaContainerHash>         HousingContainerHashes;                            // 0x48(0x10)(Edit, ZeroConstructor, Config, NativeAccessSpecifierPublic)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("ValeriaContainerHashesConfig");
		return Clss;
	}

};

// 0xC8 (0xF8 - 0x30)
// Class Palia.CookingSubsystem
class UCookingSubsystem : public UGameInstanceSubsystem
{
public:
	FMulticastInlineDelegateProperty_            OnComplexRecipeChanged;                            // 0x30(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnRecipeBrowse;                                    // 0x40(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnSubRecipeChanged;                                // 0x50(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnShelfChanged;                                    // 0x60(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnIngredientOverrideChanged;                       // 0x70(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnUseStarQualityChanged;                           // 0x80(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnCraftMultiplierChanged;                          // 0x90(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FRecipePlayerOptions                  RecipeOptions;                                     // 0xA0(0x18)(NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnJoinComplexRecipe;                               // 0xB8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPrivate)
	FMulticastInlineDelegateProperty_            OnExitComplexRecipe;                               // 0xC8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPrivate)
	FMulticastInlineDelegateProperty_            OnComplexRecipeFinished;                           // 0xD8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPrivate)
	TArray<class UCrafterComponent*>             ActivelyBrowsingCrafters;                          // 0xE8(0x10)(ExportObject, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("CookingSubsystem");
		return Clss;
	}

	void SetRecipeOption_UseStarQualityItems(bool InUseStarQuality);
	void SetRecipeOption_CraftMultiplier(int32 InMultiplier);
	void RemoveRecipeOption_IngredientOverrideMappingForIndex(int32 InSimpleIngredientIndex);
	void RecipeEvent__DelegateSignature(struct FComplexRecipeRecord& InComplexState, struct FComplexRecipeCrafter& InCrafterState, int32 InRecipeIndex);
	struct FRecipePlayerOptions GetRecipeOptions();
	bool GetRecipeOption_UseStarQualityItems();
	bool GetRecipeOption_IngredientOverrideMappingForIndex(int32 InSimpleIngredientIndex, struct FRecipePlayerOptionMapping* InOutMapping, enum class EValeriaFuncResult* InOutResult);
	enum class EComplexRecipeCueState GetCookingRecipeCueStateForIngredient(class UCrafterComponent* InCrafterComponent, struct FRecipe_RequireItem& InRequireItem, int32 InIngredientIndex);
	enum class EComplexRecipeCueState GetCookingRecipeCueStateForHUD(int32 InCrafterPersistId, struct FRecipe_RequireItem& InRequireItem);
	enum class EComplexRecipeCueState GetCookingRecipeCueStateForCrafter(class UCrafterComponent* InCrafterComponent, struct FRecipe_RequireItem& InRequireItem);
	void CookingSubsystemEvent__DelegateSignature();
	void ComplexRecipeStartEvent__DelegateSignature(struct FCrafterConfig& InMainCrafterConfig, struct FComplexRecipeRecord& InRecipeRecord);
	void ComplexRecipeEvent__DelegateSignature(struct FComplexRecipeRecord& InRecipeRecord);
	void ClearRecipeOption_IngredientOverrideMappings();
	void AddRecipeOption_IngredientOverrideMapping(struct FRecipePlayerOptionMapping& InMapPing);
};

// 0x108 (0x1A8 - 0xA0)
// Class Palia.InventoryComponent
class UInventoryComponent : public UActorComponent
{
public:
	uint8                                        Pad_242C[0x18];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FInventoryBag>                 Bags;                                              // 0xB8(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, RepNotify, NativeAccessSpecifierPublic)
	int32                                        ItemsCollected;                                    // 0xC8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_242D[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FGameplayTag>                  TagsToTrackForStats;                               // 0xD0(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnItemAdded;                                       // 0xE0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnChanged;                                         // 0xF0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnInvFullErrorRequested;                           // 0x100(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnInventoryUpgraded;                               // 0x110(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                        Pad_2432[0x28];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FValeriaItem>                  ItemAddedNotifQueue;                               // 0x148(0x10)(ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_2433[0x50];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("InventoryComponent");
		return Clss;
	}

	struct FNotification ShouldBlockGathering(class AValeriaCharacter* InCharacter);
	void SetActiveActionBarIndex(int32 InRowIndex, int32 InColsPerRow);
	void RpcServer_SetActiveActionBarIndex(int32 InRowIndex, int32 InColsPerRow);
	void RpcServer_RemoveAllItems(bool InbIncludeTools);
	void RpcClient_ItemAdded(const struct FValeriaItem& InItem);
	bool RemoveItem(struct FInventory_RemoveContext& InRemoveContext);
	void OnRep_Bags();
	struct FUseEventResult OnClientUsedEquippedOnMe(class AValeriaPlayerController* InPlayer, const struct FUseEventParams& InParams);
	void NotifyInventoryUpgraded(class FText InNotificationText);
	void NotifyInventoryFull(class FText InNotificationText);
	int32 K2_GetItemAmountByType(TSoftObjectPtr<class UVAL_ItemTypeDefinitionAsset>& InItemType, struct FStarQualityConstraint& InStarQualityConstraint);
	int32 K2_GetItemAmountByTag(struct FGameplayTag& InIngredientTag, struct FStarQualityConstraint& InStarQualityConstraint);
	bool IsShippingBin();
	bool IsLocationInActiveActionBar(struct FBagSlotLocation& InLocation);
	bool IsBagInActionBar(int32 InBagIndex);
	int32 GetTotalMaxSlotsInBag(int32 InBagIndex);
	int32 GetTotalMaxSlotsForActionBar();
	int32 GetTotalMaxSlots();
	TArray<struct FBagSlotLocation> GetToolsForToolWheel();
	class UStorageComponent* GetStorageComponent();
	int32 GetNumberOfOverflowSlots();
	int32 GetNumberOfActionBarRows(int32 InColsPerRow);
	struct FBagSlotLocation GetLocationAtActionBarIndex(int32 InRowIndex, int32 InColumnIndex, int32 InColsPerRow);
	struct FValeriaItem GetItemAtActionBarIndex(int32 InRowIndex, int32 InColumnIndex, int32 InColsPerRow);
	struct FValeriaItem GetItemAt(const struct FBagSlotLocation& InLocation);
	struct FGameplayTag GetBagTypeForBagIndex(int32 InBagIndex);
	struct FGameplayTag GetBagTypeAtActionBarIndex(int32 InRowIndex, int32 InColumnIndex, int32 InColsPerRow);
	int32 GetBagIndexForGamePlayTag(struct FGameplayTag& InGameplayTag);
	TArray<struct FValeriaItem> GetAllPlaceableItemsInBag(struct FGameplayTagContainer& InIncludeTag, struct FGameplayTagContainer& InExcludeTag);
	struct FBagSlotLocation FindItemByTypeAndVariant(TSoftObjectPtr<class UVAL_ItemTypeDefinitionAsset>& InItemType, int32 InTintPersistID, bool InbRequireStarQuality);
	struct FBagSlotLocation FindItemByType(TSoftObjectPtr<class UVAL_ItemTypeDefinitionAsset>& InItemType, bool InbRequireStarQuality);
	struct FBagSlotLocation FindItemByTag(struct FGameplayTag& InItemTag, bool InbRequireStarQuality);
	bool ContainsItemByTypeOrTag(TSoftObjectPtr<class UVAL_ItemTypeDefinitionAsset>& InItemType, struct FGameplayTag& InIngredientTag, int32 InAmount, struct FGameplayTag& InBagType);
	bool ContainsItemByType(TSoftObjectPtr<class UVAL_ItemTypeDefinitionAsset>& InItemType, int32 InAmount);
	bool ContainsItemByTag(struct FGameplayTag& InTag);
	bool ContainsItemByCategory(enum class EItemCategory InItemCategory);
	bool CanAddItemTypeHere(TSoftObjectPtr<class UVAL_ItemTypeDefinitionAsset>& InItemType);
	bool CanAddItemsFully(TArray<struct FValeriaItem>& InItems);
	bool CanAddItemFully(struct FValeriaItem& InItem);
	bool AreStorageSlotsFull();
	bool AreSlotsFull();
	bool AreInventorySlotsFull();
	int32 AddItemToBag(const struct FValeriaItem& InItemToAdd, enum class EInventoryAddItemFlags InFlags, struct FGameplayTag& InBagType);
	int32 AddItem(const struct FValeriaItem& InItemToAdd, enum class EInventoryAddItemFlags InFlags);
};

// 0x18 (0x1C0 - 0x1A8)
// Class Palia.CrafterAutomaticInventoryComponent
class UCrafterAutomaticInventoryComponent : public UInventoryComponent
{
public:
	uint8                                        Pad_2461[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UCrafterComponent_Automatic*           CrafterComponent;                                  // 0x1B8(0x8)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("CrafterAutomaticInventoryComponent");
		return Clss;
	}

	class UCrafterComponent_Automatic* GetInventoryComponent();
};

// 0x260 (0x300 - 0xA0)
// Class Palia.CrafterComponent
class UCrafterComponent : public UActorComponent
{
public:
	uint8                                        Pad_25A7[0x18];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	FMulticastInlineDelegateProperty_            OnCrafterChanged;                                  // 0xB8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnCrafterChangedWithContext;                       // 0xC8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnCrafterStateChanged;                             // 0xD8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnCrafterBurned;                                   // 0xE8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnCrafterCharacterEngaged;                         // 0xF8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnPropChanged;                                     // 0x108(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnMinigameSuccessfulInput;                         // 0x118(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnMinigameMistimedInput;                           // 0x128(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnComplexRecipeStarted;                            // 0x138(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnComplexRecipeFinished;                           // 0x148(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FDataTableRowHandle                   CrafterConfig;                                     // 0x158(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, Net, DisableEditOnInstance, NoDestructor, Protected, NativeAccessSpecifierProtected)
	struct FCrafterRecipeState                   RecipeState;                                       // 0x168(0x38)(Net, RepNotify, NoDestructor, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	TArray<struct FCrafterStep>                  Steps;                                             // 0x1A0(0x10)(Net, ZeroConstructor, RepNotify, Protected, NativeAccessSpecifierProtected)
	TArray<struct FAddedIngredient>              UsedItems;                                         // 0x1B0(0x10)(ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	TArray<struct FCrafterIngredient>            Ingredients;                                       // 0x1C0(0x10)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, RepNotify, Protected, NativeAccessSpecifierProtected)
	struct FValeriaItem                          ItemCrafting;                                      // 0x1D0(0x50)(Net, RepNotify, Protected, NativeAccessSpecifierProtected)
	TArray<struct FCraftingPlayerReward>         PlayerRewards;                                     // 0x220(0x10)(Net, ZeroConstructor, RepNotify, Protected, NativeAccessSpecifierProtected)
	TArray<struct FPersistGuid>                  PlayerIdsToReward;                                 // 0x230(0x10)(Net, ZeroConstructor, RepNotify, Protected, NativeAccessSpecifierProtected)
	enum class ERecipePropPhase                  CurrentPropPhase;                                  // 0x240(0x1)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_25AF[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class AActor*                                CurrentProp;                                       // 0x248(0x8)(ZeroConstructor, Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UParticleSystemComponent*              Particles;                                         // 0x250(0x8)(ExportObject, ZeroConstructor, Transient, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<int32>                                ActiveSteps;                                       // 0x258(0x10)(Net, ZeroConstructor, RepNotify, Protected, NativeAccessSpecifierProtected)
	struct FVAL_TimerHandle                      Server_CraftTimerHandle;                           // 0x268(0x8)(NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVAL_TimerHandle                      Server_CraftBurnTimerHandle;                       // 0x270(0x8)(NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FTimerHandle                          Server_RecipeRequest_RevealTimerHandle;            // 0x278(0x8)(NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FTimerHandle                          Server_RecipeRequest_ExpireTimerHandle;            // 0x280(0x8)(NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FStartingPlayerInfo                   StartingPlayerInfo;                                // 0x288(0x20)(Net, NoDestructor, Protected, NativeAccessSpecifierProtected)
	struct FTimerHandle                          UpdateHoldTimeTimerHandle;                         // 0x2A8(0x8)(NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FTimerHandle                          UpdateItemDecayTimerHandle;                        // 0x2B0(0x8)(NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UInteractableComponent*                InteractableComponent;                             // 0x2B8(0x8)(ExportObject, ZeroConstructor, Transient, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UProximityChecker*                     ProximityChecker;                                  // 0x2C0(0x8)(ExportObject, ZeroConstructor, Transient, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int64                                        CurrentStateStartTimeMs;                           // 0x2C8(0x8)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int64                                        StartedCraftingAtMs;                               // 0x2D0(0x8)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        ExpectedMeshEncroachment;                          // 0x2D8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_25B3[0x14];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<TSoftClassPtr<class AActor>>          PropsToPreload;                                    // 0x2F0(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, Protected, UObjectWrapper, NativeAccessSpecifierProtected)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("CrafterComponent");
		return Clss;
	}

	bool WasRequestStepStarted(int32 InRequestIndex);
	bool TryGetBurnTimes(int64* InStartTime, int64* InEndTime);
	int32 StarQualityItemsConsumedByRecipe(class AValeriaCharacter* InVC, int32 InRecipeConfigId);
	struct FNotification ShouldBlockGathering(class AValeriaCharacter* InCharacter);
	enum class ECrafterEngageResult SetIsEngaging(bool InbShouldEngage, class AValeriaPlayerController* InVpc);
	bool Server_Collect(class AActor* InActor);
	void RpcMulticast_SuccessfullInput(class AValeriaCharacter* InVC);
	void RpcMulticast_RecipeRequests_OnBurned();
	void RpcMulticast_MistimedInput(class AValeriaCharacter* InVC);
	struct FServerUseEventResult OnServerInteract(class UInteractableComponent* InInteractable, class AValeriaCharacter* InVC, const struct FInteractEventParams& InEventParams);
	void OnReplicatedAndShouldNotify();
	void OnReplicated_PropPhase(enum class ERecipePropPhase InOldPropPhase);
	void OnRep_Steps();
	void OnRep_CrafterState(struct FCrafterRecipeState& InOldState);
	void OnPostCraftBurnTimer();
	struct FUseEventResult OnClientInteract(class UInteractableComponent* InInteractable, class AValeriaPlayerController* InVpc, const struct FInteractEventParams& InEventParams);
	bool K2_GetComplexState(struct FComplexRecipeRecord* InOutRecipeRecord);
	bool IsRequestStepExpired(int32 InRequestIndex);
	bool IsRequestStepDone(int32 InRequestIndex);
	bool IsRequestStepActive(int32 InRequestIndex);
	bool IsPlateVisible(class AActor* InInteractingActor);
	bool IsInteractingMode();
	bool IsInteractable(class AValeriaCharacter* InVC, const struct FInteractEventParams& InEventParams);
	bool IsIngredientFullyAdded(int32 InIndex);
	bool IsIngredientExpired(int32 InIndex);
	bool IsIngredientActive(int32 InIndex);
	bool IsComplexRecipe(int32 InRecipeId);
	int32 InteractPriority();
	bool HasRecipeFailed();
	bool HasInventorySpaceToProduceRecipe(int32 InRecipeConfigId, class UInventoryComponent* InInventoryComponent);
	bool HasIngredientTypesToProduceRecipe(int32 InRecipeConfigId, class UInventoryComponent* InInputInventory, struct FGameplayTag& InInputInventoryBagType);
	bool HasIngredientsToProduceRecipe(int32 InRecipeConfigId, class UInventoryComponent* InInputInventory, struct FGameplayTag& InInputInventoryBagType);
	void HandleMinigameSuccessfulInput(class UMinigameComponentMasterQTE* InMinigameComponent);
	void HandleMinigameStateChanged(class UMinigameComponentBase* InComp, enum class EMinigameState InPrevState, enum class EMinigameState InNewState);
	void HandleMinigameMistimedInput(class UMinigameComponentMasterQTE* InMinigameComponent);
	void HandleInteractableClaimedLocationChanged(struct FVAL_InteractorLockParams& InLockParams, class UInteractorComponent* InInteractorComponent, bool InbLocationClaimed);
	void HandleInteractableChanged(class UInteractableComponent* InInInteractableComponent, class AActor* InActor);
	int32 GetTimeSpentCraftingMs();
	int32 GetTimeRemainingTillBurntMs();
	bool GetText(class AValeriaCharacter* InVC, enum class EInteractEventIndex InEventIndex, struct FGetTextParams* InParams);
	TArray<struct FRecipe_RequireItem> GetStartingIngredients(int32 InRecipeId);
	int32 GetRequireItemAmount(class AValeriaCharacter* InVC, struct FRecipe_RequireItem& InRequireItem, bool InUseStarQualityItem);
	bool GetRequestTimes(int32* InStartTime, int32* InEndTime);
	int32 GetRequestRequiredTimeToHoldMs(int32 InRequestIndex);
	float GetRequestRemainingNormalized(int32 InRequestIndex);
	int32 GetRequestProgressTimeToHoldMs(int32 InRequestIndex);
	float GetRequestCompletionNormalized(int32 InRequestIndex);
	struct FRecipeStepConfig GetRecipeStepConfig(int32 InRequestIndex, int32 InRecipeId);
	void GetRecipeNeeds(class AValeriaCharacter* InVC, int32 InRecipeId, struct FRecipeNeeds* InRecipeNeeds, bool InbUseStarQualityItems);
	struct FValeriaItem GetRecipeItemToProduce();
	int32 GetRecipeIdCrafting();
	struct FRecipeConfig GetRecipeConfig(int32 InRecipeId);
	TArray<struct FPersistGuid> GetPlayers();
	class AHousingPlotActor* GetOwningPlot();
	int32 GetNumPlayers();
	int32 GetNumberOfRequests();
	int32 GetNumberOfInteractions(int32 InRecipeId);
	float GetNormalizedCraftingProgress();
	TArray<int32> GetManualIngredientSteps(int32 InRecipeId);
	struct FValeriaItem GetItemCrafting(class AValeriaCharacter* InVC);
	class FText GetIngredientRequestText(struct FCrafterIngredient& InIngredientRequest);
	int32 GetCraftTimeToHoldRequiredSecs();
	int32 GetCraftTimeToHoldProgressMs();
	int32 GetCraftTimeMs(int32 InRecipeId);
	int64 GetCraftStartTimeMs();
	bool GetCraftPhaseTimes(int32* InStartTime, int32* InEndTime);
	bool GetCraftLimitTimes(int32* InStartTime, int32* InEndTime);
	enum class ECrafterState GetCrafterState();
	struct FCrafterConfig GetCrafterConfig();
	int64 GetCraftEndTimeMs();
	TArray<struct FValeriaItem> GetAddedIngredients();
	void GatherIconsForIngredients(TArray<class UTexture2D*>* InIcons, TArray<int32>* InAmounts, int32 InRecipeId);
	bool DoesPlayerHaveRootIngredients(class AValeriaCharacter* InVC, int32 InRecipeId, bool InbUseStarQualityItems);
	bool DoesBroadcastApply(class UCrafterComponent* InCrafter);
	bool ContainsAllIngredients(int32 InMultiplier);
	void Client_TryDisengageCrafter(class AValeriaPlayerController* InPlayerController);
	bool CanShowCrafterPanel();
	enum class ERecipeAvailability CanSelectRecipe(class AActor* InActor, int32 InRecipeConfigId, bool InbCheckPlotFilter, bool InbUseStarQualityItems, bool InbAllowIntermixingRegularAndStarQualityIngredients, int32 InMultiplier);
	bool CanMakeRecipe(class AActor* InActor, int32 InRecipeConfigId, bool InbUseStarQualityItems, bool InbAllowIntermixingRegularAndStarQualityIngredients, int32 InCraftMultiplier);
};

// 0x40 (0x340 - 0x300)
// Class Palia.CrafterComponent_Automatic
class UCrafterComponent_Automatic : public UCrafterComponent
{
public:
	FMulticastInlineDelegateProperty_            RecipesChanged;                                    // 0x300(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TArray<int32>                                RecipeListUnlocked;                                // 0x310(0x10)(Net, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	TArray<int32>                                RecipeListAll;                                     // 0x320(0x10)(ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	class UCrafterAutomaticInventoryComponent*   InventoryComponent;                                // 0x330(0x8)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         Server_HasBeenSetup;                               // 0x338(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_260A[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("CrafterComponent_Automatic");
		return Clss;
	}

	void SwapIndices(int32 InFirstIndex, int32 InSecondIndex);
	void RpcServer_SwapIndices(int32 InFirstIndex, int32 InSecondIndex);
	void OnRecipeUnlocked(class URecipeInventoryComponent* InRecipes, TArray<int32>& InRecipeConfigId);
	void OnInventoryChanged(class UInventoryComponent* InInventory);
	void OnAutoCrafterChanged(class UCrafterComponent* InCrafter);
	bool IsIngredientUsedInRecipe(TSoftObjectPtr<class UVAL_ItemTypeDefinitionAsset>& InItemType, int32 InRecipeConfigId);
	TArray<int32> GetRecipeListAll();
	TArray<int32> GetRecipeList();
	class UInventoryComponent* GetInventoryComponent();
	void DevOnly_OnRecipesLocked(class URecipeInventoryComponent* InRecipes);
	bool CanIngredientBeUsedByUnlockedRecipe(TSoftObjectPtr<class UVAL_ItemTypeDefinitionAsset>& InItemType);
	bool CanIngredientBeUsedByAnyRecipe(TSoftObjectPtr<class UVAL_ItemTypeDefinitionAsset>& InItemType);
};

// 0x110 (0x140 - 0x30)
// Class Palia.CraftingGlobalConfig
class UCraftingGlobalConfig : public UDataAsset
{
public:
	struct FCraftingGlobalConfig_CoopSettings    CoOp;                                              // 0x30(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                        Pad_2611[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FCraftingGlobalConfig_ItemUseSettings ItemUse;                                           // 0x38(0x38)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	enum class ECraftingRequestItemMode          RequestItemMode;                                   // 0x70(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2612[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FNotification                         RecipeRuined;                                      // 0x78(0x30)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	class UVAL_ItemTypeDefinitionAsset*          FailureRewardItemType;                             // 0xA8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        QualityBaseChance;                                 // 0xB0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        QualityChancePerSkillLevel;                        // 0xB4(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        QualityChanceForIngredients;                       // 0xB8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        QualityChanceForMinigame;                          // 0xBC(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        FirstTimeFurniturePercentBonus;                    // 0xC0(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2615[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FCraftingGlobalConfig_ModificationBenchSettings ModificationBenchSettings;                         // 0xC8(0x20)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
	struct FCraftingGlobalConfig_CookingSettings Cooking;                                           // 0xE8(0x58)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("CraftingGlobalConfig");
		return Clss;
	}

};

// 0x8 (0x3C0 - 0x3B8)
// Class Palia.CreatureAIController
class ACreatureAIController : public AAIController
{
public:
	class UBehaviorTreeComponent*                BTComponent;                                       // 0x3B8(0x8)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("CreatureAIController");
		return Clss;
	}

};

// 0x148 (0x460 - 0x318)
// Class Palia.ValeriaMoveablePawn
class AValeriaMoveablePawn : public APawn
{
public:
	class USkeletalMeshComponent*                Mesh;                                              // 0x318(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UValeriaBaseMovementComponent*         MovementComponent;                                 // 0x320(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UCapsuleComponent*                     CapsuleComponent;                                  // 0x328(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FBasedMovementInfo                    BasedMovement;                                     // 0x330(0x48)(NoDestructor, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	struct FBasedMovementInfo                    ReplicatedBasedMovement;                           // 0x378(0x48)(Net, RepNotify, NoDestructor, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	uint8                                        ReplicatedMovementMode;                            // 0x3C0(0x1)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bInBaseReplication;                                // 0x3C1(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2663[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        ResyncMeshTimeRemaining;                           // 0x3C4(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector                               DesyncMeshOriginalOffset;                          // 0x3C8(0x18)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FQuat                                 DesyncMeshOriginalLocQuat;                         // 0x3E0(0x20)(Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bProxyIsJumpForceApplied : 1;                      // Mask: 0x1, PropSize: 0x10x400(0x1)(Net, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bPressedJump : 1;                                  // Mask: 0x2, PropSize: 0x10x400(0x1)(BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bClientUpdating : 1;                               // Mask: 0x4, PropSize: 0x10x400(0x1)(Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bClientWasFalling : 1;                             // Mask: 0x8, PropSize: 0x10x400(0x1)(Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bSimGravityDisabled : 1;                           // Mask: 0x10, PropSize: 0x10x400(0x1)(NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bClientCheckEncroachmentOnNetUpdate : 1;           // Mask: 0x20, PropSize: 0x10x400(0x1)(Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bWasJumping : 1;                                   // Mask: 0x40, PropSize: 0x10x400(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnTemplate, Transient, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        BitPad_16C : 1;                                    // Fixing Bit-Field Size  [ Dumper-7 ]
	uint8                                        Pad_2665[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        JumpKeyHoldTime;                                   // 0x404(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        JumpForceTimeRemaining;                            // 0x408(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ProxyJumpForceStartedTime;                         // 0x40C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        JumpMaxHoldTime;                                   // 0x410(0x4)(Edit, BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        JumpMaxCount;                                      // 0x414(0x4)(Edit, BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        JumpCurrentCount;                                  // 0x418(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        JumpCurrentCountPreJump;                           // 0x41C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnReachedJumpApex;                                 // 0x420(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                        Pad_2668[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	FMulticastInlineDelegateProperty_            MovementModeChangedDelegate;                       // 0x440(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnCharacterMovementUpdated;                        // 0x450(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("ValeriaMoveablePawn");
		return Clss;
	}

	void StopMontageByMapping(class FName& InMappingName);
	void StopJumping();
	void StopAnimMontage(class UAnimMontage* InAnimMontage);
	void ResyncMesh(float InDuration);
	void PlayMontageByMapping(class FName& InMappingName, float InInPlayRate, class FName& InStartSectionName, bool InbCanHardJump);
	float PlayAnimMontage(class UAnimMontage* InAnimMontage, float InInPlayRate, class FName& InStartSectionName);
	void OnWalkingOffLedge(struct FVector& InPreviousFloorImpactNormal, struct FVector& InPreviousFloorContactNormal, struct FVector& InPreviousLocation, float InTimeDelta);
	void OnRep_ReplicatedBasedMovement();
	void OnLaunched(const struct FVector& InLaunchVelocity, bool InbXYOverride, bool InbZOverride);
	void OnLanded(struct FHitResult& InHit);
	void OnJumped();
	void LaunchCharacter(const struct FVector& InLaunchVelocity, bool InbXYOverride, bool InbZOverride);
	void K2_UpdateCustomMovement(float InDeltaTime);
	void K2_OnMovementModeChanged(enum class EMovementMode InPrevMovementMode, enum class EMovementMode InNewMovementMode, uint8 InPrevCustomMode, uint8 InNewCustomMode);
	void Jump();
	bool IsJumpProvidingForce();
	class FName GetLastUsedAnimMappingName();
	class UAnimMontage* GetCurrentMontage();
	class UAnimMontage* FindMontageByMapping(class FName& InMappingName, class FName& InMappingQualifier);
	void DesyncMesh(bool InbLocation, bool InbRotation);
	void ClientCheatWalk();
	void ClientCheatGhost();
	void ClientCheatFly();
	bool CanJumpInternal();
	bool CanJump();
	void ApplyMontageByMappingDelta(class FName& InNewMappingName, class FName& InOldMappingName);
};

// 0xE0 (0x540 - 0x460)
// Class Palia.CreatureCharacter
class ACreatureCharacter : public AValeriaMoveablePawn
{
public:
	uint8                                        Pad_2685[0x18];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	FMulticastInlineDelegateProperty_            OnHealthChanged;                                   // 0x478(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	enum class ECurrentBehavior                  CurrentBehavior;                                   // 0x488(0x1)(BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2689[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FDataTableRowHandle                   CreatureConfig;                                    // 0x490(0x10)(Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
	bool                                         bTriggerOnCreaturePathChangedEvents;               // 0x4A0(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bDelayDestroyOnDeath;                              // 0x4A1(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_268A[0x6];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UAICombatStateComponent*               CombatState;                                       // 0x4A8(0x8)(Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class ULootComponent*                        LootComponent;                                     // 0x4B0(0x8)(Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UVitalsComponent*                      Vitals;                                            // 0x4B8(0x8)(Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UValeriaGASComponent*                  ValeriaGAS;                                        // 0x4C0(0x8)(Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UDeathComponent*                       Death;                                             // 0x4C8(0x8)(Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UDespawnComponent*                     Despawn;                                           // 0x4D0(0x8)(Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UHitReactComponent*                    HitReact;                                          // 0x4D8(0x8)(Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UParticipationTrackingComponent*       ParticipationTracking;                             // 0x4E0(0x8)(Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UValeriaGASAttributeSet*               AttributeSet;                                      // 0x4E8(0x8)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UHuntingCreatureTeleportComponent*     TeleportComponent;                                 // 0x4F0(0x8)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UMirrorImageSpawningComponent*         MirrorImageComponent;                              // 0x4F8(0x8)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_268F[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         bHasBeenAlerted;                                   // 0x508(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2690[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	FMulticastInlineDelegateProperty_            OnCreatureAlertTriggered;                          // 0x510(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	bool                                         bIsAnInsect;                                       // 0x520(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2692[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        EscapeValueForInsectCatching;                      // 0x524(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        EscapeValuePercentIncreasePerStar;                 // 0x528(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        EscapeValueFlatIncreasePerStar;                    // 0x52C(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int32                                        QualityStars;                                      // 0x530(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2693[0xC];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("CreatureCharacter");
		return Clss;
	}

	void TriggerCreatureAlert();
	void SkipCreatureAlert();
	void RpcNetMulticast_TriggerCreatureAlert();
	void RpcNetMulticast_OnPathChanged(const struct FVector& InStartPosition, const struct FVector& InEndPosition);
	void OnCreatureWasAlerted();
	void OnCreaturesPathChanged(const struct FVector& InStartPosition, const struct FVector& InEndPosition);
	void OnCreatureKnockbackStarted(class AActor* InAttacker, const struct FVector& InKnockBackDirection, const struct FVector& InFinalDestination);
	bool HasBeenAlerted();
	void HandleDeathServer(class UDeathComponent* InDeathComponent);
	class UVitalsComponent* GetVitals();
	int32 GetQualityStars();
	class UParticipationTrackingComponent* GetParticipationTracking();
	class UHitReactComponent* GetHitReact();
	class UValeriaGASComponent* GetGAS();
	class UDespawnComponent* GetDespawnComponent();
	class UDeathComponent* GetDeathComponent();
	class UAICombatStateComponent* GetCombatState();
	class UValeriaGASAttributeSet* GetAttributeSet();
	bool FindEscapeDestination(struct FVector* InOutDestination);
	void DoBehaviorMovement(enum class ECurrentBehavior InNewBehavior, const struct FRootMotionSource_MoveToForce& InRootMotionSource);
	float CalculateMaxSpeed();
};

// 0x648 (0x7A0 - 0x158)
// Class Palia.ValeriaBaseMovementComponent
class UValeriaBaseMovementComponent : public UPawnMovementComponent
{
public:
	class AValeriaMoveablePawn*                  MoveableOwner;                                     // 0x158(0x8)(ZeroConstructor, Transient, DuplicateTransient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UPathFollowingComponent*               FollowComponent;                                   // 0x160(0x8)(ExportObject, ZeroConstructor, Transient, InstancedReference, DuplicateTransient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        GravityScale;                                      // 0x168(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MaxStepHeight;                                     // 0x16C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        JumpZVelocity;                                     // 0x170(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        JumpOffJumpZFactor;                                // 0x174(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        JumpCapsuleHalfHeight;                             // 0x178(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        JumpCapsuleRadius;                                 // 0x17C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        WalkCapsuleHalfHeight;                             // 0x180(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        WalkCapsuleRadius;                                 // 0x184(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        WalkableFloorAngle;                                // 0x188(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        WalkableFloorZ;                                    // 0x18C(0x4)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	enum class EMovementMode                     MovementMode;                                      // 0x190(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EValeriaMoveSimulationFlag        MoveSimFlags;                                      // 0x191(0x1)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_26BC[0x6];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FRotator                              TargetFacing;                                      // 0x198(0x18)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	struct FVector                               TargetLocation1;                                   // 0x1B0(0x18)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               TargetLocation2;                                   // 0x1C8(0x18)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AValeriaMoveablePawn*                  TargetLocationLeader;                              // 0x1E0(0x8)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        LeaderFollowDistance;                              // 0x1E8(0x4)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        LeaderCloseEnoughRange;                            // 0x1EC(0x4)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bHasReachedTargetLocation1;                        // 0x1F0(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_26C0[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        TeleportDirectToThreshold;                         // 0x1F4(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        UseFacingInsteadInSimFaceVelocityThreshold;        // 0x1F8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bShouldUseForcedFacing;                            // 0x1FC(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_26C2[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FRotator                              ForcedFacing;                                      // 0x200(0x18)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	struct FVector2D                             SimplePathTarget;                                  // 0x218(0x10)(ZeroConstructor, Transient, DuplicateTransient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector2D                             SimplePathDirection;                               // 0x228(0x10)(ZeroConstructor, Transient, DuplicateTransient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        SimplePathDuration;                                // 0x238(0x4)(ZeroConstructor, Transient, DuplicateTransient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bSimplePathGuaranteeFinalPosition;                 // 0x23C(0x1)(ZeroConstructor, Transient, DuplicateTransient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_26C4[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FVector                               SimplePathGuaranteedFinalLocation;                 // 0x240(0x18)(ZeroConstructor, Transient, DuplicateTransient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FRotator                              SimplePathGuaranteedFinalRotation;                 // 0x258(0x18)(ZeroConstructor, Transient, DuplicateTransient, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	uint8                                        CustomMovementMode;                                // 0x270(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ENetworkSmoothingMode             NetworkSmoothingMode;                              // 0x271(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_26C5[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        GroundFriction;                                    // 0x274(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_26C6[0x40];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TMap<class FName, float>                     SpeedScalarModifierMap;                            // 0x2B8(0x50)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NativeAccessSpecifierPublic)
	float                                        SpeedScalar;                                       // 0x308(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MaxWalkSpeed;                                      // 0x30C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MaxAcceleration;                                   // 0x310(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SimSpeedCatchUpScalar;                             // 0x314(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        BrakingFrictionFactor;                             // 0x318(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        BrakingFriction;                                   // 0x31C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        BrakingSubStepTime;                                // 0x320(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        BrakingDecelerationWalking;                        // 0x324(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        BrakingDecelerationFalling;                        // 0x328(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        BrakingDecelerationSwimming;                       // 0x32C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        BrakingDecelerationFlying;                         // 0x330(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AirControl;                                        // 0x334(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AirControlBoostMultiplier;                         // 0x338(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AirControlBoostVelocityThreshold;                  // 0x33C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        FallingLateralFriction;                            // 0x340(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Buoyancy;                                          // 0x344(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        PerchRadiusThreshold;                              // 0x348(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        PerchAdditionalHeight;                             // 0x34C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FRotator                              RotationRate;                                      // 0x350(0x18)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	struct FRotator                              TempOverrideRotationRate;                          // 0x368(0x18)(Edit, BlueprintVisible, ZeroConstructor, Transient, EditConst, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                        bUseSeparateBrakingFriction : 1;                   // Mask: 0x1, PropSize: 0x10x380(0x1)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bApplyGravityWhileJumping : 1;                     // Mask: 0x2, PropSize: 0x10x380(0x1)(Edit, BlueprintVisible, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bUseControllerDesiredRotation : 1;                 // Mask: 0x4, PropSize: 0x10x380(0x1)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bOrientRotationToMovement : 1;                     // Mask: 0x8, PropSize: 0x10x380(0x1)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bSweepWhileNavWalking : 1;                         // Mask: 0x10, PropSize: 0x10x380(0x1)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        BitPad_174 : 1;                                    // Fixing Bit-Field Size  [ Dumper-7 ]
	uint8                                        bMovementInProgress : 1;                           // Mask: 0x40, PropSize: 0x10x380(0x1)(NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bEnableScopedMovementUpdates : 1;                  // Mask: 0x80, PropSize: 0x10x380(0x1)(Edit, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bForceMaxAccel : 1;                                // Mask: 0x1, PropSize: 0x10x381(0x1)(NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bRunPhysicsWithNoController : 1;                   // Mask: 0x2, PropSize: 0x10x381(0x1)(Edit, BlueprintVisible, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bForceNextFloorCheck : 1;                          // Mask: 0x4, PropSize: 0x10x381(0x1)(Edit, BlueprintVisible, DisableEditOnTemplate, EditConst, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bShrinkProxyCapsule : 1;                           // Mask: 0x8, PropSize: 0x10x381(0x1)(NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bCanWalkOffLedges : 1;                             // Mask: 0x10, PropSize: 0x10x381(0x1)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        BitPad_175 : 2;                                    // Fixing Bit-Field Size  [ Dumper-7 ]
	uint8                                        bNetworkSkipProxyPredictionOnNetUpdate : 1;        // Mask: 0x80, PropSize: 0x10x381(0x1)(Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bNetworkSkipProxyPredictionAlways : 1;             // Mask: 0x1, PropSize: 0x10x382(0x1)(Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bDeferUpdateMoveComponent : 1;                     // Mask: 0x2, PropSize: 0x10x382(0x1)(NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bEnablePhysicsInteraction : 1;                     // Mask: 0x4, PropSize: 0x10x382(0x1)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bTouchForceScaledToMass : 1;                       // Mask: 0x8, PropSize: 0x10x382(0x1)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bPushForceScaledToMass : 1;                        // Mask: 0x10, PropSize: 0x10x382(0x1)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bPushForceUsingZOffset : 1;                        // Mask: 0x20, PropSize: 0x10x382(0x1)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bScalePushForceToVelocity : 1;                     // Mask: 0x40, PropSize: 0x10x382(0x1)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        BitPad_176 : 1;                                    // Fixing Bit-Field Size  [ Dumper-7 ]
	uint8                                        Pad_26CC[0x5];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class USceneComponent*                       DeferredUpdatedMoveComponent;                      // 0x388(0x8)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MaxOutOfWaterStepHeight;                           // 0x390(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        OutofWaterZ;                                       // 0x394(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Mass;                                              // 0x398(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        StandingDownwardForceScale;                        // 0x39C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        InitialPushForceFactor;                            // 0x3A0(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        PushForceFactor;                                   // 0x3A4(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        PushForcePointZOffsetFactor;                       // 0x3A8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        TouchForceFactor;                                  // 0x3AC(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MinTouchForce;                                     // 0x3B0(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MaxTouchForce;                                     // 0x3B4(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        RepulsionForce;                                    // 0x3B8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_26CE[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FVector                               Acceleration;                                      // 0x3C0(0x18)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_26CF[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FQuat                                 LastUpdateRotation;                                // 0x3E0(0x20)(IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector                               LastUpdateLocation;                                // 0x400(0x18)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector                               LastUpdateVelocity;                                // 0x418(0x18)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector                               PendingImpulseToApply;                             // 0x430(0x18)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector                               PendingForceToApply;                               // 0x448(0x18)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        AnalogInputModifier;                               // 0x460(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_26D2[0xC];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        MaxSimulationTimeStep;                             // 0x470(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        MaxSimulationIterations;                           // 0x474(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        MaxJumpApexAttemptsPerSimulation;                  // 0x478(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MaxDepenetrationWithGeometry;                      // 0x47C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MaxDepenetrationWithGeometryAsProxy;               // 0x480(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MaxDepenetrationWithPawn;                          // 0x484(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MaxDepenetrationWithPawnAsProxy;                   // 0x488(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        NetProxyShrinkRadius;                              // 0x48C(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        NetProxyShrinkHalfHeight;                          // 0x490(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        LedgeCheckThreshold;                               // 0x494(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        JumpOutOfWaterPitch;                               // 0x498(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_26D5[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FFloorInfo                            CurrentFloor;                                      // 0x4A0(0xF0)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnTemplate, EditConst, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	enum class EMovementMode                     DefaultLandMovementMode;                           // 0x590(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EMovementMode                     GroundMovementMode;                                // 0x591(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_26D6[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        ReduceSimulationToTeleportsThreshold;              // 0x594(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        ReduceSimulationToOneStepThreshold;                // 0x598(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        CachedDistanceFromLocalPlayerSq;                   // 0x59C(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bMovedBySimLodTele : 1;                            // Mask: 0x1, PropSize: 0x10x5A0(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnTemplate, Transient, EditConst, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        BitPad_177 : 7;                                    // Fixing Bit-Field Size  [ Dumper-7 ]
	uint8                                        Pad_26D7[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        QuickFloorAdjustTraceStartHeight;                  // 0x5A4(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        QuickFloorAdjustTraceEndDepth;                     // 0x5A8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        CheckFloorPeriod;                                  // 0x5AC(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        CheckFloorTimer;                                   // 0x5B0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, IsPlainOldData, NoDestructor, AdvancedDisplay, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_26D8[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TMap<class AActor*, float>                   CosmeticAvoidanceActors;                           // 0x5B8(0x50)(BlueprintVisible, BlueprintReadOnly, Transient, Protected, NativeAccessSpecifierProtected)
	uint8                                        bMaintainHorizontalGroundVelocity : 1;             // Mask: 0x1, PropSize: 0x10x608(0x1)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bImpartBaseVelocityX : 1;                          // Mask: 0x2, PropSize: 0x10x608(0x1)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bImpartBaseVelocityY : 1;                          // Mask: 0x4, PropSize: 0x10x608(0x1)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bImpartBaseVelocityZ : 1;                          // Mask: 0x8, PropSize: 0x10x608(0x1)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bImpartBaseAngularVelocity : 1;                    // Mask: 0x10, PropSize: 0x10x608(0x1)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bJustTeleported : 1;                               // Mask: 0x20, PropSize: 0x10x608(0x1)(Edit, BlueprintVisible, DisableEditOnTemplate, Transient, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bNetworkUpdateReceived : 1;                        // Mask: 0x40, PropSize: 0x10x608(0x1)(Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bNetworkMovementModeChanged : 1;                   // Mask: 0x80, PropSize: 0x10x608(0x1)(Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bNotifyApex : 1;                                   // Mask: 0x1, PropSize: 0x10x609(0x1)(Edit, BlueprintVisible, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bCheatFlying : 1;                                  // Mask: 0x2, PropSize: 0x10x609(0x1)(NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bIgnoreBaseRotation : 1;                           // Mask: 0x4, PropSize: 0x10x609(0x1)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bFastAttachedMove : 1;                             // Mask: 0x8, PropSize: 0x10x609(0x1)(NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bAlwaysCheckFloor : 1;                             // Mask: 0x10, PropSize: 0x10x609(0x1)(Edit, BlueprintVisible, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bUseFlatBaseForFloorChecks : 1;                    // Mask: 0x20, PropSize: 0x10x609(0x1)(Edit, BlueprintVisible, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bPerformingJumpOff : 1;                            // Mask: 0x40, PropSize: 0x10x609(0x1)(NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bWantsToLeaveNavWalking : 1;                       // Mask: 0x80, PropSize: 0x10x609(0x1)(NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bRequestedMoveUseAcceleration : 1;                 // Mask: 0x1, PropSize: 0x10x60A(0x1)(Edit, BlueprintVisible, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        BitPad_178 : 1;                                    // Fixing Bit-Field Size  [ Dumper-7 ]
	uint8                                        bHasRequestedVelocity : 1;                         // Mask: 0x4, PropSize: 0x10x60A(0x1)(Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bRequestedMoveWithMaxSpeed : 1;                    // Mask: 0x8, PropSize: 0x10x60A(0x1)(Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        BitPad_179 : 1;                                    // Fixing Bit-Field Size  [ Dumper-7 ]
	uint8                                        bProjectNavMeshWalking : 1;                        // Mask: 0x20, PropSize: 0x10x60A(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bProjectNavMeshOnBothWorldChannels : 1;            // Mask: 0x40, PropSize: 0x10x60A(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, AdvancedDisplay, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        BitPad_17A : 1;                                    // Fixing Bit-Field Size  [ Dumper-7 ]
	uint8                                        Pad_26DA[0x5];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FVector                               RequestedVelocity;                                 // 0x610(0x18)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               PendingLaunchVelocity;                             // 0x628(0x18)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_26DB[0x108];                                   // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        NavMeshProjectionInterval;                         // 0x748(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        NavMeshProjectionTimer;                            // 0x74C(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        NavMeshProjectionInterpSpeed;                      // 0x750(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        NavMeshProjectionHeightScaleUp;                    // 0x754(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        NavMeshProjectionHeightScaleDown;                  // 0x758(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        NavWalkingFloorDistTolerance;                      // 0x75C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnTeleportToResolvePath;                           // 0x760(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FValeriaBaseMovementComponentPostPhysicsTickFunction PostPhysicsTickFunction;                           // 0x770(0x30)(NativeAccessSpecifierPublic)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("ValeriaBaseMovementComponent");
		return Clss;
	}

	bool StopFollowingLeader();
	bool StartFollowingLeader(class AValeriaMoveablePawn* InNewLeader, float InDistance, float InCloseEnough);
	void SetWalkableFloorZ(float InInWalkableFloorZ);
	void SetWalkableFloorAngle(float InInWalkableFloorAngle);
	void SetMovementMode(enum class EMovementMode InNewMovementMode, uint8 InNewCustomMode);
	void SetAvoidanceActor(class AActor* InNewAvoidanceActor, float InRadius);
	void Server_SnapToDirection(const struct FRotator& InRotation);
	void RpcMulticast_SnapToDirection(const struct FRotator& InRotation);
	void RpcClient_ApplyTeleport(const struct FVector& InTeleportLocation, const struct FRotator& InTeleportRotation);
	void RpcClient_ApplyJump();
	void RpcClient_AddImpulse(const struct FVector& InImpulse, bool InbVelocityChange);
	void OnRep_TargetLocationLeader();
	void OnRep_TargetLocation1();
	void OnRep_MoveSimFlags(enum class EValeriaMoveSimulationFlag& InOldFlags);
	float K2_GetWalkableFloorZ();
	float K2_GetWalkableFloorAngle();
	void K2_FindFloor(const struct FVector& InCapsuleLocation, struct FFloorInfo* InFloorResult);
	void K2_ComputeFloorDist(const struct FVector& InCapsuleLocation, float InLineDistance, float InSweepDistance, float InSweepRadius, struct FFloorInfo* InFloorResult);
	bool IsWalking();
	bool IsWalkable(struct FHitResult& InHit);
	float GetValidPerchRadius();
	float GetPerchRadiusThreshold();
	class UPrimitiveComponent* GetMovementBase();
	class AValeriaMoveablePawn* GetMoveableOwner();
	float GetMinAnalogSpeed();
	float GetMaxJumpHeightWithJumpTime();
	float GetMaxJumpHeight();
	float GetMaxBrakingDeceleration();
	float GetMaxAcceleration();
	struct FVector GetLastUpdateVelocity();
	struct FRotator GetLastUpdateRotation();
	struct FVector GetLastUpdateLocation();
	struct FVector GetImpartedMovementBaseVelocity();
	class UPathFollowingComponent* GetFollowingComponent();
	struct FVector GetCurrentAcceleration();
	float GetAnalogInputModifier();
	void DisableMovement();
	void DeterminePrimaryAvoidanceActor(class AActor** InAvoidanceActor, float* InRadius);
	bool DetermineCurrentNavMeshLocation(struct FVector* InNavFloorLocation);
	void ClearAvoidanceActor(class AActor* InMatchAvoidanceActor);
	void ClearAllAvoidanceActors();
	void ClearAccumulatedForces();
	void CapsuleTouched(class UPrimitiveComponent* InOverlappedComp, class AActor* InOther, class UPrimitiveComponent* InOtherComp, int32 InOtherBodyIndex, bool InbFromSweep, struct FHitResult& InSweepResult);
	void CalcVelocity(float InDeltaTime, float InFriction, bool InbFluid, float InBrakingDeceleration);
	bool AttemptServerTeleport(struct FVector& InTeleportTarget, struct FRotator& InTeleportRotation);
	void AddImpulse(const struct FVector& InImpulse, bool InbVelocityChange);
	void AddForce(const struct FVector& InForce);
};

// 0x40 (0x7E0 - 0x7A0)
// Class Palia.ValeriaNpcMovementComponent
class UValeriaNpcMovementComponent : public UValeriaBaseMovementComponent
{
public:
	bool                                         bMovingOnPlacedPath;                               // 0x7A0(0x1)(Edit, BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_26E1[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FVector                               OldTargetLocation1;                                // 0x7A8(0x18)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector                               OldTargetLocation2;                                // 0x7C0(0x18)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class EMovementMode                     ForcedClientMovementMode;                          // 0x7D8(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class EMovementMode                     ForcedServerMovementMode;                          // 0x7D9(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_26E3[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        ClientMovementModeChangedFromForcedCounter;        // 0x7DC(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("ValeriaNpcMovementComponent");
		return Clss;
	}

};

// 0x10 (0x7F0 - 0x7E0)
// Class Palia.CreatureMovementComponent
class UCreatureMovementComponent : public UValeriaNpcMovementComponent
{
public:
	float                                        SprintSpeedMultiplier;                             // 0x7E0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_26E5[0xC];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("CreatureMovementComponent");
		return Clss;
	}

};

// 0x58 (0xA0 - 0x48)
// Class Palia.CurrencyConfig
class UCurrencyConfig : public UGuidDataAsset
{
public:
	int32                                        MaxAmount;                                         // 0x48(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_26E7[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UTexture2D*                            Icon;                                              // 0x50(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FText                                  Name;                                              // 0x58(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	class FString                                StatName;                                          // 0x70(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FText                                  ToolTipText;                                       // 0x80(0x18)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	bool                                         bIsSkillMedal;                                     // 0x98(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_26EA[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("CurrencyConfig");
		return Clss;
	}

};

// 0x48 (0x78 - 0x30)
// Class Palia.DataLayerStatesConfig
class UDataLayerStatesConfig : public UDataAsset
{
public:
	TArray<TSoftObjectPtr<class UDataLayerAsset>> UnloadedLayers;                                    // 0x30(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)
	TArray<TSoftObjectPtr<class UDataLayerAsset>> ActivatedLayers;                                   // 0x40(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)
	TArray<TSoftObjectPtr<class UDataLayerAsset>> LoadedLayers;                                      // 0x50(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)
	struct FVector                               ActiveQueryLocation;                               // 0x60(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("DataLayerStatesConfig");
		return Clss;
	}

};

// 0x28 (0xC8 - 0xA0)
// Class Palia.DeathComponent
class UDeathComponent : public UActorComponent
{
public:
	FMulticastInlineDelegateProperty_            OnDeathServer;                                     // 0xA0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnDeath;                                           // 0xB0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	class AActor*                                DeathInstigator;                                   // 0xC0(0x8)(ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("DeathComponent");
		return Clss;
	}

	void RpcClient_DisplayDeath(class AActor* InPassedDeathInstigator);
	class AActor* GetDeathInstigator();
};

// 0x20 (0xC0 - 0xA0)
// Class Palia.DebugCheatComponent
class UDebugCheatComponent : public UActorComponent
{
public:
	FMulticastInlineDelegateProperty_            OnDebugSaveStateCompleted;                         // 0xA0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TArray<class AActor*>                        SpawnedActors;                                     // 0xB0(0x10)(ZeroConstructor, Transient, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("DebugCheatComponent");
		return Clss;
	}

	void RpcServer_SendCheat(const struct FDebugCheat& InCheat);
	void RpcClient_DebugSaveComplete();
};

// 0x80 (0x120 - 0xA0)
// Class Palia.DebugInfoComponent
class UDebugInfoComponent : public UActorComponent
{
public:
	uint8                                        Pad_26F8[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	FMulticastInlineDelegateProperty_            OnChanged;                                         // 0xA8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TArray<struct FTitleAndRowsInfo>             ServerLoadedPrivateSpacesTitleAndRowsInfo;         // 0xB8(0x10)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, RepNotify, Protected, NativeAccessSpecifierProtected)
	struct FDebugInfoPersistBlock                DebugInfoPersistBlock;                             // 0xC8(0x58)(Net, RepNotify, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("DebugInfoComponent");
		return Clss;
	}

	void RpcServer_ToggleCheats();
	void RpcServer_SetCheats(bool InCanCheat);
	void RpcServer_RequestServerLoadedPrivateSpacesTitleAndRowsInfo(bool InbRequestOnlyOwner);
	void OnServerLoadedPrivateSpacesTitleAndRowsInfoReplicatedAndShouldNotify();
	void OnReplicatedAndShouldNotify(const struct FDebugInfoPersistBlock& InOldDebugInfoPersistBlock);
	bool HasReceivedCheatSetByGuid(struct FGuid& InInGuid);
	bool HasReceivedCheatSet(class UCheatSetConfig* InInCheatSetConfig);
	bool GetShowVillagerDebugInfo();
	bool GetShowHiddenGearTypes();
	bool GetIgnoreGiftTimeRestriction();
	bool GetIgnoreFriendshipLevelRequirementsForDynamicGiftPrefs();
	bool GetIgnoreDailyDialogueLimit();
	bool AreCheatsEnabled();
};

// 0x190 (0x230 - 0xA0)
// Class Palia.DebugServerActorsComponent
class UDebugServerActorsComponent : public UActorComponent
{
public:
	FMulticastInlineDelegateProperty_            OnReplicated;                                      // 0xA0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FDebugServerActorListToTrack          Targets;                                           // 0xB0(0x118)(Net, RepNotify, NativeAccessSpecifierPrivate)
	TArray<class UClass*>                        SelectedClasses;                                   // 0x1C8(0x10)(Net, ZeroConstructor, NativeAccessSpecifierPrivate)
	struct FTimerHandle                          UpdateTargetsTimerHandle;                          // 0x1D8(0x8)(NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TMap<class UClass*, struct FLinearColor>     ClassColors;                                       // 0x1E0(0x50)(NativeAccessSpecifierPrivate)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("DebugServerActorsComponent");
		return Clss;
	}

	void Server_UpdateTimer();
	void Server_UpdateAllProperties();
	void Server_UpdateActorProperties(struct FDebugServerActorListToTrackItem* InTrackItem);
	void Server_UntrackActor(class AActor* InInActor);
	bool Server_UnselectActorClass(class UClass* InInClass);
	bool Server_TrackActor(class AActor* InInActor);
	bool Server_SelectActorClass(class UClass* InInClass);
	void Server_OnActorDestroyed(class AActor* InInActor);
	void Reset();
	struct FLinearColor GetActorDebugColor(class UClass* InInClass);
	TArray<struct FDebugServerActorListToTrackItem> GetActorData();
	void Client_OnReplicated();
};

// 0xC0 (0x160 - 0xA0)
// Class Palia.DebugSpawningComponent
class UDebugSpawningComponent : public UActorComponent
{
public:
	FMulticastInlineDelegateProperty_            OnSettingsChanged;                                 // 0xA0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FDebugSpawningSettings                Settings;                                          // 0xB0(0x38)(Net, RepNotify, NoDestructor, NativeAccessSpecifierPrivate)
	TSubclassOf<class AActor>                    SpawnManagerClassToIterate;                        // 0xE8(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<class AActor*>                        CurrentlyTrackingSpawnManagers;                    // 0xF0(0x10)(ZeroConstructor, NativeAccessSpecifierPrivate)
	TArray<class UClass*>                        CurrentlyTrackingSpawnees;                         // 0x100(0x10)(ZeroConstructor, NativeAccessSpecifierPrivate)
	struct FDebugSpawningReplicatedData          ReplicatedData;                                    // 0x110(0x30)(Net, RepNotify, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	TArray<class AActor*>                        Targets;                                           // 0x140(0x10)(Net, ZeroConstructor, NativeAccessSpecifierPrivate)
	class UDebugServerActorsComponent*           DebugServerActors;                                 // 0x150(0x8)(ExportObject, ZeroConstructor, Transient, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2712[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("DebugSpawningComponent");
		return Clss;
	}

	void SetEnabled(bool InEnable);
	void SetDebugSpawningSettings(struct FDebugSpawningSettings& InInSettings);
	void Server_OnActorSpawned(class AActor* InInActor);
	void Server_OnActorDespawned(class AActor* InInActor);
	void RpcServer_UntrackSpawnManager(class FName& InSpawnManagerName);
	void RpcServer_UntrackSpawneeClass(class FName& InSpawneeClassName);
	void RpcServer_UntrackAllSpawnManagers();
	void RpcServer_UntrackAllSpawnees();
	void RpcServer_UntrackAll();
	void RpcServer_TrackSpawnManager(class FName& InSpawnManagerName);
	void RpcServer_TrackSpawneeClass(class FName& InSpawneeClassName);
	void RpcServer_SetEnabled(bool InEnable);
	void RpcServer_SetDebugSpawningSettings(struct FDebugSpawningSettings& InInSettings);
	void OnSpawnManagerActorSpawnChange(class AActor* InInActor);
	bool IsTrackingSpawnManager(class FName& InSpawnManagerName);
	TArray<class FName> GetSpawnManagerNames();
	TArray<class FName> GetSpawneeClassNames();
	struct FDebugSpawningSettings GetDebugSpawningSettings();
	void Client_UntrackSpawnManager(class FName& InSpawnManagerName);
	void Client_UntrackSpawneeClass(class FName& InSpawneeClassName);
	void Client_UntrackAllSpawnManagers();
	void Client_UntrackAllSpawnees();
	void Client_UntrackAll();
	void Client_TrackSpawnManager(class FName& InSpawnManagerName);
	void Client_TrackSpawneeClass(class FName& InSpawneeClassName);
	void Client_OnReplicatedSettings();
	void Client_OnReplicatedData();
};

// 0x158 (0x190 - 0x38)
// Class Palia.DefaultDestinationsConfig
class UDefaultDestinationsConfig : public UDeveloperSettings
{
public:
	struct FLevelToDestination                   HousingPlotDefault;                                // 0x38(0x38)(Edit, BlueprintVisible, BlueprintReadOnly, Config, NativeAccessSpecifierPublic)
	struct FLevelToDestination                   VisitingPlotDefault;                               // 0x70(0x38)(Edit, BlueprintVisible, BlueprintReadOnly, Config, NativeAccessSpecifierPublic)
	struct FLevelToDestination                   SpecificLocationDefault;                           // 0xA8(0x38)(Edit, BlueprintVisible, BlueprintReadOnly, Config, NativeAccessSpecifierPublic)
	TMap<TSoftObjectPtr<class UWorld>, TSoftObjectPtr<class UTeleportTravelConfigAsset>> DefaultMapDestinations;                            // 0xE0(0x50)(Edit, BlueprintVisible, BlueprintReadOnly, Config, UObjectWrapper, NativeAccessSpecifierPublic)
	TArray<TSoftObjectPtr<class UTeleportTravelConfigAsset>> CrossServerDestinations;                           // 0x130(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, UObjectWrapper, NativeAccessSpecifierPublic)
	TMap<TSoftObjectPtr<class UWorld>, TSoftObjectPtr<class UTeleportTravelConfigAsset>> DefaultInitialMapPrivateSpaces;                    // 0x140(0x50)(Edit, BlueprintVisible, BlueprintReadOnly, Config, UObjectWrapper, NativeAccessSpecifierPublic)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("DefaultDestinationsConfig");
		return Clss;
	}

};

// 0x38 (0xD8 - 0xA0)
// Class Palia.DespawnComponent
class UDespawnComponent : public UActorComponent
{
public:
	FMulticastInlineDelegateProperty_            OnDespawnStarted;                                  // 0xA0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnDespawnWasCancelled;                             // 0xB0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                        Pad_2718[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        TimeStartedDespawnAt;                              // 0xC8(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        TotalDespawnTime;                                  // 0xCC(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bIsImmuneWhileDespawning;                          // 0xD0(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_271A[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("DespawnComponent");
		return Clss;
	}

	void RpcNetMulticast_CancelDespawn();
	void RpcNetMulticast_BeginDespawn(float InDespawnDuration);
	bool IsDespawning();
	float GetTotalDespawnTime();
	float GetSpentDespawnTime();
	float GetRemainingDespawnTime();
	float GetDespawnProgress();
};

// 0x8 (0xA8 - 0xA0)
// Class Palia.DespawnTimerComponent
class UDespawnTimerComponent : public UActorComponent
{
public:
	uint8                                        Pad_271B[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        TimeBeforeDespawn;                                 // 0xA4(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("DespawnTimerComponent");
		return Clss;
	}

};

// 0x10 (0x40 - 0x30)
// Class Palia.Dev_SpawnActorConfig
class UDev_SpawnActorConfig : public UDataAsset
{
public:
	TArray<class FName>                          WhiteListAssetPaths;                               // 0x30(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("Dev_SpawnActorConfig");
		return Clss;
	}

};

// 0x1A0 (0x240 - 0xA0)
// Class Palia.DialogueComponent
class UDialogueComponent : public UActorComponent
{
public:
	uint8                                        Pad_2740[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	FMulticastInlineDelegateProperty_            OnIgnoreDialogueTriggered;                         // 0xA8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnDialogProgressed;                                // 0xB8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnDialogueStarted;                                 // 0xC8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnDialogueEnded;                                   // 0xD8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnDialogueCameraInitialFadeOutComplete;            // 0xE8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnDialogueCameraInitialFadeInStart;                // 0xF8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnDialogueCameraEndingFadeOutComplete;             // 0x108(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnDialogueScriptedNotify;                          // 0x118(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	class UCameraComponent*                      DialogueCamera;                                    // 0x128(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, Transient, EditConst, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FViewTargetTransitionParams           DialogueCameraTransitionInfo;                      // 0x130(0x10)(Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
	bool                                         bShouldHidePlayerDuringDialogue;                   // 0x140(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2745[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        DialogueFadeInDuration;                            // 0x144(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        DialogueFadeHoldDuration;                          // 0x148(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        DialogueFadeOutDuration;                           // 0x14C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bStopBehaviorAnimsDuringFadeIn;                    // 0x150(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bRestartDialogueAnimsDuringFadeIn;                 // 0x151(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bStallTextDuringCameraFade;                        // 0x152(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2748[0x1];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        RestartDialogueAnimsDuringFadeInTimingScalar;      // 0x154(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bAutomaticallyFindDialogueCamera;                  // 0x158(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bAutomaticallySanitizeFocalDistance;               // 0x159(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bShouldAvoidConversation;                          // 0x15A(0x1)(Edit, BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bOnRouteToDestination;                             // 0x15B(0x1)(Edit, BlueprintVisible, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        TimeUntilRushOnTravelStart;                        // 0x15C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        RushSpeedUp;                                       // 0x160(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AutomaticallyPlayAnimOutroDelay;                   // 0x164(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FClientDialogueDisplayInfo            TextDisplayInfo;                                   // 0x168(0x38)(NativeAccessSpecifierPublic)
	TArray<class UVAL_DialogueAsset*>            DialogueList;                                      // 0x1A0(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<class AValeriaCharacter*>             EngagedCharacters;                                 // 0x1B0(0x10)(ZeroConstructor, Transient, Protected, NativeAccessSpecifierProtected)
	bool                                         bPlayersEngaged;                                   // 0x1C0(0x1)(Net, ZeroConstructor, Transient, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_274B[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FTimerHandle                          Server_CleanEngagedCharactersHandle;               // 0x1C8(0x8)(NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FTimerHandle                          Server_RushHandle;                                 // 0x1D0(0x8)(NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FTimerHandle                          Client_CameraFadeHandle;                           // 0x1D8(0x8)(NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FTimerHandle                          Client_DialogueTextHandle;                         // 0x1E0(0x8)(NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FTimerHandle                          Client_AnimQueueRestartHandle;                     // 0x1E8(0x8)(NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FTimerHandle                          Client_AnimQueueOutroHandle;                       // 0x1F0(0x8)(NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bSkipNextCameraFade;                               // 0x1F8(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bShouldStallDialogueAnimsForBehaviorOutro;         // 0x1F9(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_274D[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FName                                  LastPlayedDialogueMontage;                         // 0x1FC(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FName                                  LastPlayedDialogueMontageSection;                  // 0x204(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_274E[0x34];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("DialogueComponent");
		return Clss;
	}

	void VillagerActivityStatusChanged(class AValeriaVillagerController* InChangedValeriaVillagerController, enum class EVillagerActivityStatus InNewActivityStatus);
	void StartNewDialogueText(class FText& InNewText, bool InbPerformLocalSubsitutions);
	void SetShouldHidePlayerDuringDialogue(bool InbShouldHide);
	void RegisterEnRouteToDestination();
	void RegisterArrivedAtDestination();
	void OpenVillagerStore(class UPersistentTagMapComponent* InTagMap);
	struct FServerUseEventResult OnServerInteract(class UInteractableComponent* InInteractable, class AValeriaCharacter* InCharacter, const struct FInteractEventParams& InEventParams);
	void OnRep_bPlayersEngaged();
	struct FUseEventResult OnClientInteract(class UInteractableComponent* InInteractable, class AValeriaPlayerController* InPlayer, const struct FInteractEventParams& InParams);
	void LogSelectedDialogue(int32 InPreviousDialogueID, int32 InSelectedDialogueID);
	bool IsLocallyEngagedForDialogue();
	bool IsInteractable(class AValeriaCharacter* InCharacter, const struct FInteractEventParams& InEventParams);
	bool IsDialogueTextFullyDisplayed();
	bool IsAnyoneEngagedForDialogue();
	int32 InteractPriority();
	bool GetText(class AValeriaCharacter* InCharacter, enum class EInteractEventIndex InEventIndex, struct FGetTextParams* InParams);
	class FString GetDialogueDisplayString();
	void ForceCompleteCurrentDialogueText();
	class FText CreateSubstitutedTextForClient(class FText& InInputText);
};

// 0xA0 (0x140 - 0xA0)
// Class Palia.DialogueHistoryComponent
class UDialogueHistoryComponent : public UActorComponent
{
public:
	uint8                                        Pad_275A[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	FMulticastInlineDelegateProperty_            OnChanged;                                         // 0xA8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	int32                                        DayGroupingOverlapHours;                           // 0xB8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_275B[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FDialogueChainEntry>           CurrentDialogueChain;                              // 0xC0(0x10)(ZeroConstructor, NativeAccessSpecifierPrivate)
	struct FDialogueHistory                      DialogueHistory;                                   // 0xD0(0x58)(NativeAccessSpecifierPrivate)
	TArray<struct FDialogueHistoryEntry>         DialogueHistory_QueuedToSend;                      // 0x128(0x10)(ZeroConstructor, NativeAccessSpecifierPrivate)
	struct FTimerHandle                          ProcessDialogueHistoryQueueHandle;                 // 0x138(0x8)(NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("DialogueHistoryComponent");
		return Clss;
	}

	void StartProcessingLongTermHistoryQueue();
	void RpcClient_SendLongTermHistoryQueue(TArray<struct FDialogueHistoryEntry>& InData);
	void RpcClient_ResetLongTermHistoryQueue();
	void ProcessLongTermHistoryQueue();
};

// 0x30 (0xD0 - 0xA0)
// Class Palia.DisplacerBeastComponent
class UDisplacerBeastComponent : public UActorComponent
{
public:
	TSubclassOf<class AActor>                    IllusionTemplate;                                  // 0xA0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AActor*                                SpawnedDecoy;                                      // 0xA8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        TimeBetweenActions;                                // 0xB0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        DecoySpawnRadius;                                  // 0xB4(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MaxCombatTimeBeforeDespawnAttempt;                 // 0xB8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_275C[0x14];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("DisplacerBeastComponent");
		return Clss;
	}

	void OnDeath(class UDeathComponent* InDeath);
};

// 0x38 (0xD8 - 0xA0)
// Class Palia.DisplacerShadeComponent
class UDisplacerShadeComponent : public UActorComponent
{
public:
	class USphereComponent*                      CollisionComponent;                                // 0xA0(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ShadeLifetime;                                     // 0xA8(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ExplosionPhysicsImpulsePower;                      // 0xAC(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnHitValidTargetClientSide;                        // 0xB0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                        Pad_2769[0x18];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("DisplacerShadeComponent");
		return Clss;
	}

	void NotifyComponentEndOverlap(class UPrimitiveComponent* InOverlappedComponent, class AActor* InOtherActor, class UPrimitiveComponent* InOtherComp, int32 InOtherBodyIndex);
	void NotifyComponentBeginOverlap(class UPrimitiveComponent* InOverlappedComponent, class AActor* InOtherActor, class UPrimitiveComponent* InOtherComp, int32 InOtherBodyIndex, bool InbFromSweep, struct FHitResult& InSweepResult);
};

// 0x8 (0x30 - 0x28)
// Class Palia.DummyObject
class UDummyObject : public UObject
{
public:
	class UDataTable*                            TableRef;                                          // 0x28(0x8)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("DummyObject");
		return Clss;
	}

};

// 0x38 (0xD8 - 0xA0)
// Class Palia.DynamicGiftPrefDataComponent
class UDynamicGiftPrefDataComponent : public UActorComponent
{
public:
	FMulticastInlineDelegateProperty_            OnDynamicGiftPreferencesChangedDel;                // 0xA0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                        Pad_2775[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FWeeklyEventConfig                    PreferenceResetTime;                               // 0xB4(0xC)(Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
	int32                                        PreferenceDataVersionNumber;                       // 0xC0(0x4)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2778[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FVillagerDynamicPreferenceData> CurrentPreferenceData;                             // 0xC8(0x10)(Net, ZeroConstructor, RepNotify, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("DynamicGiftPrefDataComponent");
		return Clss;
	}

	void OnRep_CurrentPreferenceData();
	TArray<int32> GetPreferenceIdsForVillager(int32 InVillagerCoreId);
};

// 0x160 (0x458 - 0x2F8)
// Class Palia.EndlessRunnerArcadeMachine
class AEndlessRunnerArcadeMachine : public AArcadeMachineBase
{
public:
	struct FGuid                                 Server_CurrentReplayId;                            // 0x2F8(0x10)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FArcadeReplicatedReplayFrameArray     Server_ReplicatedReplayFrames;                     // 0x308(0x128)(Net, Transient, NativeAccessSpecifierPrivate)
	struct FGuid                                 Client_CurrentReplayId;                            // 0x430(0x10)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int32                                        Client_CurrentFrameIndex;                          // 0x440(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int32                                        Client_ReplayInputsConsumed;                       // 0x444(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<struct FArcadeInputState>             Client_CurrentReplayInputs;                        // 0x448(0x10)(ZeroConstructor, Transient, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("EndlessRunnerArcadeMachine");
		return Clss;
	}

	bool ViewingOthersIsEnabled();
	int32 GetNumberOfReplayInputsToConsume();
	struct FGuid GetCurrentReplayGuid();
	int32 ConvertReplayGuidToSeed(const struct FGuid& InGuid);
	struct FArcadeInputState ConsumeReplayInput();
	void Client_OnReplayInputReplicated();
	void BPIE_OnCurrentReplayInputsChanged();
	void AddReplayFrame(class AActor* InFromActor, const struct FArcadeReplayFrame& InInFrame);
};

// 0x40 (0x68 - 0x28)
// Class Palia.EnvEffectState
class UEnvEffectState : public UObject
{
public:
	enum class ELightingModificationType         LightModificationType;                             // 0x28(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_278F[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSoftClassPtr<class ULightingBaseState>      LightBaseState;                                    // 0x30(0x30)(Edit, BlueprintVisible, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2790[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("EnvEffectState");
		return Clss;
	}

	void EnvEffectEnd();
	void EnvEffectBegin();
};

// 0xB8 (0x348 - 0x290)
// Class Palia.EnvLightingOverrideVolume
class AEnvLightingOverrideVolume : public AActor
{
public:
	bool                                         bUseTimeBlend;                                     // 0x290(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2791[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        BlendTime;                                         // 0x294(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ELightingModificationType         OverrideType;                                      // 0x298(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2792[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class ULightingBaseState*                    OverrideState;                                     // 0x2A0(0x8)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        OverrideStateStrength;                             // 0x2A8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2793[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class ULightingModState*                     ModificationState;                                 // 0x2B0(0x8)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<TSoftClassPtr<class UEnvEffectState>> EnvEffectClasses;                                  // 0x2B8(0x10)(Edit, BlueprintVisible, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)
	TSubclassOf<class AValEnvironmentManager>    EnvManagerClass;                                   // 0x2C8(0x8)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USceneComponent*                       Root;                                              // 0x2D0(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UBoxComponent*                         OuterBoundsBoxComp;                                // 0x2D8(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UBoxComponent*                         InnerBoundsBoxComp;                                // 0x2E0(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        CurrentBlendPercentage;                            // 0x2E8(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2794[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class AValEnvironmentManager*                EnvManager;                                        // 0x2F0(0x8)(ZeroConstructor, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2795[0x50];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("EnvLightingOverrideVolume");
		return Clss;
	}

	bool UpdateBlend();
	bool UnregisterOverrideState();
	bool RegisterOverrideState();
};

// 0x0 (0x2C8 - 0x2C8)
// Class Palia.Env_CompVolume
class AEnv_CompVolume : public ATriggerVolume
{
public:

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("Env_CompVolume");
		return Clss;
	}

};

// 0x0 (0x2C8 - 0x2C8)
// Class Palia.Env_DistanceFadeVolume
class AEnv_DistanceFadeVolume : public AVolume
{
public:

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("Env_DistanceFadeVolume");
		return Clss;
	}

	bool DoesEncompassPoint(const struct FVector& InPoint, float InSphereRadius);
};

// 0x1C8 (0x268 - 0xA0)
// Class Palia.EquipmentComponent
class UEquipmentComponent : public UActorComponent
{
public:
	FMulticastInlineDelegateProperty_            OnEquipmentChanged;                                // 0xA0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnReequipCurrentEquipped;                          // 0xB0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnSelectedEquipmentChanged;                        // 0xC0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnEquipmentUseAttempted;                           // 0xD0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnCanChangeEquippedUpdated;                        // 0xE0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnEquipmentVisibilityChanged;                      // 0xF0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnPropsSpawned;                                    // 0x100(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FEquipmentItem                        EquippedTool;                                      // 0x110(0x58)(Net, RepNotify, Protected, NativeAccessSpecifierProtected)
	struct FEquipmentItem                        EquippedPrimary;                                   // 0x168(0x58)(Net, RepNotify, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_27F7[0x78];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	struct FPropInfo                             CurrentProps;                                      // 0x238(0x30)(Net, RepNotify, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("EquipmentComponent");
		return Clss;
	}

	void Server_UpdateWaterLevel(int32 InNewWaterLevel);
	void Server_UnequipTemporaryItem();
	void Server_RepairToolDurability(int32 InAmount);
	void Server_HandleInventoryChanged(class UInventoryComponent* InInventory);
	void Server_DecrementToolDurability(int32 InAmount);
	void RpcServer_ValidateEquippedItem(struct FEquipmentItem& InEquipItem);
	void RpcServer_UpdateProps(struct FPropInfo& InShowProps);
	void RpcServer_UnequipCurrent(enum class EEquipmentType InUnequipType);
	void RpcServer_HiddenStateChange(bool InbNewHidden);
	void RpcServer_CHEAT_DecrementToolDurability(int32 InAmount, class UGearSlotTypeConfig* InGearSlot);
	void RpcNetMulticast_PlayMontageOnEquippedActor(const struct FMontageInfo& InMontageInfo);
	void RpcClient_UpdateWaterLevel(int32 InNewWaterLevel);
	void RpcClient_ForceEquipItem(struct FEquipmentItem& InEquipItem);
	void RpcClient_AcknowledgeEquipSucceeded();
	void PlayMontageOnEquippedActor(const struct FMontageInfo& InMontageInfo, bool InMulticast);
	void OnRep_EquippedToolUpdated();
	void OnRep_EquippedPrimaryUpdated();
	void OnRep_CurrentProps();
	void K2_Server_EquipTemporaryItem(TSoftObjectPtr<class UVAL_ItemTypeDefinitionAsset>& InEquipItem, class AActor* InTarget);
	bool HasSelectedItem();
	struct FValeriaItem GetValeriaItemFromEquipped();
	struct FEquipmentItem GetEquippedItem();
	void Client_UnselectItem(bool InbSendNotify);
	bool Client_TryUseEquipped(struct FUseEventParams& InEventParams, bool InbIsPrimaryAction);
	bool Client_TryUnequip();
	bool Client_TrySelectItemFromInventory(struct FBagSlotLocation& InInventoryLocation);
	bool Client_TryEquipItemFromInventory(struct FBagSlotLocation& InInventoryLocation);
	void Client_ShowAnimationProps(TMap<enum class ECharacterAttachPoint, TSoftClassPtr<class AEquipViewActor>>& InProps, class FName& InPropNotify, class FName& InQualifier);
	void Client_HandleWeedingStarted();
	void Client_HandleWeedingEnded();
	void Client_HandleSeedPlantingStateChanged(bool InbIsSeedPlantingActive);
	void Client_HandlePlacementModeChanged(class AValeriaCharacter* InCharacter, bool InbIsPlacementMode);
	void Client_HandleLongFallingChanged(bool InbIsLongFalling);
	void Client_HandleInspirationSequenceChanged(class AValeriaCharacter* InCharacter, bool InbIsInInspirationSequence);
	void Client_HandleGlidingChanged(bool InbIsGliding);
	void Client_HandleEmoteStarted(class UEmoteDataAsset* InPlayingEmoteData);
	void Client_HandleEmoteEnded();
	void Client_HandleClimbingChanged(bool InbIsClimbing);
	void Client_HandleCharacterStateChange(class UCharacterStateMachineComponent* InCharacterStateMachine, const struct FCharacterStateChangeParams& InStateChangeParams);
	void Client_HandleAnimInitialized();
	void Client_HandleAbilityStarted(class UGameplayAbility* InAbility);
	void Client_HandleAbilityEnded(class UGameplayAbility* InAbility);
	void Client_ClearAnimationProps();
};

// 0x0 (0x290 - 0x290)
// Class Palia.EquipViewActor
class AEquipViewActor : public AActor
{
public:

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("EquipViewActor");
		return Clss;
	}

	void ReceiveNamedNotify(class FName& InNotifyName, class FName& InQualifierName);
	void OnOwnerAnimNotifyBeginReceived(class FName InNotifyName, struct FBranchingPointNotifyPayload& InBranchingPointNotifyPayload);
};

// 0x10 (0x38 - 0x28)
// Class Palia.ValeriaExecCmds
class UValeriaExecCmds : public UObject
{
public:
	TArray<class FString>                        Commands;                                          // 0x28(0x10)(ZeroConstructor, Config, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("ValeriaExecCmds");
		return Clss;
	}

	class UValeriaExecCmds* GetExecCmds();
	void Execute(class APlayerController* InPlayerController);
};

// 0x108 (0x138 - 0x30)
// Class Palia.ExperiencePackageConfig
class UExperiencePackageConfig : public UPrimaryDataAsset
{
public:
	class FName                                  AssetCategoryName;                                 // 0x30(0x8)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, AssetRegistrySearchable, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UWorld>                 Map;                                               // 0x38(0x30)(Edit, BlueprintVisible, BlueprintReadOnly, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bAbleToReturnToWhereLeftOff;                       // 0x68(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2808[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSoftObjectPtr<class UDataLayerStatesConfig> DataLayerConfig;                                   // 0x70(0x30)(Edit, BlueprintVisible, BlueprintReadOnly, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UDataTable*                            SpawnConfig;                                       // 0xA0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FExperienceEventData>          ExperienceEventData;                               // 0xA8(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	bool                                         bAllowPlayerPlots;                                 // 0xB8(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2809[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSoftObjectPtr<class UTeleportTravelConfigAsset> DefaultDestination;                                // 0xC0(0x30)(Edit, BlueprintVisible, BlueprintReadOnly, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UTeleportTravelConfigAsset> InitialPrivateSpace;                               // 0xF0(0x30)(Edit, BlueprintVisible, BlueprintReadOnly, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                PlayerStartTag;                                    // 0x120(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        DevelopmentVersion;                                // 0x130(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_280A[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("ExperiencePackageConfig");
		return Clss;
	}

};

// 0x10 (0x48 - 0x38)
// Class Palia.VAL_ExpPkgSelectionSettings
class UVAL_ExpPkgSelectionSettings : public UDeveloperSettings
{
public:
	class FString                                SelectedExperiencePackage;                         // 0x38(0x10)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("VAL_ExpPkgSelectionSettings");
		return Clss;
	}

};

// 0x58 (0x590 - 0x538)
// Class Palia.FenceComponent
class UFenceComponent : public UPrimitiveComponent
{
public:
	struct FFenceConfig                          FenceConfig;                                       // 0x538(0x20)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FFenceState                           FenceState;                                        // 0x558(0x18)(Edit, Net, DisableEditOnInstance, RepNotify, NoDestructor, Protected, NativeAccessSpecifierProtected)
	class UFenceMeshComponent*                   StartPostMeshComp;                                 // 0x570(0x8)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UFenceMeshComponent*                   EndPostMeshComp;                                   // 0x578(0x8)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UFenceMeshComponent*                   SpanMeshComp;                                      // 0x580(0x8)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_281F[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FenceComponent");
		return Clss;
	}

	int32 TrySetFenceLength(int32 InDesiredFenceLength, bool InbHasStartPost, bool InbHasEndPost);
	void OnRep_FenceState();
	bool HasStartPost();
	bool HasEndPost();
	class UFenceMeshComponent* GetStartPostMeshComponent();
	class UFenceMeshComponent* GetSpanMeshComponent();
	int32 GetMinFenceLength(bool InbWithEndPost);
	int32 GetMaxFenceLength(bool InbWithEndPost);
	int32 GetFenceLength();
	class UFenceMeshComponent* GetEndPostMeshComponent();
};

// 0x0 (0x600 - 0x600)
// Class Palia.FenceMeshComponent
class UFenceMeshComponent : public UStaticMeshComponent
{
public:
	enum class EFenceMeshType                    Type;                                              // 0x5F8(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2820[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FenceMeshComponent");
		return Clss;
	}

};

// 0x0 (0x290 - 0x290)
// Class Palia.FishingCastIndicatorActor
class AFishingCastIndicatorActor : public AActor
{
public:

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FishingCastIndicatorActor");
		return Clss;
	}

	void OnCastIndicatorChanged(const struct FVector& InEndpoint, enum class EFishingCastIndicatorStatus InStatus);
};

// 0x8A0 (0x940 - 0xA0)
// Class Palia.FishingComponent
class UFishingComponent : public UActorComponent
{
public:
	uint8                                        Pad_2873[0x18];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	FMulticastInlineDelegateProperty_            OnFishingRodMovement;                              // 0xB8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                        Pad_2874[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FFishingMiniGameViewState             ViewStateOnServer;                                 // 0xD0(0x130)(Edit, BlueprintVisible, BlueprintReadOnly, Net, EditConst, RepNotify, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnSelectedBait;                                    // 0x200(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnSelectedNoBait;                                  // 0x210(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnFishingStateChanged;                             // 0x220(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnReceivedFishingEncouragement;                    // 0x230(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnFishCaught;                                      // 0x240(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	class FName                                  SelectedFishConfigToCatchOnServer;                 // 0x250(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2875[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	struct FTimerHandle                          CastingTimerHandle;                                // 0x268(0x8)(NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class AActor*                                CameraViewTarget;                                  // 0x270(0x8)(ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class AActor*                                CastingProjectile;                                 // 0x278(0x8)(ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2876[0x5A0];                                   // Fixing Size After Last Property  [ Dumper-7 ]
	class AValeriaCharacter*                     CachedCharOwner;                                   // 0x820(0x8)(ZeroConstructor, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class AValeriaPlayerController*              CachedPlayerController;                            // 0x828(0x8)(ZeroConstructor, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UCameraTargetComponent*                CachedCameraTarget;                                // 0x830(0x8)(ExportObject, ZeroConstructor, Transient, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UCameraComponent*                      CachedCameraComponent;                             // 0x838(0x8)(ExportObject, ZeroConstructor, Transient, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UFishingViewComponent*                 CachedFishingView;                                 // 0x840(0x8)(ExportObject, ZeroConstructor, Transient, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bIsPaused;                                         // 0x848(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bWasPaused;                                        // 0x849(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2877[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        TimeLastEncouragedSomeone;                         // 0x84C(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FVector                               CastDestination;                                   // 0x850(0x18)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        CastTimeOfActualDeploy;                            // 0x868(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bCastHasBeenDeployed;                              // 0x86C(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2878[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TWeakObjectPtr<class UValeriaWaterBodyComponent> PreviousSourceWaterBody;                           // 0x870(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSet<int32>                                  ItemIdsOfFishesCaught;                             // 0x878(0x50)(NativeAccessSpecifierPrivate)
	struct FFishingPersistBlock                  FishingPersistBlock;                               // 0x8C8(0x58)(NativeAccessSpecifierPrivate)
	int64                                        TimeLastFishingSessionStartedAt;                   // 0x920(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FName                                  OverrideNextFishToCatch;                           // 0x928(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2879[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FishingComponent");
		return Clss;
	}

	bool ShouldCurrentFishStruggle();
	void SetHookedFishVisibility(bool InIsVisible);
	void SetFishingState(enum class EFishingState_OLD InNewState);
	void RpcServer_UpdateViewStateOnServer(const struct FFishingMiniGameViewState& InViewState);
	void RpcServer_SelectLoot(class FName InWaterType, TSoftObjectPtr<class UVAL_ItemTypeDefinitionAsset>& InBaitItemType);
	void RpcServer_NotifyServerBaitSelected(class UVAL_ItemTypeDefinitionAsset* InBaitItemType);
	void RpcServer_FishStartedBiting(class UValeriaWaterBodyComponent* InWaterBody);
	void RpcServer_EndFishing(struct FFishingEndContext& InContext);
	void RpcServer_CheatOverrideNextFishToCatch(class FName InFishToCatch);
	void RpcServer_CheatApplyCoopFishingBuff();
	void RpcClient_StartFishingAt(class FName& InFishConfigToCatch);
	void RpcClient_ReceiveEncouragement(class AValeriaCharacter* InFromVc);
	void RpcClient_InitializeSelectedBait(class UVAL_ItemTypeDefinitionAsset* InBaitItemType);
	void RpcClient_FishCaught(const struct FFishCaughtResult& InResult);
	void RetryBaitSelectFromPersistBlock(class UInventoryComponent* InInventory);
	struct FServerUseEventResult OnServerInteract(class UInteractableComponent* InInteractable, class AValeriaCharacter* InCharacter, const struct FInteractEventParams& InEventParams);
	void OnReplicated_ViewStateOnServer();
	struct FSelfUseEventResult OnClientUseEquippedInward(class AValeriaPlayerController* InPlayer, const struct FUseEventParams& InParams);
	struct FUseEventResult OnClientInteract(class UInteractableComponent* InInteractable, class AValeriaPlayerController* InCharacter, const struct FInteractEventParams& InEventParams);
	void OnBobbleHitSomething(class UPrimitiveComponent* InHitComp, class AActor* InOtherActor, class UPrimitiveComponent* InOtherComp, const struct FVector& InNormalImpulse, struct FHitResult& InHit);
	void OnBobbleDestroyed(class AActor* InDestroyedActor);
	void MoveRodPosition(float InDelta);
	bool IsInteractable(class AValeriaCharacter* InCharacter, const struct FInteractEventParams& InEventParams);
	int32 InteractPriority();
	void HandleEquipmentChanged(class UEquipmentComponent* InEquipment, const struct FEquipmentItem& InItem);
	bool GetText(class AValeriaCharacter* InCharacter, enum class EInteractEventIndex InEventIndex, struct FGetTextParams* InParams);
	struct FValeriaItem GetSelectedBait();
	enum class EFishingState_OLD GetFishingState();
	void GetDebugInfo(enum class EFishingState_NEW* InCurrentFishingState, enum class EFFishingLevelSegmentActionType* InFishActionType, int32* InCurrentSegmentNextIndex, int32* InTotalSegments, float* InCurrentActionLerpPctg, float* InTimePassed, float* InActionStated, float* InActionTargetLocation, float* InCurrentBobberSpeed, float* InCurrentBobberPosition, float* InTotalTaskTime, float* InRawTaskTimeWithoutPause, float* InTimeInCurrentTask, class FString* InFishName, float* InSafeZonePosition);
	enum class EFishingSafeTier GetCurrentSafetyTier();
	class AActor* GetCastingBobber();
	class UFishingViewComponent* GetCachedFishingViewComponent();
	class FString GetAchievementNameForFish(class UVAL_ItemTypeDefinitionAsset* InFishItemType);
	void ExitFishingCSMState();
	bool CanStartFishing(struct FNotification* InErrorNotification);
	void AnimDoneFishing();
};

// 0x2B0 (0x2E0 - 0x30)
// Class Palia.FishingGlobalConfig
class UFishingGlobalConfig : public UDataAsset
{
public:
	struct FFishingSubclasses                    Subclasses;                                        // 0x30(0x58)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	class UVAL_ItemTypeDefinitionAsset*          NoBaitSelectedItemType;                            // 0x88(0x8)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        DurabilityLossStart;                               // 0x90(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        DurabilityLossMidway;                              // 0x94(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        DurabilityLossEnd;                                 // 0x98(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_287A[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FVector2D                             NoFishWaitTimeMinMax;                              // 0xA0(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FFishingCameraSettings                CameraSettings;                                    // 0xB0(0x38)(Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
	struct FFishingCastingSettings               CastSettings;                                      // 0xE8(0x50)(Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
	struct FFishingGoalSettings                  GoalSettings;                                      // 0x138(0x30)(Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
	struct FFishingNotifications                 Notifications;                                     // 0x168(0x90)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FFishingSoundSettings                 SoundSettings;                                     // 0x1F8(0x8)(Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
	float                                        FishingWorldScale;                                 // 0x200(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        FishDepth;                                         // 0x204(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        FishOffset;                                        // 0x208(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ViewStateUpdatesPerSecond;                         // 0x20C(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               RodOffset;                                         // 0x210(0x18)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        OnBeginReelingInitialCooldown;                     // 0x228(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        TelegraphMaxDistance;                              // 0x22C(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        TelegraphMaxSpeed;                                 // 0x230(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        MinTelegraphs;                                     // 0x234(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        MaxTelegraphs;                                     // 0x238(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        TelegraphMinPctg;                                  // 0x23C(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        TelegraphMaxPctg;                                  // 0x240(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MinTelegraphCooldown;                              // 0x244(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MaxTelegraphCooldown;                              // 0x248(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        TelegraphLerpExp;                                  // 0x24C(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  CelebrationSequenceSocketName;                     // 0x250(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        PoofTimeFromWaterToHandOnCelebration;              // 0x258(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        TotalCelebrationDuration;                          // 0x25C(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         CelebrationOnFirstCatchOnlyOverride;               // 0x260(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_287C[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        FishingFinishReelInSpeed;                          // 0x264(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AfterFinishDestroyBobberWhenAtDistanceToRod;       // 0x268(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_287F[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FFishingEncouragementSettings         Encouragement;                                     // 0x270(0x20)(Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
	struct FEndFishingSettings                   EndSettings;                                       // 0x290(0x10)(Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
	struct FFishingXpSettings                    XpSettings;                                        // 0x2A0(0xC)(Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                        Pad_2883[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FFishingCoopBuffSettings              CoopBuffSettings;                                  // 0x2B0(0x18)(Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
	class FText                                  GenericFishingErrorText;                           // 0x2C8(0x18)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FishingGlobalConfig");
		return Clss;
	}

};

// 0xC0 (0x630 - 0x570)
// Class Palia.FishingLineComponent
class UFishingLineComponent : public UMeshComponent
{
public:
	bool                                         bAttachStart;                                      // 0x570(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bAttachEnd;                                        // 0x571(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2893[0x6];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FComponentReference                   AttachEndTo;                                       // 0x578(0x28)(Edit, NativeAccessSpecifierPublic)
	class FName                                  AttachEndToSocketName;                             // 0x5A0(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               EndLocation;                                       // 0x5A8(0x18)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MinFishingLineLengthToSnap;                        // 0x5C0(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        TensionFactor;                                     // 0x5C4(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        NumSegments;                                       // 0x5C8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SubstepTime;                                       // 0x5CC(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        SolverIterations;                                  // 0x5D0(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bEnableStiffness;                                  // 0x5D4(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bUseSubstepping;                                   // 0x5D5(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bSkipFishingLineUpdateWhenNotVisible;              // 0x5D6(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bSkipFishingLineUpdateWhenNotOwnerRecentlyRendered; // 0x5D7(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bEnableCollision;                                  // 0x5D8(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2897[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        CollisionFriction;                                 // 0x5DC(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               FishingLineForce;                                  // 0x5E0(0x18)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        FishingLineGravityScale;                           // 0x5F8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        FishingLineWidth;                                  // 0x5FC(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        NumSides;                                          // 0x600(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        TileMaterial;                                      // 0x604(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_289A[0x18];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        FishingLineLength;                                 // 0x620(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_289B[0xC];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FishingLineComponent");
		return Clss;
	}

	void SetAttachEndToComponent(class USceneComponent* InComponent, class FName InSocketName);
	void SetAttachEndTo(class AActor* InActor, class FName InComponentProperty, class FName InSocketName);
	void ResetSimulation();
	void GetFishingLineParticleLocations(TArray<struct FVector>* InLocations);
	class USceneComponent* GetAttachedComponent();
	class AActor* GetAttachedActor();
};

// 0x280 (0x320 - 0xA0)
// Class Palia.FishingViewComponent
class UFishingViewComponent : public UActorComponent
{
public:
	FMulticastInlineDelegateProperty_            OnFishingBobberWasCreated;                         // 0xA0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnFishIsBitingChanged;                             // 0xB0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnFishJumped;                                      // 0xC0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnNibbled;                                         // 0xD0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnViewWasUpdated;                                  // 0xE0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	class AActor*                                Bobber;                                            // 0xF0(0x8)(ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class AActor*                                Rod;                                               // 0xF8(0x8)(BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class AActor*                                Fish;                                              // 0x100(0x8)(ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class AActor*                                Endpoint;                                          // 0x108(0x8)(ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class AFishingCastIndicatorActor*            CastIndicator;                                     // 0x110(0x8)(ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_28B7[0x68];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FFishingNibbleActorData>       NibbleFish;                                        // 0x180(0x10)(ZeroConstructor, NativeAccessSpecifierPrivate)
	uint8                                        Pad_28B8[0x18];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UFishViewComponent*                    FishView;                                          // 0x1A8(0x8)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FName                                  CelebrationFishHandSocketName;                     // 0x1B0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_28B9[0x160];                                   // Fixing Size After Last Property  [ Dumper-7 ]
	class US6Core_AssetLoader*                   FishingViewAssetLoader;                            // 0x318(0x8)(ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FishingViewComponent");
		return Clss;
	}

	void RpcServer_BobberHitSomething(enum class EFishingBobberHitSomethingResult InResult, class AActor* InOtherActor, class UPrimitiveComponent* InOtherComp, const struct FVector& InImpactPoint, class UPhysicalMaterial* InPhysMat);
	void RpcNetMulticast_BobberHitSomething(enum class EFishingBobberHitSomethingResult InResult, class AActor* InOtherActor, class UPrimitiveComponent* InOtherComp, const struct FVector& InImpactPoint, class UPhysicalMaterial* InPhysMat);
	void OnViewWasUpdatedEvent(const struct FFishingMiniGameViewState& InViewState, class UFishingComponent* InSource);
	void OnRodBeforeDestroyedEvent(class AActor* InRod);
	void OnMiniGameStateChanged(enum class EFishingMiniGameState InPreviousState, enum class EFishingMiniGameState InNewState, class UFishingComponent* InSource);
	void OnFishingBobbleBeforeDestroyed(class AActor* Inbobble);
	void OnCastingBobbleWasCreated(class AActor* Inbobble);
	void OnCastingBobbleBeforeDestroyed(class AActor* Inbobble);
	void OnBobberHitSomething(enum class EFishingBobberHitSomethingResult InResult, class AActor* InOtherActor, class UPrimitiveComponent* InOtherComp, const struct FVector& InImpactPoint, class UPhysicalMaterial* InPhysMat);
	bool IsInSafeZone();
	struct FFishingMiniGameViewState GetViewState();
	float GetSafeZoneLength();
	struct FVector GetSafeZoneCenterAtOffset(struct FVector& InOffset);
	struct FVector GetSafeZoneCenter();
	struct FVector GetLineLocationRod();
	struct FVector GetLineLocationBobber();
	class AActor* GetActorRod();
	class AActor* GetActorFish();
	class AActor* GetActorBobber();
};

// 0x18 (0xB8 - 0xA0)
// Class Palia.FishViewComponent
class UFishViewComponent : public UActorComponent
{
public:
	float                                        Speed;                                             // 0xA0(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MinSpeed;                                          // 0xA4(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SpeedAtAnimPlaybackOne;                            // 0xA8(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        StateLerp;                                         // 0xAC(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        TurnBlend;                                         // 0xB0(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         TransitionDone;                                    // 0xB4(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EAnimStateFish                    AnimState;                                         // 0xB5(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	enum class EAnimStateFish                    AnimStatePrev;                                     // 0xB6(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_28C1[0x1];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FishViewComponent");
		return Clss;
	}

	enum class EAnimStateFish GetStatePrev();
	enum class EAnimStateFish GetState();
};

// 0x80 (0x5E0 - 0x560)
// Class Palia.FoliageRustleAudioComponent
class UFoliageRustleAudioComponent : public UCapsuleComponent
{
public:
	class UAudioFoliageRustleDataAsset*          FoliageRustleData;                                 // 0x560(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  RustleOverlapTag;                                  // 0x568(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        StopTransitionDurationMs;                          // 0x570(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EAkCurveInterpolation             StopFadeCurve;                                     // 0x574(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_28CB[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UAkRtpc*                               IsLocalMixRTPC;                                    // 0x578(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAkRtpc*                               ActorSpeedRTPC;                                    // 0x580(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        ActorSpeedRTPCInterpolationMs;                     // 0x588(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_28CE[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TMap<class UAkAudioEvent*, struct FFoliageRustleState> ActiveRustles;                                     // 0x590(0x50)(ContainsInstancedReference, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FoliageRustleAudioComponent");
		return Clss;
	}

	void HandleEndOverlap(class UPrimitiveComponent* InOverlappedComponent, class AActor* InOtherActor, class UPrimitiveComponent* InOtherComp, int32 InOtherBodyIndex);
	void HandleBeginOverlap(class UPrimitiveComponent* InOverlappedComponent, class AActor* InOtherActor, class UPrimitiveComponent* InOtherComp, int32 InOtherBodyIndex, bool InbFromSweep, struct FHitResult& InSweepResult);
};

// 0x1D8 (0x278 - 0xA0)
// Class Palia.FollowCameraManagerComponent
class UFollowCameraManagerComponent : public UActorComponent
{
public:
	class UDataTable*                            Settings;                                          // 0xA0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USpringArmComponent*                   CameraBoom;                                        // 0xA8(0x8)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UCameraComponent*                      FollowCamera;                                      // 0xB0(0x8)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FFollowCameraSettings                 PreviousSetting;                                   // 0xB8(0xB0)(NativeAccessSpecifierPrivate)
	struct FFollowCameraSettings                 CurrentSetting;                                    // 0x168(0xB0)(NativeAccessSpecifierPrivate)
	uint8                                        Pad_28DD[0x60];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FollowCameraManagerComponent");
		return Clss;
	}

	void PlayDollyZoom();
	bool IsSettingActive(class FName& InSettingsName);
	void DeactivateSetting(class FName InSettingsName, class UObject* InInstigator, bool InForce);
	void ApplyGraphicSettings(struct FValeriaGraphicSettings& InGraphicSettings);
	void ActivateSetting(class FName InSettingsName, class UObject* InInstigator);
};

// 0x0 (0x28 - 0x28)
// Class Palia.GameplayBlueprintLibrary
class UGameplayBlueprintLibrary : public UBlueprintFunctionLibrary
{
public:

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("GameplayBlueprintLibrary");
		return Clss;
	}

	bool NotEqual_ObjectObject(struct FDebugServerActorMapping& InA, struct FDebugServerActorMapping& InB);
	bool EqualEqual_ObjectObject(struct FDebugServerActorMapping& InA, struct FDebugServerActorMapping& InB);
};

// 0x0 (0x30 - 0x30)
// Class Palia.VAL_GameplayConditionDef
class UVAL_GameplayConditionDef : public UDataAsset
{
public:

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("VAL_GameplayConditionDef");
		return Clss;
	}

	bool GetAutoDescription(class FText* InOutDescription, class UObject* InContext);
};

// 0x10 (0x40 - 0x30)
// Class Palia.VAL_QuantityCondition
class UVAL_QuantityCondition : public UVAL_GameplayConditionDef
{
public:
	int32                                        AmountRequired;                                    // 0x30(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bHasUpperLimit;                                    // 0x34(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_28FC[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        AmountUpperLimit;                                  // 0x38(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_28FD[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("VAL_QuantityCondition");
		return Clss;
	}

};

// 0x8 (0x48 - 0x40)
// Class Palia.VAL_DeductibleCondition
class UVAL_DeductibleCondition : public UVAL_QuantityCondition
{
public:
	bool                                         bDeductOnComplete;                                 // 0x40(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_28FF[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("VAL_DeductibleCondition");
		return Clss;
	}

};

// 0x10 (0x40 - 0x30)
// Class Palia.VAL_CompositeCondition
class UVAL_CompositeCondition : public UVAL_GameplayConditionDef
{
public:
	TArray<class UVAL_GameplayConditionDef*>     SubConditions;                                     // 0x30(0x10)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPublic)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("VAL_CompositeCondition");
		return Clss;
	}

};

// 0x0 (0x40 - 0x40)
// Class Palia.VAL_CompositeCondition_And
class UVAL_CompositeCondition_And : public UVAL_CompositeCondition
{
public:

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("VAL_CompositeCondition_And");
		return Clss;
	}

};

// 0x0 (0x40 - 0x40)
// Class Palia.VAL_CompositeCondition_Or
class UVAL_CompositeCondition_Or : public UVAL_CompositeCondition
{
public:

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("VAL_CompositeCondition_Or");
		return Clss;
	}

};

// 0x38 (0x80 - 0x48)
// Class Palia.VAL_HasItemTypeCondition
class UVAL_HasItemTypeCondition : public UVAL_DeductibleCondition
{
public:
	TSoftObjectPtr<class UVAL_ItemTypeDefinitionAsset> ItemType;                                          // 0x48(0x30)(Edit, BlueprintVisible, BlueprintReadOnly, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bAlsoCheckStorage;                                 // 0x78(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bAlsoCheckLockbox;                                 // 0x79(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2902[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        MinimumQualityStars;                               // 0x7C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("VAL_HasItemTypeCondition");
		return Clss;
	}

};

// 0x18 (0x60 - 0x48)
// Class Palia.VAL_HasItemTagCondition
class UVAL_HasItemTagCondition : public UVAL_DeductibleCondition
{
public:
	struct FGameplayTag                          RequiredTag;                                       // 0x48(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bAlsoCheckStorage;                                 // 0x50(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bAlsoCheckLockbox;                                 // 0x51(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2903[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        MinimumQualityStars;                               // 0x54(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EItemRarity                       MinimumRarity;                                     // 0x58(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2904[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("VAL_HasItemTagCondition");
		return Clss;
	}

};

// 0x8 (0x48 - 0x40)
// Class Palia.VAL_HasPlayerTagCondition
class UVAL_HasPlayerTagCondition : public UVAL_QuantityCondition
{
public:
	struct FGameplayTag                          TagToCheck;                                        // 0x40(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("VAL_HasPlayerTagCondition");
		return Clss;
	}

};

// 0x0 (0x40 - 0x40)
// Class Palia.VAL_PlotValueCondition
class UVAL_PlotValueCondition : public UVAL_QuantityCondition
{
public:

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("VAL_PlotValueCondition");
		return Clss;
	}

};

// 0x0 (0x40 - 0x40)
// Class Palia.VAL_PlotVisitorCountCondition
class UVAL_PlotVisitorCountCondition : public UVAL_QuantityCondition
{
public:

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("VAL_PlotVisitorCountCondition");
		return Clss;
	}

};

// 0x8 (0x48 - 0x40)
// Class Palia.VAL_SkillLevelCondition
class UVAL_SkillLevelCondition : public UVAL_QuantityCondition
{
public:
	enum class ESkillType                        Skill;                                             // 0x40(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2908[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("VAL_SkillLevelCondition");
		return Clss;
	}

};

// 0x10 (0x40 - 0x30)
// Class Palia.VAL_HasMetVillagerCondition
class UVAL_HasMetVillagerCondition : public UVAL_GameplayConditionDef
{
public:
	struct FDataTableRowHandle                   Villager;                                          // 0x30(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, NativeAccessSpecifierPublic)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("VAL_HasMetVillagerCondition");
		return Clss;
	}

};

// 0x18 (0x48 - 0x30)
// Class Palia.VAL_HasMailCondition
class UVAL_HasMailCondition : public UVAL_GameplayConditionDef
{
public:
	struct FDataTableRowHandle                   MailMessage;                                       // 0x30(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, NativeAccessSpecifierPublic)
	bool                                         bCheckUnread;                                      // 0x40(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bCheckRead;                                        // 0x41(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bCheckNotSent;                                     // 0x42(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_290B[0x5];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("VAL_HasMailCondition");
		return Clss;
	}

};

// 0x30 (0x60 - 0x30)
// Class Palia.VAL_HasSeenDialogueCondition
class UVAL_HasSeenDialogueCondition : public UVAL_GameplayConditionDef
{
public:
	TSoftObjectPtr<class UVAL_DialogueAsset>     DialogueAsset;                                     // 0x30(0x30)(Edit, BlueprintVisible, BlueprintReadOnly, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("VAL_HasSeenDialogueCondition");
		return Clss;
	}

};

// 0x8 (0x50 - 0x48)
// Class Palia.VAL_HasVitalCondition
class UVAL_HasVitalCondition : public UVAL_DeductibleCondition
{
public:
	enum class EVitalType                        VitalType;                                         // 0x48(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_290D[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("VAL_HasVitalCondition");
		return Clss;
	}

};

// 0x10 (0x40 - 0x30)
// Class Palia.VAL_KnowsRecipeCondition
class UVAL_KnowsRecipeCondition : public UVAL_GameplayConditionDef
{
public:
	struct FDataTableRowHandle                   Recipe;                                            // 0x30(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, NativeAccessSpecifierPublic)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("VAL_KnowsRecipeCondition");
		return Clss;
	}

};

// 0x18 (0x48 - 0x30)
// Class Palia.VAL_KnowsGiftPrefCondition
class UVAL_KnowsGiftPrefCondition : public UVAL_GameplayConditionDef
{
public:
	struct FDataTableRowHandle                   Villager;                                          // 0x30(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, NativeAccessSpecifierPublic)
	enum class EVillagerGiftRewardLevel          RewardLevel;                                       // 0x40(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2910[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("VAL_KnowsGiftPrefCondition");
		return Clss;
	}

};

// 0x38 (0x68 - 0x30)
// Class Palia.VAL_HasCompletedQuestCondition
class UVAL_HasCompletedQuestCondition : public UVAL_GameplayConditionDef
{
public:
	TSoftObjectPtr<class UVAL_QuestDef>          Quest;                                             // 0x30(0x30)(Edit, BlueprintVisible, BlueprintReadOnly, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EQuestProgressConditionStatus     Status;                                            // 0x60(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2911[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        Step;                                              // 0x64(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("VAL_HasCompletedQuestCondition");
		return Clss;
	}

};

// 0x38 (0x68 - 0x30)
// Class Palia.VAL_IsLimitedEventActiveCondition
class UVAL_IsLimitedEventActiveCondition : public UVAL_GameplayConditionDef
{
public:
	TSoftObjectPtr<class ULimitedEventDataAsset> Event;                                             // 0x30(0x30)(Edit, BlueprintVisible, BlueprintReadOnly, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIsInactive;                                       // 0x60(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2914[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("VAL_IsLimitedEventActiveCondition");
		return Clss;
	}

};

// 0x10 (0x50 - 0x40)
// Class Palia.VAL_EventCondition
class UVAL_EventCondition : public UVAL_QuantityCondition
{
public:
	struct FVAL_GameplayEventFilter              EventFilter;                                       // 0x40(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, NativeAccessSpecifierPublic)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("VAL_EventCondition");
		return Clss;
	}

};

// 0x18 (0x40 - 0x28)
// Class Palia.VAL_GameplayEventConditionState
class UVAL_GameplayEventConditionState : public UObject
{
public:
	int32                                        Count;                                             // 0x28(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2916[0x14];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("VAL_GameplayEventConditionState");
		return Clss;
	}

};

// 0x38 (0x60 - 0x28)
// Class Palia.VAL_GameplayConditionContext
class UVAL_GameplayConditionContext : public UObject
{
public:
	class AValeriaCharacter*                     ValeriaCharacter;                                  // 0x28(0x8)(ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bConditionMet;                                     // 0x30(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_291D[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        Count;                                             // 0x34(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        GoalAmount;                                        // 0x38(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_291F[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UVAL_GameplayEventConditionState*      EventState;                                        // 0x40(0x8)(ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class UVAL_GameplayConditionContext*> SubContexts;                                       // 0x48(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	class UVAL_GameplayConditionDef*             Condition;                                         // 0x58(0x8)(ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("VAL_GameplayConditionContext");
		return Clss;
	}

};

// 0x140 (0x168 - 0x28)
// Class Palia.VAL_GameplayEvent
class UVAL_GameplayEvent : public UObject
{
public:
	enum class EVAL_GameplayEventSourceTargetType SourceType;                                        // 0x28(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2921[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        SourcePlayerRelationship;                          // 0x2C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTagQuery                     SourceTagRequirements;                             // 0x30(0x48)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	enum class EVAL_GameplayEventSourceTargetType TargetType;                                        // 0x78(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2923[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        TargetPlayerRelationship;                          // 0x7C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTagQuery                     TargetTagRequirements;                             // 0x80(0x48)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	int32                                        Count;                                             // 0xC8(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bHasSource;                                        // 0xCC(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2926[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class AValeriaCharacter*                     SourceCharacter;                                   // 0xD0(0x8)(ZeroConstructor, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AValeriaPlayerController*              SourcePlayerController;                            // 0xD8(0x8)(ZeroConstructor, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AValeriaVillagerCharacter*             SourceVillagerCharacter;                           // 0xE0(0x8)(ZeroConstructor, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AValeriaVillagerController*            SourceVillagerController;                          // 0xE8(0x8)(ZeroConstructor, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class ACreatureCharacter*                    SourceCreatureCharacter;                           // 0xF0(0x8)(ZeroConstructor, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTagContainer                 SourceTags;                                        // 0xF8(0x20)(NativeAccessSpecifierPublic)
	bool                                         bHasTarget;                                        // 0x118(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_292E[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class AValeriaCharacter*                     TargetCharacter;                                   // 0x120(0x8)(ZeroConstructor, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AValeriaPlayerController*              TargetPlayerController;                            // 0x128(0x8)(ZeroConstructor, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AValeriaVillagerCharacter*             TargetVillagerCharacter;                           // 0x130(0x8)(ZeroConstructor, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AValeriaVillagerController*            TargetVillagerController;                          // 0x138(0x8)(ZeroConstructor, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class ACreatureCharacter*                    TargetCreatureCharacter;                           // 0x140(0x8)(ZeroConstructor, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTagContainer                 TargetTags;                                        // 0x148(0x20)(NativeAccessSpecifierPublic)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("VAL_GameplayEvent");
		return Clss;
	}

};

// 0x50 (0x80 - 0x30)
// Class Palia.VAL_GameplayEventsSubsystem
class UVAL_GameplayEventsSubsystem : public UGameInstanceSubsystem
{
public:
	TMap<class UClass*, struct FVAL_GameplayEventListenerArray> Listeners;                                         // 0x30(0x50)(NativeAccessSpecifierPrivate)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("VAL_GameplayEventsSubsystem");
		return Clss;
	}

};

// 0x10 (0x178 - 0x168)
// Class Palia.VAL_GameplayEvent_KillCreature
class UVAL_GameplayEvent_KillCreature : public UVAL_GameplayEvent
{
public:
	struct FDataTableRowHandle                   CreatureType;                                      // 0x168(0x10)(Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("VAL_GameplayEvent_KillCreature");
		return Clss;
	}

};

// 0x20 (0x188 - 0x168)
// Class Palia.VAL_GameplayEvent_CatchFish
class UVAL_GameplayEvent_CatchFish : public UVAL_GameplayEvent
{
public:
	struct FDataTableRowHandle                   FishToCatch;                                       // 0x168(0x10)(Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
	bool                                         bMultiplayer;                                      // 0x178(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2933[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FName                                  FishName;                                          // 0x17C(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2934[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("VAL_GameplayEvent_CatchFish");
		return Clss;
	}

};

// 0x0 (0x168 - 0x168)
// Class Palia.VAL_GameplayEvent_WaterPlant
class UVAL_GameplayEvent_WaterPlant : public UVAL_GameplayEvent
{
public:

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("VAL_GameplayEvent_WaterPlant");
		return Clss;
	}

};

// 0x0 (0x168 - 0x168)
// Class Palia.VAL_GameplayEvent_TillSoil
class UVAL_GameplayEvent_TillSoil : public UVAL_GameplayEvent
{
public:

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("VAL_GameplayEvent_TillSoil");
		return Clss;
	}

};

// 0x18 (0x180 - 0x168)
// Class Palia.VAL_GameplayEvent_DiscoverGiftPreference
class UVAL_GameplayEvent_DiscoverGiftPreference : public UVAL_GameplayEvent
{
public:
	struct FDataTableRowHandle                   Villager;                                          // 0x168(0x10)(Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
	enum class EVillagerGiftRewardLevel          RewardLevel;                                       // 0x178(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_293C[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        VillagerCoreId;                                    // 0x17C(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("VAL_GameplayEvent_DiscoverGiftPreference");
		return Clss;
	}

};

// 0x8 (0x170 - 0x168)
// Class Palia.VAL_GameplayEvent_CompleteBillboard
class UVAL_GameplayEvent_CompleteBillboard : public UVAL_GameplayEvent
{
public:
	int32                                        QuestSelectorId;                                   // 0x168(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_293D[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("VAL_GameplayEvent_CompleteBillboard");
		return Clss;
	}

};

// 0x18 (0x180 - 0x168)
// Class Palia.VAL_GameplayEvent_ViewMail
class UVAL_GameplayEvent_ViewMail : public UVAL_GameplayEvent
{
public:
	struct FDataTableRowHandle                   MailToView;                                        // 0x168(0x10)(Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
	int32                                        MailPersistId;                                     // 0x178(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_293E[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("VAL_GameplayEvent_ViewMail");
		return Clss;
	}

};

// 0x80 (0x1E8 - 0x168)
// Class Palia.VAL_GameplayEvent_ItemAbstract
class UVAL_GameplayEvent_ItemAbstract : public UVAL_GameplayEvent
{
public:
	TSoftObjectPtr<class UVAL_ItemTypeDefinitionAsset> Item;                                              // 0x168(0x30)(Edit, BlueprintVisible, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTagQuery                     TagQuery;                                          // 0x198(0x48)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	int32                                        QualityStars;                                      // 0x1E0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EItemRarity                       MinimumRarity;                                     // 0x1E4(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_293F[0x3];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("VAL_GameplayEvent_ItemAbstract");
		return Clss;
	}

};

// 0x8 (0x1F0 - 0x1E8)
// Class Palia.VAL_GameplayEvent_AcquireItem
class UVAL_GameplayEvent_AcquireItem : public UVAL_GameplayEvent_ItemAbstract
{
public:
	int32                                        AcquireMethodFilter;                               // 0x1E8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EVAL_GE_AcquireItem_Method        AcquireMethod;                                     // 0x1EC(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2941[0x3];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("VAL_GameplayEvent_AcquireItem");
		return Clss;
	}

};

// 0x8 (0x1F0 - 0x1E8)
// Class Palia.VAL_GameplayEvent_ReleaseItem
class UVAL_GameplayEvent_ReleaseItem : public UVAL_GameplayEvent_ItemAbstract
{
public:
	int32                                        ReleaseMethodFilter;                               // 0x1E8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EVAL_GE_ReleaseItem_Method        ReleaseMethod;                                     // 0x1EC(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2944[0x3];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("VAL_GameplayEvent_ReleaseItem");
		return Clss;
	}

};

// 0x20 (0x208 - 0x1E8)
// Class Palia.VAL_GameplayEvent_GiftItem
class UVAL_GameplayEvent_GiftItem : public UVAL_GameplayEvent_ItemAbstract
{
public:
	enum class EVillagerGiftRewardLevel          RewardLevel;                                       // 0x1E8(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bExactOnly;                                        // 0x1E9(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2946[0x6];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FDataTableRowHandle                   Villager;                                          // 0x1F0(0x10)(Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
	class FName                                  VillagerName;                                      // 0x200(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("VAL_GameplayEvent_GiftItem");
		return Clss;
	}

};

// 0x8 (0x170 - 0x168)
// Class Palia.VAL_GameplayEvent_VitalAbstract
class UVAL_GameplayEvent_VitalAbstract : public UVAL_GameplayEvent
{
public:
	enum class EVitalType                        VitalType;                                         // 0x168(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2948[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("VAL_GameplayEvent_VitalAbstract");
		return Clss;
	}

};

// 0x0 (0x170 - 0x170)
// Class Palia.VAL_GameplayEvent_AcquireVital
class UVAL_GameplayEvent_AcquireVital : public UVAL_GameplayEvent_VitalAbstract
{
public:

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("VAL_GameplayEvent_AcquireVital");
		return Clss;
	}

};

// 0x0 (0x170 - 0x170)
// Class Palia.VAL_GameplayEvent_SpendVital
class UVAL_GameplayEvent_SpendVital : public UVAL_GameplayEvent_VitalAbstract
{
public:

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("VAL_GameplayEvent_SpendVital");
		return Clss;
	}

};

// 0x30 (0x198 - 0x168)
// Class Palia.VAL_GameplayEvent_CurrencyAbstract
class UVAL_GameplayEvent_CurrencyAbstract : public UVAL_GameplayEvent
{
public:
	TSoftObjectPtr<class UCurrencyConfig>        CurrencyConfig;                                    // 0x168(0x30)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("VAL_GameplayEvent_CurrencyAbstract");
		return Clss;
	}

};

// 0x0 (0x198 - 0x198)
// Class Palia.VAL_GameplayEvent_AcquireCurrency
class UVAL_GameplayEvent_AcquireCurrency : public UVAL_GameplayEvent_CurrencyAbstract
{
public:

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("VAL_GameplayEvent_AcquireCurrency");
		return Clss;
	}

};

// 0x0 (0x198 - 0x198)
// Class Palia.VAL_GameplayEvent_SpendCurrency
class UVAL_GameplayEvent_SpendCurrency : public UVAL_GameplayEvent_CurrencyAbstract
{
public:

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("VAL_GameplayEvent_SpendCurrency");
		return Clss;
	}

};

// 0x0 (0x168 - 0x168)
// Class Palia.VAL_GameplayEvent_FulfillPlayerRequest
class UVAL_GameplayEvent_FulfillPlayerRequest : public UVAL_GameplayEvent
{
public:

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("VAL_GameplayEvent_FulfillPlayerRequest");
		return Clss;
	}

};

// 0x0 (0x168 - 0x168)
// Class Palia.VAL_GameplayEvent_ConfirmWardrobe
class UVAL_GameplayEvent_ConfirmWardrobe : public UVAL_GameplayEvent
{
public:

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("VAL_GameplayEvent_ConfirmWardrobe");
		return Clss;
	}

};

// 0x10 (0x178 - 0x168)
// Class Palia.VAL_GameplayEvent_EngageInteractable
class UVAL_GameplayEvent_EngageInteractable : public UVAL_GameplayEvent
{
public:
	TArray<class FName>                          TagListFilter;                                     // 0x168(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("VAL_GameplayEvent_EngageInteractable");
		return Clss;
	}

};

// 0x20 (0x188 - 0x168)
// Class Palia.VAL_GameplayEvent_TimerTrigger
class UVAL_GameplayEvent_TimerTrigger : public UVAL_GameplayEvent
{
public:
	enum class ETimerEventType                   TimerEventType;                                    // 0x168(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2952[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UVAL_TimerDefinition*                  TimerDefinition;                                   // 0x170(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int64                                        MsElapsed;                                         // 0x178(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int64                                        MsRemaining;                                       // 0x180(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("VAL_GameplayEvent_TimerTrigger");
		return Clss;
	}

};

// 0x28 (0x58 - 0x30)
// Class Palia.GameServerGlobalConfig
class UGameServerGlobalConfig : public UDataAsset
{
public:
	struct FCreatureOptimizations                CreatureOptimizations;                             // 0x30(0x8)(Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
	int32                                        SecondsBeforeServerConnectionError;                // 0x38(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2953[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FText                                  ServerConnectionLostErrorText;                     // 0x40(0x18)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("GameServerGlobalConfig");
		return Clss;
	}

};

// 0x180 (0x420 - 0x2A0)
// Class Palia.GardenComponent
class UGardenComponent : public USceneComponent
{
public:
	uint8                                        Pad_2974[0x18];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	FMulticastInlineDelegateProperty_            OnFertilizerAdded;                                 // 0x2B8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnHarvest;                                         // 0x2C8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnLootGathered;                                    // 0x2D8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnLootUncovered;                                   // 0x2E8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnSeeded;                                          // 0x2F8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnTilled;                                          // 0x308(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnTilledPartial;                                   // 0x318(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnWaterAdded;                                      // 0x328(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnWatered;                                         // 0x338(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnWeedRemoved;                                     // 0x348(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                        Pad_2978[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UGatherableComponent*                  CachedParentGatherable;                            // 0x360(0x8)(ExportObject, ZeroConstructor, Transient, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class AGardenTile>               GardenPlotBlueprint;                               // 0x368(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FDataTableRowHandle                   GardenConfig;                                      // 0x370(0x10)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, Protected, NativeAccessSpecifierProtected)
	TArray<class AGardenTile*>                   GardenTilesSpawned;                                // 0x380(0x10)(ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	TArray<struct FGardenPlot>                   Plots;                                             // 0x390(0x10)(Net, ZeroConstructor, RepNotify, Protected, NativeAccessSpecifierProtected)
	int32                                        RowSize;                                           // 0x3A0(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        ColSize;                                           // 0x3A4(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2979[0x15];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	int8                                         FreshSpawn;                                        // 0x3BD(0x1)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_297A[0x62];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("GardenComponent");
		return Clss;
	}

	void TriggerHarvest(class AValeriaCharacter* InVC, int32 InPlotIndex);
	struct FNotification ShouldBlockMovement(class AValeriaCharacter* InCharacter);
	struct FNotification ShouldBlockGathering(class AValeriaCharacter* InCharacter);
	void RpcClient_PlotMoved();
	void PrepareToBeGathered(class UGatherableComponent* InGatherableComponent, class AValeriaCharacter* InCharacter);
	void OnRep_Plots(const TArray<struct FGardenPlot>& InPreReplicatedPlots);
	void OnLevelChanged(class ULevelerComponent* InLeveler);
	void OnActorMoved(class UPersistComponent* InPersist);
	bool IsWatered(int32 InTileIndex);
	bool IsPlanted(int32 InTileIndex);
	bool IsNewlySpawned();
	bool HasOverlappingMultiTilePlants(class UVAL_ItemTypeDefinitionAsset** InOutBlockingPlantItemType);
	float GetWateredPercent(int32 InTileIndex);
	struct FVector GetTileWorldLocation(int32 InTileIndex);
	class UGardenManagementComponent* GetManagement();
	class AGardenTile* GetGardenTile(int32 InTileIndex);
	bool CanPickupPlot(class AValeriaCharacter* InCharacter);
};

// 0x568 (0x598 - 0x30)
// Class Palia.GardeningGlobalConfig
class UGardeningGlobalConfig : public UDataAsset
{
public:
	struct FGardeningCompanionConfig             CompanionConfig;                                   // 0x30(0x50)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FGardeningFertilizingGlobalConfig     FertilizerConfig;                                  // 0x80(0x38)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FGardeningHarvestConfig               HarvestConfig;                                     // 0xB8(0x38)(Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
	struct FGardeningSeedingGlobalConfig         SeedingConfig;                                     // 0xF0(0x60)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FGardeningTillingGlobalConfig         TillingConfig;                                     // 0x150(0x220)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FGardeningWateringConfig              WateringConfig;                                    // 0x370(0x10)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FGardeningWeedingGlobalConfig         WeedingConfig;                                     // 0x380(0x208)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FGameplayTag                          PlantGrowthPlayerAutoTagRoot;                      // 0x588(0x8)(Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGardeningDebugConfig                 DebugConfig;                                       // 0x590(0x8)(Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("GardeningGlobalConfig");
		return Clss;
	}

};

// 0x180 (0x220 - 0xA0)
// Class Palia.GardenManagementComponent
class UGardenManagementComponent : public UActorComponent
{
public:
	uint8                                        Pad_298A[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	FMulticastInlineDelegateProperty_            OnHarvestReady;                                    // 0xA8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnHasWaterable;                                    // 0xB8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                        Pad_298C[0x20];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        Persist_DebugDaysTimeWarped;                       // 0xE8(0x4)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_298E[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FPlantSerializer                      PlantSerializer;                                   // 0xF0(0x120)(Net, RepNotify, NativeAccessSpecifierPrivate)
	uint8                                        Pad_298F[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("GardenManagementComponent");
		return Clss;
	}

	void UpdateGardensBasedOnCurrentWeather();
	void OnRep_Plants();
};

// 0x148 (0x1E8 - 0xA0)
// Class Palia.GardenPlantingComponent
class UGardenPlantingComponent : public UActorComponent
{
public:
	uint8                                        Pad_29C8[0x58];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	FMulticastInlineDelegateProperty_            OnHasHarvestablePlant;                             // 0xF8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnHasUnwateredPlant;                               // 0x108(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnWeedRemovalStarted;                              // 0x118(0x10)(ZeroConstructor, InstancedReference, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnWeedRemovalEnded;                                // 0x128(0x10)(ZeroConstructor, InstancedReference, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnSeedPlantingStateChanged;                        // 0x138(0x10)(ZeroConstructor, InstancedReference, NativeAccessSpecifierPublic)
	TArray<class AGardenTile*>                   GardenTiles;                                       // 0x148(0x10)(ZeroConstructor, NativeAccessSpecifierPrivate)
	class AGardenTile*                           GardenTile;                                        // 0x158(0x8)(ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_29CF[0x20];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class AValeriaCharacter*                     CachedVC;                                          // 0x180(0x8)(ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class AGardenTile*                           LastPlotUnderCursor;                               // 0x188(0x8)(ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<class AGardenTile*>                   MultiTileAdjacentActors;                           // 0x190(0x10)(ZeroConstructor, NativeAccessSpecifierPrivate)
	uint8                                        Pad_29D3[0x48];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("GardenPlantingComponent");
		return Clss;
	}

	void UseWaterFromCan(struct FBagSlotLocation& InInventoryLocation, int32 InAmount);
	void UnregisterForOnHasUnwateredPlant();
	void UnregisterForOnHasHarvestablePlant();
	void Server_RefillWateringCan(struct FBagSlotLocation& InCanLocation);
	void RpcServerCheat_PlantAllSeeds();
	void RpcServerCheat_GiveOwnerAllSeeds();
	void RpcServer_UseWaterFromCan(struct FBagSlotLocation& InCanLocation, int32 InAmount);
	void RpcServer_SetClientTargetSpot(const struct FVector& InTargetLocation);
	void RpcServer_ClearClientTargetSpot();
	void RpcClient_ChangeSeedPlantingState(bool InbIsSeedPlantingActive);
	void RegisterForOnHasUnwateredPlant();
	void RegisterForOnHasHarvestablePlant();
	void OnTeleported(class AValeriaPlayerController* InVpc);
	void OnStateChanged(class UCharacterStateMachineComponent* InCsm, const struct FCharacterStateChangeParams& InParams);
	void OnHasWaterable(class AGardenTile* InPGardenTile);
	void OnHarvestReady(class AGardenTile* InPGardenTile);
	struct FSelfUseEventResult OnClientUseEquippedOutward(class AValeriaPlayerController* InPlayer, const struct FUseEventParams& InParams);
	struct FSelfUseEventResult OnClientUseEquippedInward(class AValeriaPlayerController* InPlayer, const struct FUseEventParams& InParams);
	bool HasWaterInCan(struct FValeriaItem& InItem, TSoftObjectPtr<class UVAL_ItemTypeDefinitionAsset>& InItemType, int32 InAmountToUse);
	bool GetDesiredCharacterYaw(float* InOutYaw);
	void Client_StartWeedRemoval();
	void Client_EndWeedRemoval();
	void Client_ChangeSeedPlantingState(bool InbIsSeedPlantingActive);
};

// 0x270 (0x500 - 0x290)
// Class Palia.GardenTile
class AGardenTile : public AActor
{
public:
	uint8                                        Pad_2A2E[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	FMulticastInlineDelegateProperty_            OnWaterChanged;                                    // 0x298(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnFullyWatered;                                    // 0x2A8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnHarvested;                                       // 0x2B8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            PlantingPreviewDelegate;                           // 0x2C8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            StateChanged;                                      // 0x2D8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	class USceneComponent*                       Root;                                              // 0x2E8(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UStaticMeshComponent*                  PlotMeshUnplanted;                                 // 0x2F0(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UStaticMeshComponent*                  PlantMesh;                                         // 0x2F8(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USphereComponent*                      InteractableCollider;                              // 0x300(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2A2F[0x68];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UInteractableComponent*                Interactable;                                      // 0x370(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2A30[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UMaterialInstanceDynamic*              PlotMeshDynaMaterialInstance;                      // 0x388(0x8)(ZeroConstructor, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTextureRenderTarget2D*                PlotMeshTillingRenderTarget;                       // 0x390(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FGardenPlotActorInternal              Internal;                                          // 0x398(0x14)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_2A31[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FGardenTileBuffInfo                   GardenTileBuffInfoCache;                           // 0x3B0(0x40)(Protected, NativeAccessSpecifierProtected)
	float                                        PlotBoxSize;                                       // 0x3F0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2A32[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FText                                  WeedInteractPromptText;                            // 0x3F8(0x18)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	class FText                                  HarvestInteractPromptText;                         // 0x410(0x18)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	class FText                                  InventoryFullInteractPromptText;                   // 0x428(0x18)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	class FText                                  ExamineInteractPromptText;                         // 0x440(0x18)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_2A34[0x30];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	struct FGardenTileBuffsCache                 GardenTileBuffsCached;                             // 0x488(0x28)(Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_2A35[0x50];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("GardenTile");
		return Clss;
	}

	void UpdateGardenPlotStatus();
	bool TryGetReadOnlyGardenData(struct FGardenPlot* InOutGardenData);
	void OnWeedSprouted(int32 InWeedType);
	void OnWeedRemoved();
	void OnUntilled();
	void OnSoilChanged();
	void OnSeeded(class UVAL_ItemTypeDefinitionAsset* InSeedItemType);
	void OnReadyToHarvest(class UVAL_ItemTypeDefinitionAsset* InPlantItemType, bool InRepeatHarvest);
	void OnPreviewStateStarted(class UVAL_ItemTypeDefinitionAsset* InSeedItemType);
	void OnPreviewStateCleared();
	void OnPlantChanged();
	void OnHiddenLootUncovered();
	void OnHiddenLootPickedUp();
	void OnGardenPlotChanged();
	void OnFullyTilled();
	void OnFertilized(class UVAL_ItemTypeDefinitionAsset* InFertilizedItemType);
	struct FUseEventResult OnClientUsedEquippedOnMe(class AValeriaPlayerController* InPlayer, const struct FUseEventParams& InParams);
	struct FUseEventResult OnClientInteract(class UInteractableComponent* InInteractable, class AValeriaPlayerController* InPlayer, const struct FInteractEventParams& InParams);
	void OnBeginTilling();
	void OnBeginSeeding(class AValeriaCharacter* InActor, class UVAL_ItemTypeDefinitionAsset* InSeedItemType);
	void OnBeginFertilizing(class AValeriaCharacter* InActor, class UVAL_ItemTypeDefinitionAsset* InFertilizedItemType);
	bool IsWatered();
	bool IsTilled();
	bool IsReadyToHarvest();
	bool IsPlantMaster();
	bool IsPlanted();
	bool IsInteractable(class AValeriaCharacter* InCharacter, const struct FInteractEventParams& InEventParams);
	int32 InteractPriority();
	bool HasWeeds();
	bool HasValidGardenData();
	bool HasOverlappingMultiTilePlants(class UVAL_ItemTypeDefinitionAsset** InOutBlockingPlantItemType);
	bool HasAnyTilling();
	int32 GetWeedCount();
	float GetWateredPercent();
	bool GetText(class AValeriaCharacter* InCharacter, enum class EInteractEventIndex InEventIndex, struct FGetTextParams* InParams);
	int32 GetPlotIndex();
	int32 GetPlantSize();
	class UTexture2D* GetPlantIcon();
	void GetPlantCenter(struct FVector2D* InOutLocation);
	class UGatherableComponent* GetParentGatherable();
	class UImage* GetMinigameImage();
	bool GetGardenTileBuffInfo(struct FGardenTileBuffInfo* InFertilizerInfo);
	struct FGardenPlot GetGardenPlot();
	class AActor* GetGardenPatchOwner();
	class UGardenComponent* GetGardenParent();
	float GetClampedFertilizerPctgRemaining();
};

// 0x20 (0x2B0 - 0x290)
// Class Palia.GatherableActor
class AGatherableActor : public AActor
{
public:
	uint8                                        Pad_2A47[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UValeriaGASComponent*                  ValeriaGAS;                                        // 0x298(0x8)(Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UGatherableLootVitalsComponent*        Vitals;                                            // 0x2A0(0x8)(Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UValeriaGASAttributeSet*               AttributeSet;                                      // 0x2A8(0x8)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("GatherableActor");
		return Clss;
	}

	class UVitalsComponent* GetVitals();
	class UValeriaGASAttributeSet* GetAttributeSet();
	class UAbilitySystemComponent* GetAbilitySystemComponent();
};

// 0x0 (0x28 - 0x28)
// Class Palia.GatherableBlocker
class IGatherableBlocker : public IInterface
{
public:

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("GatherableBlocker");
		return Clss;
	}

	struct FNotification ShouldBlockMovement(class AValeriaCharacter* InCharacter);
	struct FNotification ShouldBlockGathering(class AValeriaCharacter* InCharacter);
};

// 0x200 (0x2A0 - 0xA0)
// Class Palia.GatherableComponent
class UGatherableComponent : public UActorComponent
{
public:
	uint8                                        Pad_2A70[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	FMulticastInlineDelegateProperty_            OnPreGather;                                       // 0xA8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnGathered;                                        // 0xB8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnPlayerGather;                                    // 0xC8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	class UVAL_ItemTypeDefinitionAsset*          ItemType;                                          // 0xD8(0x8)(Edit, BlueprintVisible, Net, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        ItemAmount;                                        // 0xE0(0x4)(Edit, BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        ItemLevel;                                         // 0xE4(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        QualityStars;                                      // 0xE8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         DisallowItemsGrantingAccomplishmentProgress;       // 0xEC(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EVitalType                        VitalRequired;                                     // 0xED(0x1)(Edit, BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2A72[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        VitalAmountRequired;                               // 0xF0(0x4)(Edit, BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2A74[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FShopCostScalingInfo                  VitalAmountScaling;                                // 0xF8(0x18)(Edit, BlueprintVisible, Net, NoDestructor, NativeAccessSpecifierPublic)
	enum class EVitalType                        Vital2Required;                                    // 0x110(0x1)(Edit, BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2A75[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        Vital2AmountRequired;                              // 0x114(0x4)(Edit, BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FShopCostScalingInfo                  Vital2AmountScaling;                               // 0x118(0x18)(Edit, BlueprintVisible, Net, NoDestructor, NativeAccessSpecifierPublic)
	TArray<struct FShopItemAdditionalCost>       AdditionalCost;                                    // 0x130(0x10)(Edit, BlueprintVisible, Net, ZeroConstructor, NativeAccessSpecifierPublic)
	bool                                         DontDestroyOnGather;                               // 0x140(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         TrackLimitedStockOnPerPlayerBasis;                 // 0x141(0x1)(Edit, BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2A76[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        LimitedStock;                                      // 0x144(0x4)(Edit, BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        DestroyedAfterFirstGatherSecs;                     // 0x148(0x4)(Edit, BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2A77[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FAdditionalGatherable>         AdditionalItems;                                   // 0x150(0x10)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FAdditionalReward>             AdditionalRewards;                                 // 0x160(0x10)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	bool                                         bEquipmentRequiredToGather;                        // 0x170(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2A78[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class FName>                          EquipmentRequiredItemTags;                         // 0x178(0x10)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	struct FTagList                              EquipmentRequiredItemGameplayTags;                 // 0x188(0x20)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	bool                                         bAutoConsumeOnPickup;                              // 0x1A8(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2A79[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        OriginatesFromShopId;                              // 0x1AC(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bDontUsePickupModeToGatherOnPlot;                  // 0x1B0(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2A7C[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSoftObjectPtr<class UStaticMesh>            LocalHasBeenGatheredMesh;                          // 0x1B8(0x30)(Edit, BlueprintVisible, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<TSoftObjectPtr<class UMaterialInterface>> LocalHasBeenGatheredMaterials;                     // 0x1E8(0x10)(Edit, BlueprintVisible, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)
	float                                        LocalHasBeenGatheredScale;                         // 0x1F8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2A7E[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FText                                  TextOverride;                                      // 0x200(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FPlayerGatherCount                    PlayerGatherCount;                                 // 0x218(0x20)(Net, RepNotify, NativeAccessSpecifierPrivate)
	int32                                        TotalGatherCount;                                  // 0x238(0x4)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2A80[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FTimerHandle                          DestroyAfterSecsTimerHandle;                       // 0x240(0x8)(NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         UseAbilityGather;                                  // 0x248(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2A82[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSubclassOf<class AActor>                    ActorToSpawnOnGather;                              // 0x250(0x8)(ZeroConstructor, Transient, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FActorSpawnConditions                 ActorToSpawnOnGatherConditions;                    // 0x258(0x40)(Transient, NativeAccessSpecifierPrivate)
	bool                                         bBlockGatherIfFullInventory;                       // 0x298(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2A84[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("GatherableComponent");
		return Clss;
	}

	void Server_TriggerGather(class AValeriaCharacter* InCharacter);
	void RpcNetMulticast_NotifyPlayerGather(class AValeriaCharacter* InCharacter);
	void RpcClient_NotifyGathered(class AValeriaCharacter* InCharacter);
	void OnServerUsedEquippedOnMe(class AValeriaPlayerController* InPlayer, const struct FServerUseEventParams& InParams);
	struct FServerUseEventResult OnServerInteract(class UInteractableComponent* InInteractable, class AValeriaCharacter* InCharacter, const struct FInteractEventParams& InEventParams);
	void OnReplicatedTotalGatherCount();
	void OnReplicatedPlayersGathered();
	struct FUseEventResult OnClientUsedEquippedOnMe(class AValeriaPlayerController* InPlayer, const struct FUseEventParams& InParams);
	struct FUseEventResult OnClientInteract(class UInteractableComponent* InInteractable, class AValeriaPlayerController* InVpc, const struct FInteractEventParams& InEventParams);
	bool IsInteractable(class AValeriaCharacter* InCharacter, const struct FInteractEventParams& InEventParams);
	int32 InteractPriority();
	bool GetText(class AValeriaCharacter* InCharacter, enum class EInteractEventIndex InEventIndex, struct FGetTextParams* InParams);
	bool CanBeMovedBy(class AValeriaCharacter* InVC, bool InbMassMove);
	bool CanBeGatheredBy(class AValeriaCharacter* InVC);
};

// 0x3A0 (0x440 - 0xA0)
// Class Palia.LootComponent
class ULootComponent : public UActorComponent
{
public:
	FMulticastInlineDelegateProperty_            LootPerVital;                                      // 0xA0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FQuestRewardConfig                    RewardFinal;                                       // 0xB0(0x198)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	enum class ELootType                         Type;                                              // 0x248(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2AA2[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSubclassOf<class AActor>                    ChestTemplate;                                     // 0x250(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	enum class ELootAchievementCreditType        AchievementCreditType;                             // 0x258(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2AA5[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FQuestRewardConfig                    RewardPerVital;                                    // 0x260(0x198)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	int32                                        LootPerVitalAmount;                                // 0x3F8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         GrantLootToKillerImmediately;                      // 0x3FC(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2AAA[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FTagList                              Tags;                                              // 0x400(0x20)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	bool                                         IsLootCommunal;                                    // 0x420(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2AAC[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        DistanceToCheckForGround;                          // 0x424(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2AAD[0x18];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("LootComponent");
		return Clss;
	}

	void OnVitalsInitialized(class UVitalsComponent* InVitals);
	void OnVitalsChanged(class UVitalsComponent* InVitals, const struct FVitalsChange& InChange);
};

// 0xA0 (0x4E0 - 0x440)
// Class Palia.GatherableLootComponent
class UGatherableLootComponent : public ULootComponent
{
public:
	uint8                                        Pad_2ACA[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	struct FRequirementConfig                    RequirementConfig;                                 // 0x450(0x90)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("GatherableLootComponent");
		return Clss;
	}

	bool IsInteractable(class AValeriaCharacter* InCharacter, const struct FInteractEventParams& InEventParams);
	int32 InteractPriority();
	bool GetText(class AValeriaCharacter* InCharacter, enum class EInteractEventIndex InEventIndex, struct FGetTextParams* InParams);
	bool GetRequirement(struct FRequirement* InRequirement);
};

// 0xF8 (0x198 - 0xA0)
// Class Palia.VitalsComponent
class UVitalsComponent : public UActorComponent
{
public:
	TArray<struct FVital>                        Vitals;                                            // 0xA0(0x10)(Edit, BlueprintVisible, Net, ZeroConstructor, RepNotify, NativeAccessSpecifierPublic)
	enum class EVitalRelevance                   VitalPresenceRule;                                 // 0xB0(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bCanUpgradeVitals;                                 // 0xB1(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2B13[0x6];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	FMulticastInlineDelegateProperty_            OnChanged;                                         // 0xB8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            VitalEmptyNotification;                            // 0xC8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            VitalFullNotification;                             // 0xD8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnStaminaPreUse;                                   // 0xE8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnChangedContext;                                  // 0xF8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnStunned;                                         // 0x108(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                        Pad_2B17[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UValeriaGASAttributeSet*               AttributeSet;                                      // 0x128(0x8)(Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         DoNotTick;                                         // 0x130(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         DoNotReplicate;                                    // 0x131(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bIsStunned;                                        // 0x132(0x1)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bIsInvulnerable;                                   // 0x133(0x1)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2B18[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FVitalsChange>                 VitalChangesQueuedToBeSent;                        // 0x138(0x10)(ZeroConstructor, NativeAccessSpecifierPrivate)
	struct FTimerHandle                          SendVitalChangeMadeRpcTimerHandle;                 // 0x148(0x8)(NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSubclassOf<class AActor>                    ActorToSpawnOnDeath;                               // 0x150(0x8)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FActorSpawnConditions                 ActorToSpawnOnDeathConditions;                     // 0x158(0x40)(NativeAccessSpecifierPrivate)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("VitalsComponent");
		return Clss;
	}

	bool TryVitalChange(const struct FVitalsChange& InChange);
	int32 SubtractVital(const struct FVitalsChange& InChange);
	void StunFor(float InSeconds);
	void SetInvulnerable(bool InbEnabled);
	void RpcNetMulticast_OnStunned(float InSeconds);
	void RpcClient_VitalChangeMade(const struct FVitalsChange& InChange);
	void RpcClient_NotifyVitalFull(enum class EVitalType InType);
	void RpcClient_NotifyVitalEmpty(enum class EVitalType InType);
	void RpcClient_ManuallyReplicateVitalChange(const struct FVitalsChange& InChange);
	void RpcClient_ForceVitalExhaustion(enum class EVitalType InType);
	void RemoveStunnedByTimer();
	void RemoveInvulnerabilityByTimer();
	void OnReplicatedAndNotify();
	bool IsStunned();
	bool IsInvulnerable();
	bool IsDowned();
	void InvulnerableFor(float InSeconds);
	int32 GetVitalStart(enum class EVitalType InType);
	int32 GetVitalMax(enum class EVitalType InType);
	int32 GetVital(enum class EVitalType InType);
	void FlushVitalChangeNotifs();
	bool FilterChange(struct FVitalsChange& InChange, bool InShouldSurfaceErrors);
	int32 ChangeVitalBy(const struct FVitalsChange& InChange, bool InShouldTestFilter);
	int32 AddVital(const struct FVitalsChange& InChange);
};

// 0x8 (0x1A0 - 0x198)
// Class Palia.GatherableLootVitalsComponent
class UGatherableLootVitalsComponent : public UVitalsComponent
{
public:
	uint8                                        Pad_2B21[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("GatherableLootVitalsComponent");
		return Clss;
	}

	void OnVitalsChange(class UVitalsComponent* InVitalsComponent, const struct FVitalsChange& InChange);
	void OnTimer();
};

// 0x88 (0x128 - 0xA0)
// Class Palia.GatherablePiecemealComponent
class UGatherablePiecemealComponent : public UActorComponent
{
public:
	uint8                                        Pad_2B2E[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FQuestRewardConfig>            Rewards;                                           // 0xA8(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	float                                        TimeTick;                                          // 0xB8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        StartDelay;                                        // 0xBC(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FAnimState                            AnimState;                                         // 0xC0(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPrivate)
	enum class ECharacterState                   CharacterState;                                    // 0xD8(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2B30[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FText                                  InteractingText;                                   // 0xE0(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	class FText                                  NoninteractingText;                                // 0xF8(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	class AValeriaCharacter*                     ValeriaCharacter;                                  // 0x110(0x8)(ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FTimerHandle                          TimerHandle;                                       // 0x118(0x8)(NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         Interacting;                                       // 0x120(0x1)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2B31[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("GatherablePiecemealComponent");
		return Clss;
	}

	void TickGather();
	struct FServerUseEventResult OnServerInteract(class UInteractableComponent* InInteractable, class AValeriaCharacter* InCharacter, const struct FInteractEventParams& InEventParams);
	bool IsInteractable(class AValeriaCharacter* InCharacter, const struct FInteractEventParams& InEventParams);
	int32 InteractPriority();
	bool GetText(class AValeriaCharacter* InCharacter, enum class EInteractEventIndex InEventIndex, struct FGetTextParams* InParams);
	bool CheckCanGather(class AValeriaCharacter* InCharacter);
};

// 0xC8 (0x168 - 0xA0)
// Class Palia.GearComponent
class UGearComponent : public UActorComponent
{
public:
	uint8                                        Pad_2B63[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	FMulticastInlineDelegateProperty_            OnChanged;                                         // 0xA8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnGearAssetsWereLoaded;                            // 0xB8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FGearPersistBlock                     GearPersistBlock;                                  // 0xC8(0x70)(NativeAccessSpecifierPrivate)
	struct FGearTransientData                    GearTransientData;                                 // 0x138(0x28)(Net, RepNotify, NativeAccessSpecifierPrivate)
	bool                                         bTransientDataIsValid;                             // 0x160(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2B65[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("GearComponent");
		return Clss;
	}

	void RpcServer_SetGearFromInventory(class UInventoryComponent* InInventory, const struct FBagSlotLocation& InSourceInventorySlot, int32 InDestinationGearSlotIndex, bool InShouldSwapPin);
	void RpcServer_RemoveGearBySlotType(int32 InPersistId, const struct FBagSlotLocation& InDesiredSlot, int32 InIndexWithinType);
	void OnReplicated();
	bool HasRomancePinEquippedForVillager(int32 InVillagerCoreId);
	class UObject* GetLoadedAssetWithTag(class FName InTag);
	int32 GetGearSlotForType(class UGearSlotTypeConfig* InSlotTypeConfig);
	struct FValeriaItem GetGearBySlotType(class UGearSlotTypeConfig* InSlotTypeConfig, int32 InIndexWithinType);
	struct FValeriaItem GetGearByGameplayTag(struct FGameplayTag& InGameplayTag);
	int32 GetAvailableGearSlotForType(class UGearSlotTypeConfig* InSlotTypeConfig);
	bool ContainsGameplayTag(struct FGameplayTag& InGameplayTag);
	void Client_SetGearFromInventory(class UInventoryComponent* InInventory, const struct FBagSlotLocation& InSourceInventorySlot, int32 InDestinationGearSlotIndex, bool InShouldSwapPin);
	void Client_RemoveGearBySlotType(class UGearSlotTypeConfig* InSlotTypeConfig, const struct FBagSlotLocation& InDesiredSlot, int32 InIndexWithinType);
	enum class EGearChangeResult CanRemoveGearBySlotType(class UInventoryComponent* InInventory, class UGearSlotTypeConfig* InGearSlotTypeConfig, int32 InSlotIndex);
};

// 0xC0 (0xF0 - 0x30)
// Class Palia.GearConfig
class UGearConfig : public UDataAsset
{
public:
	class UGearSlotTypeConfig*                   GearSlotTypeConfig;                                // 0x30(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UGameplayEffect>           GameplayEffectToApplyOnEquip;                      // 0x38(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FGearAssetToLoad>              AssetsToLoadOnEquip;                               // 0x40(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FGameplayTagContainer                 GameplayTags;                                      // 0x50(0x20)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FGameplayTagContainer                 TagsGrantedOnEquip;                                // 0x70(0x20)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FGameplayTagContainer                 TagsGrantedOnRemove;                               // 0x90(0x20)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TSoftClassPtr<class AEquipViewActor>         EquipView;                                         // 0xB0(0x30)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FDataTableRowHandle                   VillagerCore;                                      // 0xE0(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("GearConfig");
		return Clss;
	}

};

// 0x30 (0x60 - 0x30)
// Class Palia.GearGlobalConfig
class UGearGlobalConfig : public UDataAsset
{
public:
	TArray<class UGearSlotTypeConfig*>           ActiveSlotTypes;                                   // 0x30(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	class UGearSlotTypeConfig*                   SlotTypeToReduceDurabilityWhenFishing;             // 0x40(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UGearSlotTypeConfig*                   RomancePinSlotType;                                // 0x48(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        RomancePinRelationshipPointMultiplier;             // 0x50(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FRomancePinResetTime                  RomancePinResetTime;                               // 0x54(0xC)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("GearGlobalConfig");
		return Clss;
	}

	class UGearSlotTypeConfig* FindGearSlotTypeByPersistId(int32 InGearSlotTypePersistId);
};

// 0x48 (0x78 - 0x30)
// Class Palia.GearSlotTypeConfig
class UGearSlotTypeConfig : public UDataAsset
{
public:
	int32                                        PersistId;                                         // 0x30(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2B7E[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FText                                  DisplayName;                                       // 0x38(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	class FText                                  GearSlotDescription;                               // 0x50(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	class UTexture2D*                            GearSlotIcon;                                      // 0x68(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        GearSlotAmount;                                    // 0x70(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsVisibleByDefault;                                // 0x74(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bCanBeAutoEquippedOnFirstUse;                      // 0x75(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2B81[0x2];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("GearSlotTypeConfig");
		return Clss;
	}

};

// 0x0 (0x28 - 0x28)
// Class Palia.GeneralHelpersBlueprintLibrary
class UGeneralHelpersBlueprintLibrary : public UBlueprintFunctionLibrary
{
public:

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("GeneralHelpersBlueprintLibrary");
		return Clss;
	}

	struct FUseEventResult UseEventResult_Unhandled();
	struct FUseEventResult UseEventResult_HandledUnconsumedAndSentToServer();
	struct FUseEventResult UseEventResult_HandledUnconsumed();
	struct FUseEventResult UseEventResult_HandledAndSentToServer();
	struct FUseEventResult UseEventResult_Handled();
	struct FServerUseEventResult ServerUseEventResult_Unhandled();
	struct FServerUseEventResult ServerUseEventResult_HandledUnconsumed();
	struct FServerUseEventResult ServerUseEventResult_Handled();
	bool ProjectWorldLocationToWidgetPosition(class APlayerController* InPlayerController, class UCameraComponent* InCamera, const struct FVector& InWorldLocation, struct FVector2D* InScreenPosition, bool InbPlayerViewportRelative);
	float NormalizeDegrees(float InDegrees);
	TScriptInterface<class IWaterable> FindWaterable(class UObject* InWorldContextObject, TArray<enum class EObjectTypeQuery>& InLineTraceObjectTypes, const struct FVector& InCheckPosition, const struct FVector& InBoxExtent);
	void ClampWorldToPanel(struct FVector2D* InCenter, struct FVector2D& InOldCenter, struct FVector2D& InWorldCenter, struct FVector2D& InWorldHalfExtents, struct FVector2D& InPanelHalfExtents, float InWorldToPanel);
	void CalculateZoomCenter(struct FVector2D* InCenter, struct FVector2D& InOldCenter, struct FVector2D& InZoomAnchorPos, struct FVector2D& InWorldCenter, struct FVector2D& InWorldHalfExtents, struct FVector2D& InPanelHalfExtents, float InOldWorldToPanel, float InNewWorldToPanel);
};

// 0x60 (0x100 - 0xA0)
// Class Palia.GiftPreferenceTrackingComponent
class UGiftPreferenceTrackingComponent : public UActorComponent
{
public:
	uint8                                        Pad_2C05[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FGiftPreferencesPersistBlock          GiftPreferencesPersistBlock;                       // 0xA8(0x58)(Net, RepNotify, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("GiftPreferenceTrackingComponent");
		return Clss;
	}

	void OnReplicatedAndShouldNotify();
	bool IsAwareOfGiftingPreference(int32 InVillagerCoreId, int32 InPreferenceId);
	bool IsAbleToGiftAtDifficulty(int32 InVillagerCoreId, enum class EVillagerGiftDifficultyGrouping InDifficulty);
	TArray<TSoftObjectPtr<class UVAL_ItemTypeDefinitionAsset>> GetItemTypesToShowForPreferenceLevel(int32 InVillagerCoreId, enum class EVillagerGiftRewardLevel InPreferenceLevel);
	bool CanLearnMoreForPreferenceLevel(int32 InVillagerCoreId, enum class EVillagerGiftRewardLevel InPreferenceLevel);
};

// 0x20 (0x50 - 0x30)
// Class Palia.CharacterGlobalConfig
class UCharacterGlobalConfig : public UDataAsset
{
public:
	class FName                                  LeftHandSocket;                                    // 0x30(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  RightHandSocket;                                   // 0x38(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  EquipSocketTag;                                    // 0x40(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  ANS_InteractableProp_Equip;                        // 0x48(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("CharacterGlobalConfig");
		return Clss;
	}

};

// 0x1E0 (0x210 - 0x30)
// Class Palia.GatherableGlobalConfig
class UGatherableGlobalConfig : public UDataAsset
{
public:
	struct FGatherableGlobalConfig_Text          Text;                                              // 0x30(0x1E0)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("GatherableGlobalConfig");
		return Clss;
	}

};

// 0x60 (0x90 - 0x30)
// Class Palia.PlacementGlobalConfig
class UPlacementGlobalConfig : public UDataAsset
{
public:
	TSubclassOf<class APlacementRegionMatActor>  PlacementRegionMatActor;                           // 0x30(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FPlacementLimitByGameplayTag>  LimitsByTag;                                       // 0x38(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	class UAkAudioEvent*                         DefaultPlacementSound;                             // 0x48(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAkAudioEvent*                         DefaultPickupSound;                                // 0x50(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FNotification                         DecorOnWallsRemovedNotification;                   // 0x58(0x30)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	int32                                        BuildingClusterCostLimit;                          // 0x88(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2C08[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("PlacementGlobalConfig");
		return Clss;
	}

};

// 0x50 (0x80 - 0x30)
// Class Palia.VAL_InputGlobalConfig
class UVAL_InputGlobalConfig : public UDataAsset
{
public:
	TMap<struct FGameplayTag, TSoftObjectPtr<class UInputAction>> ItemTagToInputActionMappings;                      // 0x30(0x50)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, UObjectWrapper, NativeAccessSpecifierPublic)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("VAL_InputGlobalConfig");
		return Clss;
	}

};

// 0x10 (0x40 - 0x30)
// Class Palia.ShippingBinGlobalConfig
class UShippingBinGlobalConfig : public UDataAsset
{
public:
	TArray<struct FTimeOfDayHourMinute>          TimesToSellBin;                                    // 0x30(0x10)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("ShippingBinGlobalConfig");
		return Clss;
	}

};

// 0x8 (0x38 - 0x30)
// Class Palia.FocusGlobalConfig
class UFocusGlobalConfig : public UDataAsset
{
public:
	int32                                        FocusPerHourBeforeSoftCap;                         // 0x30(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        RestedFocusPerHourAfterSoftCap;                    // 0x34(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("FocusGlobalConfig");
		return Clss;
	}

};

// 0x58 (0x88 - 0x30)
// Class Palia.SkillLevelsGlobalConfig
class USkillLevelsGlobalConfig : public UDataAsset
{
public:
	class FText                                  MasterLevelDisplayName;                            // 0x30(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	TArray<struct FMasterLevelReward>            MasterLevelRewards;                                // 0x48(0x10)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FScalingReward>                MasterLevelScalingRewards;                         // 0x58(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	struct FGameplayTag                          MasterLevelTag;                                    // 0x68(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FText                                  LevelRequirementDisplayFormat;                     // 0x70(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("SkillLevelsGlobalConfig");
		return Clss;
	}

};

// 0x0 (0x28 - 0x28)
// Class Palia.GoalsBlueprintLibrary
class UGoalsBlueprintLibrary : public UBlueprintFunctionLibrary
{
public:

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("GoalsBlueprintLibrary");
		return Clss;
	}

	bool GetXOverYProgressText(class AValeriaCharacter* InCharacter, struct FVillagerQuestRequirement& InRequirement, int32 InGoalProgress, class FText* InOutText);
};

// 0x18 (0xB8 - 0xA0)
// Class Palia.HealthRegenComponent
class UHealthRegenComponent : public UActorComponent
{
public:
	float                                        HealthRegenPerSecond;                              // 0xA0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2C17[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UVitalsComponent*                      CachedVitalsComponent;                             // 0xA8(0x8)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2C18[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("HealthRegenComponent");
		return Clss;
	}

};

// 0x10 (0x38 - 0x28)
// Class Palia.GeneratedHeatmap
class UGeneratedHeatmap : public UObject
{
public:
	TArray<struct FGeneratedHeatmapPoint>        Points;                                            // 0x28(0x10)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("GeneratedHeatmap");
		return Clss;
	}

	int32 NumPoints();
	struct FGeneratedHeatmapPoint GetPoint(int32 InIndex);
};

// 0x0 (0x30 - 0x30)
// Class Palia.HeatmapGenerator
class UHeatmapGenerator : public UGameInstanceSubsystem
{
public:

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("HeatmapGenerator");
		return Clss;
	}

	class UGeneratedHeatmap* GenerateSpawnHeatmap(const class FString& InLogFilePath, const class FString& InSpawnClass, int32 InMaxLines);
};

// 0x110 (0x1B0 - 0xA0)
// Class Palia.HitReactComponent
class UHitReactComponent : public UActorComponent
{
public:
	FMulticastInlineDelegateProperty_            OnDispel;                                          // 0xA0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnProjectileHitReact;                              // 0xB0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnMeleeHitReact;                                   // 0xC0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnHitReactEnded;                                   // 0xD0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnInsectEscapedFromTrap;                           // 0xE0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnInsectTrapWasBoosted;                            // 0xF0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                        Pad_2C43[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        AllowedAngleForBlocking;                           // 0x104(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        TimeLeftInCurrentReaction;                         // 0x108(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bShouldBeKnockedBack;                              // 0x10C(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2C44[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UVAL_ItemTypeDefinitionAsset*          ToolUsedToHit;                                     // 0x110(0x8)(ZeroConstructor, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        TimeStunnedAtEndOfHitReaction;                     // 0x118(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        TimeToSpendBeingKnockedBack;                       // 0x11C(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        KnockbackDistance;                                 // 0x120(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        TimeToSpendBeingTrapped;                           // 0x124(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bBeingKnockedBack;                                 // 0x128(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bIsTrapped;                                        // 0x129(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2C46[0xA];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FAIRequestID                          LastKnockbackPathRequestId;                        // 0x134(0x4)(NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bShouldSimulateKnockbackMovement;                  // 0x138(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2C47[0x1F];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TSet<uint32>                                 AttackersHitDuringTrapped;                         // 0x158(0x50)(Transient, NativeAccessSpecifierPrivate)
	float                                        AdditionalCatchValue;                              // 0x1A8(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bWasInstantTrapped;                                // 0x1AC(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2C48[0x3];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("HitReactComponent");
		return Clss;
	}

	void RpcNetMulticast_OnCreatureKnockbackStarted(class AActor* InAttacker, const struct FVector& InKnockBackDirection, const struct FVector& InFinalDestination);
	void RpcNetMulticast_OnCreatureKnockbackEnded();
	void RpcNetMulticast_OnCreatureEscapedFromTrap(class AActor* InActor);
	void RpcNetMulticast_BeginHitReaction(bool InIsFromMelee, class AActor* InAttacker, TSoftObjectPtr<class UVAL_ItemTypeDefinitionAsset>& InAmmoItemType, enum class EHitReactionType InType);
	void RpcClient_OnPlayerKnockbackStarted(class AActor* InAttacker, const struct FVector& InKnockBackDirection, const struct FVector& InFinalDestination, float InKnockbackDuration);
	void RpcClient_DisplayProjectileHitReact(class AActor* InInstigator, TSoftObjectPtr<class UVAL_ItemTypeDefinitionAsset>& InAmmoType);
	void OnMoveToPathComplete(const struct FAIRequestID& InRequestId, enum class EPathFollowingResult InResult);
	void NotifyHitReactEnd();
	void NotifyHitByProjectile(bool InIncludesDispelEffect, class AActor* InInstigator, class AActor* InProjectile);
	void NotifyHitByMelee(class AActor* InAttacker, enum class EHitReactionType InType);
	bool IsTrapped();
	bool IsReactingToHit();
	bool IsBeingKnockedBack();
	class AActor* GetAttackerInstigator();
	void BeginHitReaction(class AActor* InAttacker, enum class EHitReactionType InType);
	void AttemptApplyAttack(class AActor* InAttacker, enum class EHitReactionType InType, class UAbilitySystemComponent* InAttackerGAS, TSubclassOf<class UGameplayEffect> InGameplayEffectClass, class UAbilitySystemComponent* InTargetGAS, float InLevel, const struct FGameplayEffectContextHandle& InContext);
};

// 0x78 (0x118 - 0xA0)
// Class Palia.HouseInventoryComponent
class UHouseInventoryComponent : public UActorComponent
{
public:
	uint8                                        Pad_2C4D[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	FMulticastInlineDelegateProperty_            OnChanged;                                         // 0xA8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FHouseInventoryData                   Data;                                              // 0xB8(0x10)(Net, RepNotify, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2C4E[0x50];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("HouseInventoryComponent");
		return Clss;
	}

	void OnReplicatedData();
	int32 NumHousesInInventory();
	struct FHouseInventoryItem GetHouseAtInventoryIndex(int32 InIndex);
	bool ContainsInventoryIndex(int32 InIndex);
	bool ContainsHouse(TSoftObjectPtr<class UVAL_ItemTypeDefinitionAsset>& InItemType);
};

// 0x20 (0x50 - 0x30)
// Class Palia.HousingGlobalConfig
class UHousingGlobalConfig : public UDataAsset
{
public:
	int32                                        MaxPurchaseableSlotCount;                          // 0x30(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2C51[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FHouseSlotPurchaseCost>        PurchaseSlotCosts;                                 // 0x38(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	int32                                        MaxSlotNameLength;                                 // 0x48(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2C52[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("HousingGlobalConfig");
		return Clss;
	}

};

// 0x148 (0x3D8 - 0x290)
// Class Palia.HousingOwnershipActor
class AHousingOwnershipActor : public AActor
{
public:
	uint8                                        Pad_2CC9[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	FMulticastInlineDelegateProperty_            OnHousingSlotChanged;                              // 0x298(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnActiveHousingSlotChanged;                        // 0x2A8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnOwnershipTitleChanged;                           // 0x2B8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnPlacementAlterationOptionsChanged;               // 0x2C8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UMaterial>              PendingPlaceableMaterial;                          // 0x2D8(0x30)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class AActor>                 PendingPlaceableViewActor;                         // 0x308(0x30)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGuid                                 HousingGuid;                                       // 0x338(0x10)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FHousingSlotData                      SlotData;                                          // 0x348(0x18)(Net, RepNotify, NativeAccessSpecifierPrivate)
	int32                                        ActiveHousingSlotId;                               // 0x360(0x4)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2CCE[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FHouseOwnershipTitle>          OwnershipList;                                     // 0x368(0x10)(Net, ZeroConstructor, RepNotify, NativeAccessSpecifierPrivate)
	class UPersistComponent*                     PersistComponent;                                  // 0x378(0x8)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UHousingPlaceablesComponent*           HousingPlaceablesComponent;                        // 0x380(0x8)(Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UHousingPlotUnlocksComponent*          HousingPlotUnlocks;                                // 0x388(0x8)(Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FGuid                                 LoadedByCharacterGuid;                             // 0x390(0x10)(Net, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         IsDisplayOnly;                                     // 0x3A0(0x1)(Net, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2CD6[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class AValeriaCharacter*>             VisitorsList;                                      // 0x3A8(0x10)(Net, ZeroConstructor, Transient, RepNotify, NativeAccessSpecifierPrivate)
	TArray<struct FKickedTicket>                 KickVisitorsList;                                  // 0x3B8(0x10)(Net, ZeroConstructor, Transient, RepNotify, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2CD7[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("HousingOwnershipActor");
		return Clss;
	}

	void Server_PerformHousingSlotAction(class AValeriaPlayerController* InVpc, struct FHousingSlotActionParams& InAction);
	void OnRep_VisitorList();
	void OnRep_OwnershipList();
	void OnRep_KickedVisitorList();
	void OnRep_HousingSlotData();
	void OnRep_ActiveSlotId();
	bool IsOnVisitorList(struct FGuid& InPlayerId);
	bool IsOnKickedList(struct FGuid& InPlayerId);
	bool IsAtMaxPurchasedSlots();
	bool IsActorVisibleOnCurrentHousingSlot(class AActor* InActor);
	TArray<class AValeriaCharacter*> GetVisitorList();
	void GetSlots(TArray<struct FHousingSlot>* InSlots);
	bool GetSlotById(int32 InSlotId, struct FHousingSlot* InHousingSlot);
	int32 GetPlotValue();
	int32 GetNextSlotID();
	struct FPersistGuid GetLoadedByCharacterGuid();
	TArray<struct FHouseOwnershipTitle> GetHousingSlotOwnershipInfo(int32 InSlot);
	struct FSessionActorId GetHousingSessionId();
	class UHousingPlotUnlocksComponent* GetHousingPlotUnlocks();
	class AHousingPlotActor* GetHousingPlotActor();
	struct FPersistActorId GetHousingPersistId();
	enum class EHousingPermissionLevel GetHousingOwnershipInfoForCharacterId(const struct FGuid& InCharacterId);
	enum class EHousingPermissionLevel GetHousingOwnershipInfoForCharacter(class AValeriaCharacter* InVC);
	TArray<struct FHouseOwnershipTitle> GetHousingOwnershipInfo();
	struct FPersistGuid GetHousingGuid();
	int32 GetCurrentBuildingCount(int32* InCurrentHousingLimit, int32* InTotalHousingLimit);
	int32 GetCurrentBuildingClusterCostForActor(class AActor* InActor, int32* InCurrentBuildingClusterLimitCost, class AActor* InIgnoreActor);
	int32 GetActiveHousingSlot();
};

// 0x300 (0x3A0 - 0xA0)
// Class Palia.HousingPlaceablesComponent
class UHousingPlaceablesComponent : public UActorComponent
{
public:
	int32                                        BulkDataListVersion;                               // 0xA0(0x4)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int32                                        ActiveSlotDecorPlacementLimitCost;                 // 0xA4(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int32                                        ActiveSlotPlaceablePlacementLimitCost;             // 0xA8(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int32                                        ActiveSlotDecorPlotValue;                          // 0xAC(0x4)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int32                                        ActiveSlotPlaceablePlotValue;                      // 0xB0(0x4)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int32                                        AllHousingSlotsTotalPlotValue;                     // 0xB4(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FSimpleDecorPlaceablesArray           ActiveSimpleDecorList;                             // 0xB8(0x120)(Net, NativeAccessSpecifierPrivate)
	TArray<struct FSimpleDecorPlaceable>         BaseBulkDataList;                                  // 0x1D8(0x10)(ZeroConstructor, NativeAccessSpecifierPrivate)
	struct FBlobIdSerializer                     PlaceableBlobIds;                                  // 0x1E8(0x118)(Net, NativeAccessSpecifierPrivate)
	int32                                        ReplicatedActiveSlotId;                            // 0x300(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2CE3[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FMultiplayerDecorLocking>      ActiveLockedPlaceablesPerCharacter;                // 0x308(0x10)(Net, ZeroConstructor, Transient, RepNotify, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2CE4[0x88];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("HousingPlaceablesComponent");
		return Clss;
	}

	void OnRep_LockedPlaceablesUpdated();
	void OnRep_BulkDataListVersion();
};

// 0x150 (0x3E0 - 0x290)
// Class Palia.HousingPlotActor
class AHousingPlotActor : public AActor
{
public:
	float                                        BoundaryRadiusSquared;                             // 0x290(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int32                                        EntitiesOnPlotCostLimit;                           // 0x294(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSoftObjectPtr<class UHousingPlotSpawnConfig> HousingPlotConfig;                                 // 0x298(0x30)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UVAL_ItemTypeDefinitionAsset*          DefaultSpawnedFenceItemType;                       // 0x2C8(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int32                                        DefaultSpawnedFenceGapSize;                        // 0x2D0(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bDefaultSpawnedFenceIrregular;                     // 0x2D4(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2D31[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class USceneComponent*                       Root;                                              // 0x2D8(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class USceneComponent*                       PlayerStart;                                       // 0x2E0(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UBillboardComponent*                   Billboard;                                         // 0x2E8(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UTextRenderComponent*                  HouseName;                                         // 0x2F0(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UPlacementRegionComponent*             PlacementRegion;                                   // 0x2F8(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class USceneComponent*                       UpgradeLocation;                                   // 0x300(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UTeleportDestinationComponent*         TeleportDestination;                               // 0x308(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UBoxComponent*                         PlayerKillVolumeXNeg;                              // 0x310(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UBoxComponent*                         PlayerKillVolumeXPos;                              // 0x318(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UBoxComponent*                         PlayerKillVolumeYNeg;                              // 0x320(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UBoxComponent*                         PlayerKillVolumeYPos;                              // 0x328(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UBoxComponent*                         PlayerKillVolumeZNeg;                              // 0x330(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UBoxComponent*                         PlayerKillVolumeZPos;                              // 0x338(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        KillVolumeExtent;                                  // 0x340(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        KillVolumeThickness;                               // 0x344(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                PlotDisplayName;                                   // 0x348(0x10)(Net, ZeroConstructor, Transient, RepNotify, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<struct FComplexRecipeRecord>          ComplexRecipes;                                    // 0x358(0x10)(Net, ZeroConstructor, Transient, RepNotify, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	TArray<struct FRecipeIdToOtherRecipeIds>     ComplexRecipeReqs;                                 // 0x368(0x10)(ZeroConstructor, NativeAccessSpecifierPrivate)
	struct FPersistGuid                          OccupiedHousingGuid;                               // 0x378(0x10)(BlueprintVisible, BlueprintReadOnly, Net, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UTeleportToComponent*                  TeleportToComp;                                    // 0x388(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class AHousingOwnershipActor*                OccupiedHousingOwnershipActor;                     // 0x390(0x8)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, Transient, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<class AHousingPlotDebrisActor*>       WritsDebrisActors;                                 // 0x398(0x10)(BlueprintVisible, ZeroConstructor, Transient, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2D41[0x38];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("HousingPlotActor");
		return Clss;
	}

	void UpdateHouseName();
	void ToggleCamera(class AValeriaCharacter* InVC, bool InIsAttached);
	void SetDebrisActorsHighlightState(int32 InPersistId, bool InbHighlight);
	void OnZoomWheelChanged(float InRate);
	void OnRightLeftStickChanged(float InAxis);
	void OnRep_OccupiedByHousingOwnershipActor();
	void OnRep_ComplexRecipes(TArray<struct FComplexRecipeRecord>& InOldRecipes);
	void OnOccupiedHousingOwnershipChanged(class AHousingOwnershipActor* InHOA);
	void OnLocalPlayerPlacementStateChanged(class AValeriaCharacter* InVC, bool InPlacementMode);
	void OnHousingVisitorListChanged(class AHousingOwnershipActor* InHOA);
	void OnHousingPlotUnlocksChanged(class UHousingPlotUnlocksComponent* InComponent);
	void OnForwardStickChanged(float InAxis);
	bool IsHousingMenuCameraRotationEnabled();
	bool IsCharacterOnHousePlot(class AValeriaCharacter* InCharacter);
	void HandlePlayerReachedKillVolume(class UPrimitiveComponent* InOverlappedComponent, class AActor* InOtherActor, class UPrimitiveComponent* InOtherComp, int32 InOtherBodyIndex, bool InbFromSweep, struct FHitResult& InSweepResult);
	struct FTransform GetWritTransform(struct FHousingPlotWritRegion& InWrit, class UPlacementRegionComponent* InRegion);
	class UTeleportToComponent* GetTeleportToComponent();
	class UTeleportDestinationComponent* GetTeleportDestination();
	class FString GetOccupiedHousingPrimaryOwnerName();
	struct FGuid GetOccupiedHousingPrimaryOwnerGuid();
	struct FPersistActorId GetOccupiedHousingPersistActorId();
	struct FPersistGuid GetOccupiedHousingGuid();
	class UHousingPlotSpawnConfig* GetHousingPlotConfig();
	TArray<struct FRecipeIdToOtherRecipeIds> GetComplexRecipesReqs();
	bool GetComplexRecipe(enum class ESkillType InSkillType, class UCrafterComponent** InCrafter, int32* InRecipeId);
	void DestroyDebrisActors();
	void CreateDebrisActors();
	TArray<class AActor*> ClientGetAllOutdoorDecorActors();
};

// 0x70 (0xA0 - 0x30)
// Class Palia.HousingPlotSpawnConfig
class UHousingPlotSpawnConfig : public UDataAsset
{
public:
	TArray<struct FHousingPlotSpawningItem>      StartingSpawnItems;                                // 0x30(0x10)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FHousingPlotWritRegion>        WritRegions;                                       // 0x40(0x10)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	TSoftClassPtr<class AHousingPlotDebrisActor> WritDebrisActorTemplate;                           // 0x50(0x30)(Edit, BlueprintVisible, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FHousingWritToBuildingUnlockLimit> BuildingLimit;                                     // 0x80(0x10)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FConditionalHousingPlotSpawnItemList> ConditionalSpawnItemLists;                         // 0x90(0x10)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("HousingPlotSpawnConfig");
		return Clss;
	}

};

// 0x20 (0xC0 - 0xA0)
// Class Palia.HousingPlotUnlocksComponent
class UHousingPlotUnlocksComponent : public UActorComponent
{
public:
	FMulticastInlineDelegateProperty_            OnChanged;                                         // 0xA0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FHousingPlotUnlocksData               Data;                                              // 0xB0(0x10)(Net, RepNotify, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("HousingPlotUnlocksComponent");
		return Clss;
	}

	void OnReplicatedData();
	bool IsPlotUnlocked(int32 InPersistId);
	bool IsNeighboringUnlockedPlot(int32 InPersistId);
	bool HasRequirementsToUnlockPlot(class AValeriaCharacter* InVC, int32 InPersistId);
	struct FVector4 GetNeighborVisualValue(int32 InPersistId);
};

// 0x8 (0x298 - 0x290)
// Class Palia.HousingPlotDebrisActor
class AHousingPlotDebrisActor : public AActor
{
public:
	int32                                        PersistId;                                         // 0x290(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bUnlocked;                                         // 0x294(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2D65[0x3];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("HousingPlotDebrisActor");
		return Clss;
	}

	void UpdateWritPlotUnlockState(class UHousingPlotUnlocksComponent* InComponent);
	void UpdateCharacterState(class AValeriaCharacter* InVC, bool InIsPlacementMode);
	void SetHightlightState(bool InHighlight);
};

// 0x0 (0x28 - 0x28)
// Class Palia.HousingSlotOverride
class IHousingSlotOverride : public IInterface
{
public:

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("HousingSlotOverride");
		return Clss;
	}

	bool ShouldOverrideHousingSlotId();
	int32 GetOverriddenHousingSlotId();
};

// 0x10 (0xB0 - 0xA0)
// Class Palia.HousingUpgradeKioskComponent
class UHousingUpgradeKioskComponent : public UActorComponent
{
public:
	uint8                                        Pad_2D7B[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSubclassOf<class AActor>                    EmptyActorBlueprint;                               // 0xA8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("HousingUpgradeKioskComponent");
		return Clss;
	}

	struct FUseEventResult OnClientInteract(class UInteractableComponent* InInteractable, class AValeriaPlayerController* InPlayer, const struct FInteractEventParams& InEventParams);
	bool IsInteractable(class AValeriaCharacter* InCharacter, const struct FInteractEventParams& InEventParams);
	int32 InteractPriority();
	bool GetText(class AValeriaCharacter* InCharacter, enum class EInteractEventIndex InEventIndex, struct FGetTextParams* InParams);
};

// 0x68 (0x108 - 0xA0)
// Class Palia.HuntingCreatureTeleportComponent
class UHuntingCreatureTeleportComponent : public UActorComponent
{
public:
	uint8                                        Pad_2D8A[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	FMulticastInlineDelegateProperty_            OnDisruptedStart;                                  // 0xA8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnPreparingStart;                                  // 0xB8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnTeleport;                                        // 0xC8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                        Pad_2D8C[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        InitialTeleportDelay;                              // 0xDC(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        TeleportCooldown;                                  // 0xE0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        TeleportCastTime;                                  // 0xE4(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        TeleportDistance;                                  // 0xE8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        TeleportDirectionNoise;                            // 0xEC(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        DispelDuration;                                    // 0xF0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2D8F[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UHitReactComponent*                    CachedHitReactComponent;                           // 0xF8(0x8)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class ACreatureCharacter*                    CachedCreature;                                    // 0x100(0x8)(ZeroConstructor, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("HuntingCreatureTeleportComponent");
		return Clss;
	}

	void RpcClient_DisplayTeleport(const struct FVector& InTeleportDestination);
	void RpcClient_DisplayPreparingStart();
	void RpcClient_DisplayDisruptedStart(float InVisualDisruptDuration);
	float GetRemainingDisruptedTime();
	enum class ETeleportState GetCurrentTeleportState();
};

// 0x18 (0xB8 - 0xA0)
// Class Palia.HurtComponent
class UHurtComponent : public UActorComponent
{
public:
	FMulticastInlineDelegateProperty_            OnHurt;                                            // 0xA0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TSubclassOf<class AActor>                    ShadeTemplate;                                     // 0xB0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("HurtComponent");
		return Clss;
	}

	void RpcClient_NotifyHurt();
	void NotifyHurt();
};

// 0x40 (0xE0 - 0xA0)
// Class Palia.IllusionComponent
class UIllusionComponent : public UActorComponent
{
public:
	uint8                                        Pad_2D9A[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        CurrentOpacity;                                    // 0xA8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2D9C[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UCurveFloat*                           OpacityCurve;                                      // 0xB0(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        FlickerMinPeriod;                                  // 0xB8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        FlickerMaxPeriod;                                  // 0xBC(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MaxLifetime;                                       // 0xC0(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         CanReverse;                                        // 0xC4(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2D9D[0x13];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         FadingOut;                                         // 0xD8(0x1)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2D9E[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("IllusionComponent");
		return Clss;
	}

	void FadeAway(float InTime);
};

// 0x28 (0xC8 - 0xA0)
// Class Palia.IllusionTrailComponent
class UIllusionTrailComponent : public UActorComponent
{
public:
	TSubclassOf<class AActor>                    IllusionTemplate;                                  // 0xA0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class AActor*>                        SpawnedIllusions;                                  // 0xA8(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	float                                        SpawnInterval;                                     // 0xB8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        FadeOutSpeed;                                      // 0xBC(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2DA4[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("IllusionTrailComponent");
		return Clss;
	}

	void OnDeath(class UDeathComponent* InDeath);
};

// 0x20 (0xC0 - 0xA0)
// Class Palia.InactiveDespawnComponent
class UInactiveDespawnComponent : public UActorComponent
{
public:
	int32                                        InactivitySeconds;                                 // 0xA0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        DespawnDelaySeconds;                               // 0xA4(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        MinCharacterDespawnDistance;                       // 0xA8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        MaxCharacterLOSDistance;                           // 0xAC(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FTimerHandle                          InactivityTimerHandle;                             // 0xB0(0x8)(NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2DC0[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("InactiveDespawnComponent");
		return Clss;
	}

	void ResetInactivityTimer();
	void HandleVitalsChanged(class UVitalsComponent* InVitalsComponent, const struct FVitalsChange& InChange);
	void HandleProjectileHitReact(class AActor* InInstigator, class UVAL_ItemTypeDefinitionAsset* InAmmoType);
	void HandleInactivityTimerComplete();
	void HandleHealthChanged(float InPreviousHealth, float InNewHealth, float InMaxHealth);
	void HandleCharacterAddedAsThreat(class AValeriaCharacter* InCharacter);
	bool CanDespawnActorNow();
};

// 0x70 (0xA0 - 0x30)
// Class Palia.InstrumentSongConfig
class UInstrumentSongConfig : public UDataAsset
{
public:
	struct FGameplayTag                          Tag;                                               // 0x30(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FText                                  Name;                                              // 0x38(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	class FText                                  Description;                                       // 0x50(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	int32                                        InstrumentTierRequirement;                         // 0x68(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2DCB[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FText                                  RequiresText;                                      // 0x70(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	TArray<int32>                                Pitches;                                           // 0x88(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	TSubclassOf<class UGameplayEffect>           GameplayEffectToApply;                             // 0x98(0x8)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("InstrumentSongConfig");
		return Clss;
	}

};

// 0xA0 (0xD0 - 0x30)
// Class Palia.InstrumentGlobalConfig
class UInstrumentGlobalConfig : public UDataAsset
{
public:
	TMap<int32, struct FInstrumentPitch>         Pitches;                                           // 0x30(0x50)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	TMap<enum class EInstrumentType, struct FInstrumentNotes> InstrumentTypeNotes;                               // 0x80(0x50)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("InstrumentGlobalConfig");
		return Clss;
	}

};

// 0x0 (0x28 - 0x28)
// Class Palia.Interactable
class IInteractable : public IInterface
{
public:

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("Interactable");
		return Clss;
	}

	void OnServerUsedEquippedOnMe(class AValeriaPlayerController* InPlayer, const struct FServerUseEventParams& InParams);
	struct FServerUseEventResult OnServerInteract(class UInteractableComponent* InInteractable, class AValeriaCharacter* InCharacter, const struct FInteractEventParams& InEventParams);
	struct FUseEventResult OnClientUsedEquippedOnMe(class AValeriaPlayerController* InPlayer, const struct FUseEventParams& InParams);
	struct FUseEventResult OnClientInteract(class UInteractableComponent* InInteractable, class AValeriaPlayerController* InPlayer, const struct FInteractEventParams& InParams);
	bool IsInteractable(class AValeriaCharacter* InCharacter, const struct FInteractEventParams& InEventParams);
	int32 InteractPriority();
	bool GetText(class AValeriaCharacter* InCharacter, enum class EInteractEventIndex InEventIndex, struct FGetTextParams* InParams);
};

// 0x0 (0x28 - 0x28)
// Class Palia.InteractablePlate
class IInteractablePlate : public IInterface
{
public:

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("InteractablePlate");
		return Clss;
	}

	void Update(class UInteractableComponent* InInteractable, struct FInteractablePlatePayload& InPayload);
};

// 0x1A8 (0x248 - 0xA0)
// Class Palia.InteractableComponent
class UInteractableComponent : public UActorComponent
{
public:
	FMulticastInlineDelegateProperty_            OnHighlightToggled;                                // 0xA0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnInteractableChanged;                             // 0xB0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnHideDueToRequirementsNotMet;                     // 0xC0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnShowDueToRequirementsMet;                        // 0xD0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnClientInteract;                                  // 0xE0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnInteractorLockChanged;                           // 0xF0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnServerInteract;                                  // 0x100(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FDataTableRowHandle                   QuestActiveRequirement;                            // 0x110(0x10)(Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
	int32                                        QuestOnStep;                                       // 0x120(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2E7D[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FQuestActivityPrereq>          QuestActivityRequirements;                         // 0x128(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	struct FTimeOfDayFilter                      TimeOfDayRequirement;                              // 0x138(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, NativeAccessSpecifierPublic)
	bool                                         bSendTelemetryEventOnServerInteract;               // 0x150(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2E7F[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class ULimitedEventDataAsset*                TelemLimitedEvent;                                 // 0x158(0x8)(Edit, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                TelemInteractableName;                             // 0x160(0x10)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        TelemMaxFrequencySec;                              // 0x170(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  CollisionProfile;                                  // 0x174(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FName                                  PlayerCollisionProfile;                            // 0x17C(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int32                                        SkipAngleChecks;                                   // 0x184(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        AngleInteractLimit;                                // 0x188(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        FacingInteractLimit;                               // 0x18C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<struct FPersistentTagFilter>          PlayerTagRequirements;                             // 0x190(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPrivate)
	enum class ECharacterState                   RequiredCharacterState;                            // 0x1A0(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         HideIfRequirementsNotMet;                          // 0x1A1(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         HideRequirementsFullCheck;                         // 0x1A2(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2E83[0x1];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        HideRequirementsCheckInterval;                     // 0x1A4(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FTimerHandle                          CheckRequirementsForHideHandle;                    // 0x1A8(0x8)(NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         DisableOutlineOnHighlight;                         // 0x1B0(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         InteractPlateUseSphereLocation;                    // 0x1B1(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2E87[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        MinInteractionDistance;                            // 0x1B4(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        MaxInteractionDistance;                            // 0x1B8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2E88[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class USphereComponent*>              InteractableLocations;                             // 0x1C0(0x10)(ExportObject, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	TArray<struct FVAL_InteractableInteractorLock> LocationLocks;                                     // 0x1D0(0x10)(Net, ZeroConstructor, RepNotify, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	TArray<class AValeriaCharacter*>             EngagedCharacters;                                 // 0x1E0(0x10)(Net, ZeroConstructor, RepNotify, NativeAccessSpecifierPrivate)
	TArray<struct FVAL_ClientInteractableProp>   InteractableProps;                                 // 0x1F0(0x10)(ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	int32                                        InteractionBlockerCount;                           // 0x200(0x4)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2E89[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UWidgetComponent*                      PlateUi;                                           // 0x208(0x8)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UProximityChecker*                     ProximityChecker;                                  // 0x210(0x8)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FVector                               DefaultPlatePosition;                              // 0x218(0x18)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class AValeriaCharacter*                     CachedLocalPlayer;                                 // 0x230(0x8)(ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bBlockInteractionInPlacementMode;                  // 0x238(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2E8A[0xF];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("InteractableComponent");
		return Clss;
	}

	void RemoveInteractionBlocker();
	void OutlineHighlight(class AValeriaPlayerController* InPlayer, bool InEnable);
	void OnRep_LocationLocks(TArray<struct FVAL_InteractableInteractorLock>& InOldEngagedLocations);
	void OnRep_EngagedCharacters(TArray<class AValeriaCharacter*>& InOldEngagedCharacters);
	bool IsInteractable(class AValeriaCharacter* InCharacter);
	bool InteractableRequirementsMet(class AValeriaCharacter* InCharacter);
	bool HasInteractingPawns();
	void HandleProximityChanged(class UProximityChecker* InTracker, class AActor* InTracked, bool InIsWithin);
	void HandlePlacementInteractChange(class AValeriaCharacter* InCharacter, bool InInteractChange);
	void HandleLockChanged(struct FVAL_InteractorLockParams& InLockParams, class UInteractorComponent* InInteractor, bool InbLockEngaged);
	void HandleDestroyedInteractableProp(class AActor* InDestroyedProp);
	void HandleCharacterAnimNotifyStateEnd(class UAbilityAnimationComponent* InAbilityAnimationComponent, class FName& InNotifyName, struct FBranchingPointNotifyPayload& InBranchingPointNotifyPayload);
	void HandleCharacterAnimNotifyStateBegin(class UAbilityAnimationComponent* InAbilityAnimationComponent, class FName& InNotifyName, struct FBranchingPointNotifyPayload& InBranchingPointNotifyPayload);
	void HandleCharacterAnimNotifyMontageEvent(class UAbilityAnimationComponent* InAbilityAnimationComponent, class FName& InNotifyName, struct FBranchingPointNotifyPayload& InBranchingPointNotifyPayload);
	class UObject* GetInteractable(enum class EInteractEventIndex InIndex, class AValeriaCharacter* InVC);
	void AddInteractionBlocker();
};

// 0x1D0 (0x270 - 0xA0)
// Class Palia.InteractorComponent
class UInteractorComponent : public UActorComponent
{
public:
	FMulticastInlineDelegateProperty_            OnLockChanged;                                     // 0xA0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                        Pad_2EDD[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        InteractEventThrottleCounter;                      // 0xB8(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        InteractEventThrottleCountLimit;                   // 0xBC(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        InteractEventThrottleTimeLimit;                    // 0xC0(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2EE1[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UInteractableComponent*                HighlightedInteractable;                           // 0xC8(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, Transient, EditConst, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class AValeriaCharacter*                     VC;                                                // 0xD0(0x8)(ZeroConstructor, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class AValeriaPlayerController*              Vpc;                                               // 0xD8(0x8)(ZeroConstructor, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UCharacterStateMachineComponent*       Csm;                                               // 0xE0(0x8)(ExportObject, ZeroConstructor, Transient, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FVAL_InteractorInteractableLock       InteractorLock;                                    // 0xE8(0x30)(Net, RepNotify, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	class UInteractableComponent*                InteractorLockInteractable;                        // 0x118(0x8)(ExportObject, Net, ZeroConstructor, InstancedReference, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FHitResult                            CurrentInteractionHitResult;                       // 0x120(0xE8)(Transient, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	TMap<enum class EInteractEventIndex, bool>   HoldingInteractDown;                               // 0x208(0x50)(NativeAccessSpecifierPrivate)
	uint8                                        Pad_2EE4[0x18];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("InteractorComponent");
		return Clss;
	}

	bool UnlockPlayerFromInteractable(struct FVAL_InteractorLockParams& InLockParams);
	void UnhighlightInteractable();
	void RpcServer_UseEquippedOutward(class UInteractableComponent* InComponent, TArray<struct FServerUseEventParams>& InUseParams);
	void RpcServer_RemovePersistActors(class AHousingOwnershipActor* InHomeOwner, TArray<struct FSessionActorId>& InObjs);
	void RpcServer_NotifySuccessfulClientInteract(class UInteractableComponent* InComponent);
	void RpcServer_InteractWithHighlighted(TArray<class UObject*>& InObjs, class UInteractableComponent* InComponent, const struct FInteractEventParams& InParams);
	void RpcClient_ClearInteractLock();
	void ResetInteractEventThrottleCounter();
	void OnRep_InteractorLock_Interactable();
	void OnRep_InteractorLock(const struct FVAL_InteractorInteractableLock& InOldInteractorLock);
	bool LockPlayerToInteractable(const struct FVAL_InteractorLockParams& InLockParams);
	bool K2_GetLockParams(struct FVAL_InteractorLockParams* InOutLockParams);
	bool IsPlayerLockedToInteractable();
	struct FUseEventResults InteractWithHighlighted(const struct FInteractEventParams& InParams);
	void HighlightInteractable(class UInteractableComponent* InComponent);
	void HandlePawnControllerChanged(class APawn* InPawn, class AController* InController);
	void HandleInteractLockTimerExpired();
	void HandleInteractDisabledTimerExpired();
	void HandleInteractableClaimedLocationChanged(struct FVAL_InteractorLockParams& InLockParams, class UInteractorComponent* InInteractorComponent, bool InbLocationClaimed);
	void DisableInteractTemporarily(float InDisabledTime);
	bool Client_TryInteractableLockSetup();
	bool CanPlayerChangeLockWith(struct FVAL_InteractorLockParams& InLockParams, enum class EVAL_InteractorOperation InOperation, bool InTriggerWarnings);
	bool CanInteract();
};

// 0x0 (0x28 - 0x28)
// Class Palia.InventoryGlobals
class UInventoryGlobals : public UObject
{
public:

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("InventoryGlobals");
		return Clss;
	}

};

// 0xA0 (0x140 - 0xA0)
// Class Palia.InventoryRequestComponent
class UInventoryRequestComponent : public UActorComponent
{
public:
	TMap<struct FGuid, struct FVAL_PendingFulfillInventoryRequestDelegates> PendingFulfillInventoryRequestDelegatesByOperationId; // 0xA0(0x50)(NativeAccessSpecifierPrivate)
	TMap<struct FGuid, struct FVAL_PendingClaimInventoryRequestDelegates> PendingClaimInventoryRequestDelegatesByOperationId; // 0xF0(0x50)(NativeAccessSpecifierPrivate)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("InventoryRequestComponent");
		return Clss;
	}

	void RpcServer_FulfillInventoryRequest(struct FGuid& InOperationId, struct FInventoryRequest& InInventoryRequest);
	void RpcServer_CreateRequest(struct FCreateInventoryRequest& InInventoryRequest);
	void RpcServer_ClaimInventoryRequest(struct FGuid& InOperationId, struct FInventoryRequest& InInventoryRequest);
	void RpcClient_RequestCreationSucceeded(struct FInventoryRequest& InInventoryRequest);
	void RpcClient_RequestCreationFailed();
	void RpcClient_FulfillInventoryRequestSucceeded(struct FGuid& InOperationId, struct FInventoryRequest& InInventoryRequest);
	void RpcClient_FulfillInventoryRequestFailed(struct FGuid& InOperationId, class FText& InErrorText);
	void RpcClient_ClaimInventoryRequestSucceeded(struct FGuid& InOperationId, struct FInventoryRequest& InInventoryRequest);
	void RpcClient_ClaimInventoryRequestFailed(struct FGuid& InOperationId, class FText& InErrorText);
};

// 0x1B0 (0x1E0 - 0x30)
// Class Palia.InventoryRequestManager
class UInventoryRequestManager : public ULocalPlayerSubsystem
{
public:
	FMulticastInlineDelegateProperty_            OnCreateRequestSucceeded;                          // 0x30(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnCreateRequestFailed;                             // 0x40(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnActiveRequestChanged;                            // 0x50(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnOpenRequestsChanged;                             // 0x60(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnRequestCompleted;                                // 0x70(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                        Pad_2F20[0x160];                                   // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("InventoryRequestManager");
		return Clss;
	}

	int32 TryGetNumMaxRequests();
	int32 TryGetNumAvailableRequests();
	int32 TryGetNumActiveRequests();
	bool TryGetActiveRequests(TArray<struct FInventoryRequest>* InOutActiveRequests);
	bool TryGetActiveRequestById(struct FGuid& InInventoryRequestId, struct FInventoryRequest* InOutActiveRequest);
	bool TryGetActiveRequest(struct FInventoryRequest& InInventoryRequest, struct FInventoryRequest* InOutActiveRequest);
	void RefreshAllOpenRequests();
	void RefreshActiveRequests();
	void OnRequestCompleted__DelegateSignature(class UInventoryRequestManager* InInventoryRequestManager, const struct FInventoryRequest& InInventoryRequest);
	void OnOpenRequestsChanged__DelegateSignature(class UInventoryRequestManager* InInventoryRequestManager);
	void OnCreateRequest_Succeeded__DelegateSignature(const struct FInventoryRequest& InInventoryRequest);
	void OnCreateRequest_Failed__DelegateSignature(const class FString& InErrorMsg);
	void OnActiveRequestChanged__DelegateSignature(class UInventoryRequestManager* InInventoryRequestManager);
	bool HasActiveRequest(TSoftObjectPtr<class UVAL_ItemTypeDefinitionAsset>& InItem, bool* InbOutIsReadyToClaim, int32 InAmount);
	void HandleNewControlMessage(struct FControlMessage& InMessage);
	TArray<struct FInventoryRequest> GetAllOpenRequests();
	bool FulfillRequest(struct FInventoryRequest& InInventoryRequest, FDelegateProperty_ InOnSuccess, FDelegateProperty_ InOnFailure);
	bool ClaimActiveRequest(struct FInventoryRequest& InInventoryRequest, FDelegateProperty_ InOnSuccess, FDelegateProperty_ InOnFailure);
	bool CanMakeAnotherRequest(int32* InOutNumRequestsAvailable);
	bool CancelActiveRequest(struct FInventoryRequest& InInventoryRequest, FDelegateProperty_ InOnSuccess, FDelegateProperty_ InOnFailure);
};

// 0x10 (0x40 - 0x30)
// Class Palia.ServerInventoryRequestManager
class UServerInventoryRequestManager : public UGameInstanceSubsystem
{
public:
	uint8                                        Pad_2F2E[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("ServerInventoryRequestManager");
		return Clss;
	}

};

// 0x30 (0x68 - 0x38)
// Class Palia.VAl_InventoryRequestSettings
class UVAl_InventoryRequestSettings : public UDeveloperSettings
{
public:
	class FText                                  PersonalFulfilledText;                             // 0x38(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, Config, NativeAccessSpecifierPublic)
	class FText                                  CharacterFulfilledText;                            // 0x50(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, Config, NativeAccessSpecifierPublic)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("VAl_InventoryRequestSettings");
		return Clss;
	}

};

// 0x88 (0xB0 - 0x28)
// Class Palia.Invitation
class UInvitation : public UObject
{
public:
	struct FUniqueNetIdRepl                      SenderNetId;                                       // 0x28(0x30)(BlueprintVisible, BlueprintReadOnly, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FUniqueNetIdRepl                      RecipientNetId;                                    // 0x58(0x30)(BlueprintVisible, BlueprintReadOnly, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                ServerName;                                        // 0x88(0x10)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                InstanceAddressAndPort;                            // 0x98(0x10)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FDateTime                             ExpiryTime;                                        // 0xA8(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("Invitation");
		return Clss;
	}

};

// 0x68 (0x98 - 0x30)
// Class Palia.InvitationManager
class UInvitationManager : public ULocalPlayerSubsystem
{
public:
	FMulticastInlineDelegateProperty_            OnInviteReceived;                                  // 0x30(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnInviteFailed;                                    // 0x40(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnInviteAccepted;                                  // 0x50(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnInviteDeclined;                                  // 0x60(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	TArray<class UInvitation*>                   SentInvitations;                                   // 0x70(0x10)(ZeroConstructor, NativeAccessSpecifierPrivate)
	TArray<class UInvitation*>                   ReceivedInvitations;                               // 0x80(0x10)(ZeroConstructor, NativeAccessSpecifierPrivate)
	struct FTimerHandle                          Client_CheckServerSyncRequestsHandle;              // 0x90(0x8)(NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("InvitationManager");
		return Clss;
	}

	void OnInviteFailed__DelegateSignature(class UInvitation* InInvitation, enum class EInvitationFailureReason InFailureReason);
	void OnInvite__DelegateSignature(class UInvitation* InInvitation);
	void InvitePlayer(struct FUniqueNetIdRepl& InUserId);
	bool HasPendingSentInvitation(struct FUniqueNetIdRepl& InUserId);
	void HandleNewControlMessage(struct FControlMessage& InControlMessage);
	TArray<class UInvitation*> GetSentInvitations();
	TArray<class UInvitation*> GetReceivedInvitations();
	void DeclineInvite(class UInvitation* InInvitation);
	void AcceptInvite(class UInvitation* InInvitation);
};

// 0x40 (0x70 - 0x30)
// Class Palia.GardenBuffConfig
class UGardenBuffConfig : public UDataAsset
{
public:
	enum class EGardenBuffEffectType             EffectType;                                        // 0x30(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2F42[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FText                                  DisplayName;                                       // 0x38(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	class UTexture2D*                            Icon;                                              // 0x50(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTexture2D*                            CompanionIcon;                                     // 0x58(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                          FertilizerColor;                                   // 0x60(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("GardenBuffConfig");
		return Clss;
	}

};

// 0x10 (0x40 - 0x30)
// Class Palia.ItemUpgradeConfig
class UItemUpgradeConfig : public UDataAsset
{
public:
	TArray<struct FItemUpgradeMapping>           Upgrades;                                          // 0x30(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("ItemUpgradeConfig");
		return Clss;
	}

};

// 0x68 (0x108 - 0xA0)
// Class Palia.ItemTrackingComponent
class UItemTrackingComponent : public UActorComponent
{
public:
	uint8                                        Pad_2F4D[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FItemTrackingHistory                  History;                                           // 0xA8(0x10)(Net, NativeAccessSpecifierPrivate)
	struct FItemTrackingPersistBlock             ItemTrackingPersistBlock;                          // 0xB8(0x50)(NativeAccessSpecifierPrivate)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("ItemTrackingComponent");
		return Clss;
	}

	int32 GetNumberOfTimesPurchased(TSoftObjectPtr<class UVAL_ItemTypeDefinitionAsset>& InItemType);
};

// 0x10 (0xB0 - 0xA0)
// Class Palia.ItemUpgradeComponent
class UItemUpgradeComponent : public UActorComponent
{
public:
	class UInventoryComponent*                   Inventory;                                         // 0xA0(0x8)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class URecipeInventoryComponent*             RecipeInventory;                                   // 0xA8(0x8)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("ItemUpgradeComponent");
		return Clss;
	}

	bool UpgradeToolWithKit(struct FBagSlotLocation& InToolSlot, struct FBagSlotLocation& InUpgradeKitSlot);
	bool UpgradeTool(struct FBagSlotLocation& InToolSlot);
	void RpcServer_UpgradeToolWithKit(struct FBagSlotLocation& InToolSlot, struct FBagSlotLocation& InUpgradeKitSlot);
	void RpcServer_RepairTool(class AActor* InRepairStationActor, struct FBagSlotLocation& InToolSlot, int32 InKits, bool InbAllowRepairKitsFromStorage);
	void RpcServer_PurchaseRepair(class AActor* InRepairStationActor, struct FBagSlotLocation& InToolSlot, int32 InGoldSpent);
	void RpcServer_PurchaseFullRepair(class AActor* InRepairStationActor, struct FBagSlotLocation& InToolSlot);
	void RpcServer_FullyRepairTool(class AActor* InRepairStationActor, struct FBagSlotLocation& InToolSlot, bool InbAllowRepairKitsFromStorage);
	void RepairTool(class AActor* InRepairStationActor, struct FBagSlotLocation& InToolSlot, int32 InRepairKits, bool InbAllowRepairKitsFromStorage);
	void PurchaseRepair(class AActor* InRepairStationActor, struct FBagSlotLocation& InToolSlot, int32 InGoldSpent);
	void PurchaseFullRepair(class AActor* InRepairStationActor, struct FBagSlotLocation& InToolSlot);
	bool IsSlotUpgradeKit(struct FBagSlotLocation& InItemSlot);
	int32 GetRepairKitsRequired(struct FValeriaItem& InToolItem, int32* InRepairPerKit);
	int32 GetRepairKitsAvailable(bool InbAllowRepairKitsFromStorage);
	int32 GetCoinsRepairCost(struct FValeriaItem& InToolItem, float* InRepairPerGold);
	void FullyRepairTool(class AActor* InRepairStationActor, struct FBagSlotLocation& InToolSlot, bool InbAllowRepairKitsFromStorage);
	bool CanUpgradeToolWithKit(struct FBagSlotLocation& InToolSlot, struct FBagSlotLocation& InUpgradeKitSlot);
	bool CanUpgradeTool(struct FBagSlotLocation& InToolSlot);
};

// 0x60 (0x100 - 0xA0)
// Class Palia.ItemVariantComponent
class UItemVariantComponent : public UActorComponent
{
public:
	uint8                                        Pad_2FBA[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	FMulticastInlineDelegateProperty_            OnItemVariantChanged;                              // 0xA8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	int32                                        TintPersistID;                                     // 0xB8(0x4)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2FBC[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSoftObjectPtr<class UVAL_ItemTypeDefinitionAsset> ItemAssetOverride;                                 // 0xC0(0x30)(UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<struct FDefaultVariantMaterialAssignment> Originals;                                         // 0xF0(0x10)(ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("ItemVariantComponent");
		return Clss;
	}

	void SetTintPersistID(int32 InTintPersistID);
	void SetItemAssetOverride(TSoftObjectPtr<class UVAL_ItemTypeDefinitionAsset>& InItemAssetOverride);
	void OnRep_TintPersistID();
	int32 GetTintPersistID();
	TSoftObjectPtr<class UVAL_ItemTypeDefinitionAsset> GetItemAssetOverride();
};

// 0x8 (0xA8 - 0xA0)
// Class Palia.ItemVariantCustomizerComponent
class UItemVariantCustomizerComponent : public UActorComponent
{
public:
	uint8                                        Pad_2FCC[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("ItemVariantCustomizerComponent");
		return Clss;
	}

	struct FUseEventResult OnClientInteract(class UInteractableComponent* InInteractable, class AValeriaPlayerController* InVpc, const struct FInteractEventParams& InEventParams);
	bool IsInteractable(class AValeriaCharacter* InVC, const struct FInteractEventParams& InEventParams);
	int32 InteractPriority();
	bool HasRequirementsToSwitchVariant(class AValeriaPlayerController* InVpc, const struct FValeriaItem& InItem, int32 InTintPersistID);
	bool GetText(class AValeriaCharacter* InVC, enum class EInteractEventIndex InEventIndex, struct FGetTextParams* InParams);
};

// 0x50 (0x80 - 0x30)
// Class Palia.LanguageGlobalConfig
class ULanguageGlobalConfig : public UDataAsset
{
public:
	TMap<class FString, struct FLanguageMapping> Mappings;                                          // 0x30(0x50)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("LanguageGlobalConfig");
		return Clss;
	}

};

// 0x78 (0x118 - 0xA0)
// Class Palia.LevelerComponent
class ULevelerComponent : public UActorComponent
{
public:
	uint8                                        Pad_3021[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	FMulticastInlineDelegateProperty_            OnLevelChanged;                                    // 0xB0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FTimerHandle                          UpgradeCompleteTimerHandle;                        // 0xC0(0x8)(NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        CurrentLevel;                                      // 0xC8(0x4)(Edit, BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FName                                  LevelerConfigName;                                 // 0xCC(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_3024[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FLevelerProgress                      LevelerProgress;                                   // 0xD8(0x28)(Net, RepNotify, NativeAccessSpecifierPrivate)
	uint8                                        Pad_3025[0x18];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("LevelerComponent");
		return Clss;
	}

	void Server_OnCheckTimerCompleted();
	void OnServerUsedEquippedOnMe(class AValeriaPlayerController* InPlayer, const struct FServerUseEventParams& InParams);
	struct FServerUseEventResult OnServerInteract(class UInteractableComponent* InInteractable, class AValeriaCharacter* InCharacter, const struct FInteractEventParams& InEventParams);
	void OnReplicated_Progress();
	void OnReplicated_CurrentLevel();
	struct FUseEventResult OnClientUsedEquippedOnMe(class AValeriaPlayerController* InPlayer, const struct FUseEventParams& InParams);
	struct FUseEventResult OnClientInteract(class UInteractableComponent* InInteractable, class AValeriaPlayerController* InPlayer, const struct FInteractEventParams& InEventParams);
	bool IsTimedRequirementForLevelUp();
	bool IsTimedRequirementCompletedForLevelUp();
	bool IsInteractable(class AValeriaCharacter* InCharacter, const struct FInteractEventParams& InEventParams);
	bool IsAtMaxLevel();
	int32 InteractPriority();
	bool HasBegunLeveling();
	bool GetText(class AValeriaCharacter* InCharacter, enum class EInteractEventIndex InEventIndex, struct FGetTextParams* InParams);
	int64 GetRemainingTimeForCompletionMs();
	int32 GetItemProgress(TSoftObjectPtr<class UVAL_ItemTypeDefinitionAsset>& InItemType);
	int64 GetEndTimeForCompletionMs();
	int32 GetCurrentLevel();
	void CheckTimerCompleted(class ULevelerComponent* InLeveler);
	void AttemptToLevelUp(class AValeriaCharacter* InCharacter, bool InIgnoreCost);
	void AddItemToDeduct(class UVAL_ItemTypeDefinitionAsset* InItemType, int32 InAmount);
};

// 0x400 (0x430 - 0x30)
// Class Palia.LightingBaseState
class ULightingBaseState : public UDataAsset
{
public:
	bool                                         bAffectRotation;                                   // 0x30(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3028[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FRotator                              Rotation;                                          // 0x38(0x18)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	float                                        DirectionalLightIntensity;                         // 0x50(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FColor                                DirectionalLightColor;                             // 0x54(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SourceAngle;                                       // 0x58(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SoftSourceAngle;                                   // 0x5C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        DirectionalIndirectLightingIntensity;              // 0x60(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        DirectionalVolumetricScatteringIntensity;          // 0x64(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ShadowAmount;                                      // 0x68(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SkyLightIntensity;                                 // 0x6C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FColor                                SkyLightColor;                                     // 0x70(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                          SkyLightLowerHemisphereColor;                      // 0x74(0x10)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SkyIndirectLightingIntensity;                      // 0x84(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SkyVolumetricScatteringIntensity;                  // 0x88(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        FogDensity;                                        // 0x8C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        FogHeightFalloff;                                  // 0x90(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FExponentialHeightFogData             SecondFogData;                                     // 0x94(0xC)(Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
	struct FLinearColor                          FogInscatteringColor;                              // 0xA0(0x10)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        FogMaxOpacity;                                     // 0xB0(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        StartDistance;                                     // 0xB4(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        FogCutoffDistance;                                 // 0xB8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_302B[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FLightingStatePostProcess             PostProcessSettings;                               // 0xC0(0x330)(Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
	float                                        HorizonHeight;                                     // 0x3F0(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        HorizonHardness;                                   // 0x3F4(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ZenithHeight;                                      // 0x3F8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ZenithHardness;                                    // 0x3FC(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                          HorizonSkyColor;                                   // 0x400(0x10)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                          ZenithSkyColor;                                    // 0x410(0x10)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                          ZenithSkyColor2;                                   // 0x420(0x10)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("LightingBaseState");
		return Clss;
	}

};

// 0x0 (0x30 - 0x30)
// Class Palia.LightingModState
class ULightingModState : public UDataAsset
{
public:

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("LightingModState");
		return Clss;
	}

};

// 0x30 (0xD0 - 0xA0)
// Class Palia.LimitedEventActivatorComponent
class ULimitedEventActivatorComponent : public UActorComponent
{
public:
	FMulticastInlineDelegateProperty_            OnLimitedEventActivated;                           // 0xA0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnLimitedEventDeactivated;                         // 0xB0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	class ULimitedEventDataAsset*                LimitedEvent;                                      // 0xC0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bDefaultToInactive;                                // 0xC8(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bHideActor;                                        // 0xC9(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bDisableCollision;                                 // 0xCA(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bDisableAKCulledComponents;                        // 0xCB(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bPropagateToChildActors;                           // 0xCC(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bHideTrackers;                                     // 0xCD(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_302E[0x2];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("LimitedEventActivatorComponent");
		return Clss;
	}

	bool IsEventActive();
	void HandleEventStateChanged(class ALimitedEventManagerBase* InEventManager, bool InbIsEventActive);
	void HandleEventManagerRegistered(class ULimitedEventDataAsset* InEvent, class ALimitedEventManagerBase* InEventManager);
};

// 0x90 (0xC0 - 0x30)
// Class Palia.LimitedEventDataAsset
class ULimitedEventDataAsset : public UDataAsset
{
public:
	TSoftObjectPtr<class UTexture2D>             EventIcon;                                         // 0x30(0x30)(Edit, BlueprintVisible, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGuid                                 EventId;                                           // 0x60(0x10)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, AssetRegistrySearchable, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FText                                  EventName;                                         // 0x70(0x18)(Edit, BlueprintVisible, DisableEditOnInstance, NativeAccessSpecifierPublic)
	class FText                                  EventDescription;                                  // 0x88(0x18)(Edit, BlueprintVisible, DisableEditOnInstance, NativeAccessSpecifierPublic)
	bool                                         bIsEnabled;                                        // 0xA0(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bDisplayPreview;                                   // 0xA1(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIsDynamic;                                        // 0xA2(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3030[0x5];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FDateTime                             StartTime;                                         // 0xA8(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FDateTime                             EndTime;                                           // 0xB0(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class ALimitedEventManagerBase>  ManagerClass;                                      // 0xB8(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("LimitedEventDataAsset");
		return Clss;
	}

	TArray<class FName> GetAllEventNames();
};

// 0xA0 (0x330 - 0x290)
// Class Palia.LimitedEventManagerBase
class ALimitedEventManagerBase : public AActor
{
public:
	FMulticastInlineDelegateProperty_            OnEventStateChanged;                               // 0x290(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TArray<TSoftObjectPtr<class UVAL_ItemTypeDefinitionAsset>> EventExclusiveItems;                               // 0x2A0(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)
	class FString                                AchievementCategory;                               // 0x2B0(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftClassPtr<class UUserWidget>             EventMenuWidget;                                   // 0x2C0(0x30)(Edit, BlueprintVisible, BlueprintReadOnly, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftClassPtr<class UUserWidget>             EventMenuPreviewWidget;                            // 0x2F0(0x30)(Edit, BlueprintVisible, BlueprintReadOnly, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bEventActive;                                      // 0x320(0x1)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_3033[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class ULimitedEventDataAsset*                EventDataAsset;                                    // 0x328(0x8)(Net, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("LimitedEventManagerBase");
		return Clss;
	}

	void OnRep_bEventActive();
	bool IsEventActive();
	void HandleEventDeactivated();
	void HandleEventActivated();
	class ULimitedEventDataAsset* GetEventDataAsset();
};

// 0xD0 (0x400 - 0x330)
// Class Palia.LimitedEventManagerMajiMarket
class ALimitedEventManagerMajiMarket : public ALimitedEventManagerBase
{
public:
	FMulticastInlineDelegateProperty_            OnMarketOpen;                                      // 0x330(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnMarketClose;                                     // 0x340(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FTimeOfDayHourMinute                  MarketOpenTime;                                    // 0x350(0x8)(Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
	struct FTimeOfDayHourMinute                  MarketCloseTime;                                   // 0x358(0x8)(Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
	struct FTimeOfDayHourMinute                  ChapaaChaseStartTime;                              // 0x360(0x8)(Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
	struct FTimeOfDayHourMinute                  FireworkShowStartTime;                             // 0x368(0x8)(Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnPlayerEnteredSpace;                              // 0x370(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnPlayerExitedSpace;                               // 0x380(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnFireworkShowStarted;                             // 0x390(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TArray<TSoftObjectPtr<class UVAL_ItemTypeDefinitionAsset>> FireworkItemsToTrack;                              // 0x3A0(0x10)(Edit, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)
	uint8                                        Pad_3045[0x30];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         bIsMarketOpen;                                     // 0x3E0(0x1)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_3046[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class AValeriaPlayerController*>      CurrentPlayersInSpace;                             // 0x3E8(0x10)(ZeroConstructor, NativeAccessSpecifierPrivate)
	class AChapaaChaseManager*                   CachedChapaaChaseManager;                          // 0x3F8(0x8)(ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("LimitedEventManagerMajiMarket");
		return Clss;
	}

	void RpcNetMulticast_FireworkShowStarted();
	void PlayerExitedSpace(class AValeriaPlayerController* InPlayer);
	void PlayerEnteredSpace(class AValeriaPlayerController* InPlayer);
	void OnRep_bIsMarketOpen();
	bool IsPlayerInSpace(class AValeriaPlayerController* InPlayer);
	bool IsMarketOpen();
	void HandlePlayerFiredProjetile(class UProjectileFiringComponent* InFiringComponent, class AValeriaProjectile* InProjectile, TSoftObjectPtr<class UVAL_ItemTypeDefinitionAsset> InAmmo, TSoftObjectPtr<class UVAL_ItemTypeDefinitionAsset> InTool);
	void HandleMarketOpenOrCloseEvent(struct FVAL_TimerHandle* InTimerHandle);
	void HandleChapaaChaseStart(struct FVAL_TimerHandle* InTimerHandle);
	TArray<class AValeriaPlayerController*> GetPlayersInSpace();
	class AChapaaChaseManager* GetChapaaChaseManager();
};

// 0x38 (0x68 - 0x30)
// Class Palia.LimitedEventSubsystem
class ULimitedEventSubsystem : public UWorldSubsystem
{
public:
	FMulticastInlineDelegateProperty_            OnAnyEventStateChanged;                            // 0x30(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnLimitedEventManagerRegistered;                   // 0x40(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TArray<struct FLimitedEventMetadata>         CurrentEvents;                                     // 0x50(0x10)(ZeroConstructor, NativeAccessSpecifierPrivate)
	uint8                                        Pad_3068[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("LimitedEventSubsystem");
		return Clss;
	}

	bool IsEventPreview(class ULimitedEventDataAsset* InLimitedEventDataAsset);
	bool IsEventIdActive(struct FGuid& InEventId);
	bool IsEventActive(class ULimitedEventDataAsset* InLimitedEventDataAsset);
	bool IsAnyEventActive();
	void HandleEventStateChange(class ALimitedEventManagerBase* InEventManager, bool InbIsEventActive);
	class FString GetEventNameById(struct FGuid& InEventId);
	class ALimitedEventManagerBase* GetEventManager(class ULimitedEventDataAsset* InLimitedEventDataAsset);
	struct FGuid GetEventIdByName(class FName& InEventName);
	TArray<TSoftObjectPtr<class ULimitedEventDataAsset>> GetAllPreviewEvents();
	TArray<TSoftObjectPtr<class ULimitedEventDataAsset>> GetActiveEvents();
};

// 0x0 (0xA0 - 0xA0)
// Class Palia.LocalStateComponent
class ULocalStateComponent : public UActorComponent
{
public:

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("LocalStateComponent");
		return Clss;
	}

};

// 0x30 (0xD0 - 0xA0)
// Class Palia.LonelyActorTrackingComponent
class ULonelyActorTrackingComponent : public UActorComponent
{
public:
	FMulticastInlineDelegateProperty_            OnActorAloneChanged;                               // 0xA0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	bool                                         bIsNeverLonely;                                    // 0xB0(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_306B[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        SecondsBeforeDeactivating;                         // 0xB4(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        LastAloneTime;                                     // 0xB8(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bIsMarkedAlone;                                    // 0xBC(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bIsReallyAlone;                                    // 0xBD(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_306D[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class UActorComponent*>               ComponentsToDeactivate;                            // 0xC0(0x10)(ExportObject, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("LonelyActorTrackingComponent");
		return Clss;
	}

	void ActorAloneChanged(bool InIsNowAlone);
};

// 0x78 (0xA8 - 0x30)
// Class Palia.LonelyActorTrackingManager
class ULonelyActorTrackingManager : public UGameInstanceSubsystem
{
public:
	float                                        GridSize;                                          // 0x30(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        PlayerGridRange;                                   // 0x34(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class ULonelyActorTrackingComponent*> WatchList;                                         // 0x38(0x10)(ExportObject, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	uint8                                        Pad_306F[0x50];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	struct FTimerHandle                          UpdateAloneStatusTimerHandle;                      // 0x98(0x8)(NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FTimerHandle                          UpdateDebugViewTimerHandle;                        // 0xA0(0x8)(NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("LonelyActorTrackingManager");
		return Clss;
	}

};

// 0x48 (0xE8 - 0xA0)
// Class Palia.LootInteractorBaseComponent
class ULootInteractorBaseComponent : public UActorComponent
{
public:
	uint8                                        Pad_308F[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         DisallowItemsGrantingAccomplishmentProgress;       // 0xA8(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3090[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	FMulticastInlineDelegateProperty_            OnCharacterGatheredLoot;                           // 0xB0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	bool                                         UseAbilityGather;                                  // 0xC0(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_3091[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FText                                  LootInteractionOverrideText;                       // 0xC8(0x18)(Edit, Protected, NativeAccessSpecifierProtected)
	bool                                         bInteractionDisabled;                              // 0xE0(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bShowLootPromptWithFullInventory;                  // 0xE1(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bAllowLootToEnterOverflowBag;                      // 0xE2(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_3092[0x5];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("LootInteractorBaseComponent");
		return Clss;
	}

	bool Server_TriggerGather(class AValeriaCharacter* InCharacter);
	struct FServerUseEventResult OnServerInteract(class UInteractableComponent* InInteractable, class AValeriaCharacter* InCharacter, const struct FInteractEventParams& InEventParams);
	struct FUseEventResult OnClientInteract(class UInteractableComponent* InInteractable, class AValeriaPlayerController* InCharacter, const struct FInteractEventParams& InEventParams);
	bool IsInteractable(class AValeriaCharacter* InCharacter, const struct FInteractEventParams& InEventParams);
	int32 InteractPriority();
	bool GetText(class AValeriaCharacter* InCharacter, enum class EInteractEventIndex InEventIndex, struct FGetTextParams* InParams);
};

// 0x28 (0x110 - 0xE8)
// Class Palia.StaticLootInteractorComponent
class UStaticLootInteractorComponent : public ULootInteractorBaseComponent
{
public:
	TArray<struct FQuestReward>                  Loot;                                              // 0xE8(0x10)(ZeroConstructor, Transient, Protected, NativeAccessSpecifierProtected)
	TArray<struct FQuestRewardConfig>            RewardConfiguration;                               // 0xF8(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	bool                                         bAutoDisableWhenNoQuestsCanStart;                  // 0x108(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bAutoDisableWhenTagWritebackAlreadySet;            // 0x109(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_3093[0x6];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("StaticLootInteractorComponent");
		return Clss;
	}

};

// 0x58 (0x140 - 0xE8)
// Class Palia.LootInteractorComponent
class ULootInteractorComponent : public ULootInteractorBaseComponent
{
public:
	TArray<struct FQuestReward>                  SelectedLoot;                                      // 0xE8(0x10)(Net, ZeroConstructor, NativeAccessSpecifierPrivate)
	uint8                                        Pad_3097[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class AValeriaCharacter*>             PlayersToGrantLootTo;                              // 0x100(0x10)(ZeroConstructor, NativeAccessSpecifierPrivate)
	uint8                                        Pad_3098[0x30];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("LootInteractorComponent");
		return Clss;
	}

	void SetAchievementCreditType(enum class ELootAchievementCreditType InType);
};

// 0xC8 (0x168 - 0xA0)
// Class Palia.MailboxComponent
class UMailboxComponent : public UActorComponent
{
public:
	FMulticastInlineDelegateProperty_            OnUpdateMailCallSuccess;                           // 0xA0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnUpdateMailCallFailure;                           // 0xB0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnSendMailCallSuccess;                             // 0xC0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnSendMailCallFailure;                             // 0xD0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnGetMailCallSuccess;                              // 0xE0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnGetMailCallFailure;                              // 0xF0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	class UMailboxStorage*                       MailboxStorage;                                    // 0x100(0x8)(ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_30B7[0x60];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("MailboxComponent");
		return Clss;
	}

	void TakeMailAction(const class FString& InMailId);
	void SendMail(const struct FMail& InMail);
	void RpcServer_TakeMailAction(const class FString& InMailId);
	void RpcServer_SetReadStatus(const class FString& InMailId, enum class EReadStatus InReadStatus);
	void RpcServer_SendMail(const struct FMail& InMail);
	void RpcServer_GetMail(const struct FMailboxFilter& InMailboxFilter);
	void RpcClient_NotifyUpdateSuccess();
	void RpcClient_NotifyUpdateFailure(const class FString& InError);
	void RpcClient_NotifySendSuccess();
	void RpcClient_NotifySendFailure(const class FString& InError);
	void RpcClient_GetMailResult(struct FMailbox& InMailbox);
	void RpcClient_GetMailFailure(const class FString& InError);
	void MarkMailOpened(const class FString& InMailId);
	class UValeriaGameInstance* GetValeriaGameInstance();
	class AValeriaCharacter* GetValeriaCharacter();
	class FString GetUserId();
	void GetMail(const struct FMailboxFilter& InMailboxFilter);
	class FString GetCharacterName();
	void DeleteMail(const class FString& InMailId);
	void ArchiveMail(const class FString& InMailId);
};

// 0x0 (0x28 - 0x28)
// Class Palia.MailboxStorage
class UMailboxStorage : public UObject
{
public:

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("MailboxStorage");
		return Clss;
	}

};

// 0x40 (0x2E0 - 0x2A0)
// Class Palia.MeleeAttackCollider
class UMeleeAttackCollider : public USceneComponent
{
public:
	float                                        CollisionRadius;                                   // 0x2A0(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ECollisionChannel                 DesiredCollisionTag;                               // 0x2A4(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_30BE[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	FMulticastInlineDelegateProperty_            OnShapeCastHitDetected;                            // 0x2A8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                        Pad_30BF[0x28];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("MeleeAttackCollider");
		return Clss;
	}

};

// 0x40 (0xE0 - 0xA0)
// Class Palia.MeleeAttackComponent
class UMeleeAttackComponent : public UActorComponent
{
public:
	FMulticastInlineDelegateProperty_            OnHitValidTargetServerSide;                        // 0xA0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	float                                        DashDistance;                                      // 0xB0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_30CE[0x2C];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("MeleeAttackComponent");
		return Clss;
	}

	void TriggerDash(float InDashDuration);
	void TriggerComboIfInputQueued(bool InInputReleased);
	class AActor* SnapToFaceEnemyInRange(float InRadius, float InAllowedAngle, const struct FGameplayTag& InDesiredParticipationTag);
	void SetLastPerformedMeleeAttack(enum class EMeleeAttackType InType);
	void RpcServer_NotifyTargetHit(class AActor* InTarget);
	void NotifyTargetHitWithTargetData(const struct FGameplayAbilityTargetDataHandle& InTarget);
	void NotifyTargetHit(class AActor* InTarget);
	void NotifySwingReadyEnd();
	void NotifySwingReady();
	bool IsLocalClient();
	enum class EMeleeAttackType GetLastPerformedMeleeAttack();
	class AActor* GetEquippedMeleeWeapon();
	void FireAnalyticsEvent(class AActor* InHitActor);
	void EnableWeaponCollision(class FName InDesiredColliderTag);
	void DisableWeaponCollision(class FName InDesiredColliderTag);
};

// 0x58 (0x88 - 0x30)
// Class Palia.MessageTargetManager
class UMessageTargetManager : public ULocalPlayerSubsystem
{
public:
	FMulticastInlineDelegateProperty_            OnNewMessageTarget;                                // 0x30(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnMessageTargetRemoved;                            // 0x40(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	TArray<struct FMessageTarget>                KnownMessageTargets;                               // 0x50(0x10)(ZeroConstructor, NativeAccessSpecifierPrivate)
	uint8                                        Pad_30D7[0x28];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("MessageTargetManager");
		return Clss;
	}

	void RemoveKnownMessageTarget(const struct FMessageTarget& InTargetToRemove);
	struct FMessageTarget MakeMessageTarget_DirectMessage(struct FUniqueNetIdRepl& InRecipientNetId, const class FString& InCharacterName);
	struct FMessageTarget GetMostRecentDirectMessageTarget();
	TArray<struct FMessageTarget> GetKnownMessageTargets();
	void DumpAllKnownMessageTargets();
	void AddNewMessageTarget(const struct FMessageTarget& InNewTarget, int32 InIndex);
};

// 0x10 (0x48 - 0x38)
// Class Palia.MetaConfigsManager
class UMetaConfigsManager : public UDeveloperSettings
{
public:
	class FString                                MetaBaseURIDomain;                                 // 0x38(0x10)(Edit, ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("MetaConfigsManager");
		return Clss;
	}

};

// 0x30 (0xD0 - 0xA0)
// Class Palia.MinigameComponentBase
class UMinigameComponentBase : public UActorComponent
{
public:
	FMulticastInlineDelegateProperty_            OnStateChanged;                                    // 0xA0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	class AValeriaPlayerController*              CachedPlayer;                                      // 0xB0(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class AValeriaCharacter*                     CachedCharacter;                                   // 0xB8(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class AActor*                                CachedSourceActor;                                 // 0xC0(0x8)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class EMinigameState                    ServerMinigameState;                               // 0xC8(0x1)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	enum class EMinigameState                    ClientMinigameState;                               // 0xC9(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_30E1[0x6];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("MinigameComponentBase");
		return Clss;
	}

	bool StopMinigame(enum class EMinigameState InDesiredFinalState);
	void StartMinigame(class AActor* InSource);
	void RpcServer_ChangeState(enum class EMinigameState InNewState);
	void RpcClient_RejectStartMinigame();
	bool IsReadyToPlay();
	bool IsPlaying();
	bool IsPaused();
	bool IsInFinishedState();
};

// 0x168 (0x238 - 0xD0)
// Class Palia.MinigameComponentMasterQTE
class UMinigameComponentMasterQTE : public UMinigameComponentBase
{
public:
	uint8                                        Pad_3100[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	FMulticastInlineDelegateProperty_            OnSuccessfulInputReceived;                         // 0xE0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnExpectedInputMissed;                             // 0xF0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnMistimedInputReceived;                           // 0x100(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnMinigameEngaged;                                 // 0x110(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnMinigameDisengaged;                              // 0x120(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	float                                        MinigameResultLingerTime;                          // 0x130(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_3102[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FMinigameConfig                       ActiveConfig;                                      // 0x138(0xB8)(BlueprintVisible, BlueprintReadOnly, Net, Protected, NativeAccessSpecifierProtected)
	float                                        MinigameStartTime;                                 // 0x1F0(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        LastPressReceiveTime;                              // 0x1F4(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        LastReleaseReceiveTime;                            // 0x1F8(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_3103[0xC];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        SuccessCount;                                      // 0x208(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        PartialCompletion;                                 // 0x20C(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_3104[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         bMinigameConfigSet;                                // 0x214(0x1)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bToolAbilityShouldBeActive;                        // 0x215(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_3105[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FTimerHandle                          InputTimeHandle;                                   // 0x218(0x8)(NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FTimerHandle                          TimeUpHandle;                                      // 0x220(0x8)(NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FTimerHandle                          ResultLingerHandle;                                // 0x228(0x8)(NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FGameplayAbilitySpecHandle            ToolAbilityHandle;                                 // 0x230(0x4)(Net, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_3107[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("MinigameComponentMasterQTE");
		return Clss;
	}

	bool WouldInputNowBeSuccess();
	void WaitToStartMinigameWithConfig(class AActor* InSource, struct FMinigameConfig& InConfig);
	void StartMinigameWithConfig(class AActor* InSource, struct FMinigameConfig& InConfig);
	bool ShouldReceiveInput();
	void RpcServer_NotifyUpdatedSuccessCount(int32 InNewSuccessCount);
	void RpcServer_NotifyMistimedInputReceived();
	void ResumeFromPenalty();
	void OnTimeUp();
	void OnSuccessCountReplicated(int32 InOldSuccessCount);
	void OnInputPeriodTimeElapsed();
	struct FSelfUseEventResult OnClientUseEquippedOutward(class AValeriaPlayerController* InPlayer, const struct FUseEventParams& InParams);
	struct FUseEventResult OnClientInteract(class UInteractableComponent* InInteractable, class AValeriaPlayerController* InPlayer, const struct FInteractEventParams& InParams);
	void NotifyMistimedInputReceived();
	void NotifyExpectedInputMissed();
	bool IsToolAbilityValid();
	bool IsInteractable(class AValeriaCharacter* InCharacter, const struct FInteractEventParams& InEventParams);
	bool IsButtonHeld();
	int32 InteractPriority();
	bool IncrementSuccessCount();
	float GetTimeElapsed();
	float GetTargetPosition();
	struct FMinigameConfig GetMinigameConfig();
	float GetCursorPosition();
	float GetCompletion();
	float GetAnimationNormalizedTime(int32 InNumCyclesPerAnim);
	void ClearToolAbility();
	void ClearResults();
};

// 0x138 (0x208 - 0xD0)
// Class Palia.MinigameComponentTilling
class UMinigameComponentTilling : public UMinigameComponentBase
{
public:
	TArray<class AGardenTile*>                   AvailableGardenActors;                             // 0xD0(0x10)(ZeroConstructor, NativeAccessSpecifierPrivate)
	TMap<int32, class AGardenTile*>              TillingMaskRequests;                               // 0xE0(0x50)(NativeAccessSpecifierPrivate)
	TMap<class AGardenTile*, int64>              LastReadPixelsTimestamps;                          // 0x130(0x50)(NativeAccessSpecifierPrivate)
	uint8                                        Pad_310D[0x50];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UMaterialInstanceDynamic*              TillingSplatBrush;                                 // 0x1D0(0x8)(ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        TimeSpentOnCurrentTillSwing;                       // 0x1D8(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        TillSwingDurationSecs;                             // 0x1DC(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FVector2D                             TillSwingStartOffset;                              // 0x1E0(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FVector2D                             TillSwingEndOffset;                                // 0x1F0(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_310E[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("MinigameComponentTilling");
		return Clss;
	}

	void Till();
};

// 0x38 (0xD8 - 0xA0)
// Class Palia.MirrorImageSpawningComponent
class UMirrorImageSpawningComponent : public UActorComponent
{
public:
	FMulticastInlineDelegateProperty_            OnMirrorImageSpawn;                                // 0xA0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	float                                        IllusionSpawnRadius;                               // 0xB0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        DesiredIllusionCount;                              // 0xB4(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class AActor>                    IllusionTemplate;                                  // 0xB8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class AActor*>                        SpawnedImages;                                     // 0xC0(0x10)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	uint8                                        Pad_3118[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("MirrorImageSpawningComponent");
		return Clss;
	}

	void SpawnMirrorImages(int32 InCopiesToSpawn);
	void RpcClient_DisplaySpawn(TArray<class AActor*>& InSpawnedImages);
	class ACreatureCharacter* GetCreator();
};

// 0x0 (0x28 - 0x28)
// Class Palia.MusicManager
class UMusicManager : public UObject
{
public:

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("MusicManager");
		return Clss;
	}

	void Initialize();
};

// 0x70 (0xA0 - 0x30)
// Class Palia.MusicSubsystem
class UMusicSubsystem : public UGameInstanceSubsystem
{
public:
	FMulticastInlineDelegateProperty_            OnNoteStart;                                       // 0x30(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, Protected, NativeAccessSpecifierProtected)
	FMulticastInlineDelegateProperty_            OnNoteStop;                                        // 0x40(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, Protected, NativeAccessSpecifierProtected)
	FMulticastInlineDelegateProperty_            OnNotePlayed;                                      // 0x50(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, Protected, NativeAccessSpecifierProtected)
	FMulticastInlineDelegateProperty_            OnNotesCleared;                                    // 0x60(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, Protected, NativeAccessSpecifierProtected)
	FMulticastInlineDelegateProperty_            OnSongMatchChanged;                                // 0x70(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, Protected, NativeAccessSpecifierProtected)
	FMulticastInlineDelegateProperty_            OnSongStop;                                        // 0x80(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, Protected, NativeAccessSpecifierProtected)
	FMulticastInlineDelegateProperty_            OnSongPlayed;                                      // 0x90(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, Protected, NativeAccessSpecifierProtected)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("MusicSubsystem");
		return Clss;
	}

	void UserDone(class AValeriaPlayerController* InPlayer);
	void SongPlayed__DelegateSignature(class AValeriaPlayerController* InVpc, const struct FGameplayTag& InTag);
	void SimpleMusicNotify__DelegateSignature(struct FMusicState& InMusicState);
	void NotePlayed__DelegateSignature(int32 InNoteIdx, int32 InNoteValue);
	void NoteEvent__DelegateSignature(class AValeriaPlayerController* InVpc, int32 InNoteIdx);
	bool MatchesSong(class AValeriaPlayerController* InPlayer);
	void GetDisplayInfo(class AValeriaPlayerController* InPlayer, TArray<class UInstrumentSongConfig*>* InInfos);
	void EnableInputs(class AValeriaPlayerController* InPlayer);
	void DisableInputs(class AValeriaPlayerController* InPlayer);
	void ClearNotes(class AValeriaPlayerController* InPlayer);
	bool AddNote(class AValeriaPlayerController* InPlayer, int32 InNoteValue);
};

// 0x10 (0x570 - 0x560)
// Class Palia.NavPointComponent
class UNavPointComponent : public UBillboardComponent
{
public:
	class FName                                  Identifier;                                        // 0x560(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_3131[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("NavPointComponent");
		return Clss;
	}

};

// 0x20 (0x7F0 - 0x7D0)
// Class Palia.NiagaraComponent_GPUAudioSupport
class UNiagaraComponent_GPUAudioSupport : public UNiagaraComponent
{
public:
	uint8                                        Pad_3132[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class UAkAudioEvent*>                 AkEvents;                                          // 0x7D8(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	uint8                                        Pad_3133[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("NiagaraComponent_GPUAudioSupport");
		return Clss;
	}

};

// 0x8 (0x298 - 0x290)
// Class Palia.OutOfBoundsHandler_Base
class AOutOfBoundsHandler_Base : public AActor
{
public:
	float                                        GeometryCollisionHeight;                           // 0x290(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3135[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("OutOfBoundsHandler_Base");
		return Clss;
	}

	bool TryTeleportPawn(class AValeriaMoveablePawn* InMoveablePawn);
	void TestTeleportLocationsForValidity(TArray<class AActor*>& InTeleportActors);
	void Debug_HandleTestTeleportLocationValitity();
};

// 0x68 (0x300 - 0x298)
// Class Palia.OutOfBoundsHandler_Spline
class AOutOfBoundsHandler_Spline : public AOutOfBoundsHandler_Base
{
public:
	TArray<class AActor*>                        TeleportActors;                                    // 0x298(0x10)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	class USplineComponent*                      SplineComponent;                                   // 0x2A8(0x8)(Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3149[0x50];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("OutOfBoundsHandler_Spline");
		return Clss;
	}

	void HandleSplineEndOverlap_Internal(class UPrimitiveComponent* InOverlappedComponent, class AActor* InOtherActor, class UPrimitiveComponent* InOtherComp, int32 InOtherBodyIndex);
	void HandleSplineEndOverlap(class AValeriaCharacter* InCollidingCharacter, float InCollisionStartTime);
	void HandleSplineBeginOverlap_Internal(class UPrimitiveComponent* InOverlappedComponent, class AActor* InOtherActor, class UPrimitiveComponent* InOtherComponent, int32 InOtherBodyIndex, bool InFromSweep, struct FHitResult& InSweepResult);
	void HandleSplineBeginOverlap(class AValeriaCharacter* InCollidingCharacter, float InCollisionStartTime);
	void Debug_HandleShowOOBTeleportLocations(bool InbShow);
};

// 0x88 (0xC0 - 0x38)
// Class Palia.VAl_MapSettings
class UVAl_MapSettings : public UDeveloperSettings
{
public:
	TMap<class FName, class FText>               MapDisplayNameTable;                               // 0x38(0x50)(Edit, BlueprintVisible, BlueprintReadOnly, Config, NativeAccessSpecifierPublic)
	class FText                                  InvalidMapDisplayName;                             // 0x88(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, Config, NativeAccessSpecifierPublic)
	TArray<class FString>                        MapListing_DebugServers;                           // 0xA0(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, NativeAccessSpecifierPublic)
	TArray<TSoftObjectPtr<class UWorld>>         MapsWithHousing;                                   // 0xB0(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, UObjectWrapper, NativeAccessSpecifierPublic)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("VAl_MapSettings");
		return Clss;
	}

};

// 0x0 (0x28 - 0x28)
// Class Palia.PaliaBinkFunctionLibrary
class UPaliaBinkFunctionLibrary : public UBlueprintFunctionLibrary
{
public:

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("PaliaBinkFunctionLibrary");
		return Clss;
	}

	void InitializeBinkMediaPlayer(class UBinkMediaPlayer* Inbmp);
};

// 0x8 (0x10B0 - 0x10A8)
// Class Palia.PaliaEngine
class UPaliaEngine : public UGameEngine
{
public:
	uint8                                        Pad_314C[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("PaliaEngine");
		return Clss;
	}

};

// 0x78 (0x308 - 0x290)
// Class Palia.PaliaLightingGroup
class APaliaLightingGroup : public AActor
{
public:
	class USceneComponent*                       LowRoot;                                           // 0x290(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USceneComponent*                       MedRoot;                                           // 0x298(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USceneComponent*                       HighRoot;                                          // 0x2A0(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TMap<int32, struct FLightingGroupSettings>   QualitySettings;                                   // 0x2A8(0x50)(Edit, BlueprintVisible, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_3150[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("PaliaLightingGroup");
		return Clss;
	}

	void OnDetailModeChanged(int32 InNewDetailMode);
	void ApplyComponentRestrictions(const TArray<class USceneComponent*>& InComponents, int32 InQuality);
};

// 0xD0 (0x108 - 0x38)
// Class Palia.PaliaLoadingSettings
class UPaliaLoadingSettings : public UDeveloperSettings
{
public:
	float                                        TimeToWaitForCharacterTeleportInSeconds;           // 0x38(0x4)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3151[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FPaliaLoadingScreenSettings           LoadScreen;                                        // 0x40(0x60)(Edit, Config, NativeAccessSpecifierPublic)
	TSoftClassPtr<class UUserWidget>             LoadingScreenWidgetClass;                          // 0xA0(0x30)(Edit, Config, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FPaliaLoadingScreenTip>        Tips;                                              // 0xD0(0x10)(Edit, BlueprintVisible, ZeroConstructor, Config, NativeAccessSpecifierPublic)
	float                                        LoadingSecondsDownToBlack;                         // 0xE0(0x4)(Edit, BlueprintVisible, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        LoadingSecondsBlackToDown;                         // 0xE4(0x4)(Edit, BlueprintVisible, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        LoadingSecondsBlackToFull;                         // 0xE8(0x4)(Edit, BlueprintVisible, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        LoadingSecondsFullToBlack;                         // 0xEC(0x4)(Edit, BlueprintVisible, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        LoadingSecondsHold_ScalabilityLow;                 // 0xF0(0x4)(Edit, BlueprintVisible, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        LoadingSecondsHold_ScalabilityMedium;              // 0xF4(0x4)(Edit, BlueprintVisible, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        LoadingSecondsHold_ScalabilityHigh;                // 0xF8(0x4)(Edit, BlueprintVisible, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        LoadingSecondsHold_ScalabilityUltra;               // 0xFC(0x4)(Edit, BlueprintVisible, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        LoadingSecondsUntilTimeout;                        // 0x100(0x4)(Edit, BlueprintVisible, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3152[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("PaliaLoadingSettings");
		return Clss;
	}

};

// 0x20 (0x48 - 0x28)
// Class Palia.PaliaScreenStateRequester
class UPaliaScreenStateRequester : public UObject
{
public:
	uint8                                        Pad_3154[0x20];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("PaliaScreenStateRequester");
		return Clss;
	}

};

// 0x180 (0x1B0 - 0x30)
// Class Palia.PaliaScreenManager
class UPaliaScreenManager : public UGameInstanceSubsystem
{
public:
	uint8                                        Pad_3156[0x70];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	FMulticastInlineDelegateProperty_            OnScreenStateChanged;                              // 0xA0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                        Pad_3157[0x100];                                   // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("PaliaScreenManager");
		return Clss;
	}

};

// 0x28 (0x50 - 0x28)
// Class Palia.PaliaTimeOfDaySequence
class UPaliaTimeOfDaySequence : public UObject
{
public:
	TArray<struct FS6LightBlendSettings>         LightingStates;                                    // 0x28(0x10)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	bool                                         bLoopStartAndEndBlend;                             // 0x38(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3159[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        DayNightSequenceTimeMultiplier;                    // 0x3C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class ULightingBaseState*                    BlendedLightingState;                              // 0x40(0x8)(ZeroConstructor, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_315A[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("PaliaTimeOfDaySequence");
		return Clss;
	}

};

// 0x0 (0xA0 - 0xA0)
// Class Palia.ParticipantComponent
class UParticipantComponent : public UActorComponent
{
public:

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("ParticipantComponent");
		return Clss;
	}

	bool FlagAsParticipant(const struct FGameplayTag& InParticipationTag, float InParticipationRange);
};

// 0x20 (0xC0 - 0xA0)
// Class Palia.ParticipationTrackingComponent
class UParticipationTrackingComponent : public UActorComponent
{
public:
	struct FGameplayTag                          ParticipationTag;                                  // 0xA0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FParticipant>                  ParticipantList;                                   // 0xA8(0x10)(ZeroConstructor, NativeAccessSpecifierPrivate)
	class UParticipationTrackingComponent*       ParticipationTrackingRedirect;                     // 0xB8(0x8)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("ParticipationTrackingComponent");
		return Clss;
	}

	void SetParticipationTrackingRedirection(class UParticipationTrackingComponent* InDesiredRedirect);
	TArray<struct FParticipant> GetParticipantList();
	void AddParticipantForType(class AActor* InActorToAdd, struct FGameplayTag& InParticipationType, bool InIsRedirect);
	void AddParticipant(class AActor* InActorToAdd, bool InIsRedirect);
};

// 0x1E8 (0x220 - 0x38)
// Class Palia.VAl_PartySettings
class UVAl_PartySettings : public UDeveloperSettings
{
public:
	int32                                        PartyInviteExpiryTimeInSeconds;                    // 0x38(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        PartyCreationWaitTimeInSeconds;                    // 0x3C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FText                                  CharacterKickedText;                               // 0x40(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, Config, NativeAccessSpecifierPublic)
	class FText                                  PersonalKickedText;                                // 0x58(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, Config, NativeAccessSpecifierPublic)
	class FText                                  PartyDeletedText;                                  // 0x70(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, Config, NativeAccessSpecifierPublic)
	class FText                                  CharacterLeftText;                                 // 0x88(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, Config, NativeAccessSpecifierPublic)
	class FText                                  PersonalLeftText;                                  // 0xA0(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, Config, NativeAccessSpecifierPublic)
	class FText                                  CharacterJoinedText;                               // 0xB8(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, Config, NativeAccessSpecifierPublic)
	class FText                                  PersonalCreatedText;                               // 0xD0(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, Config, NativeAccessSpecifierPublic)
	class FText                                  PersonalJoinedText;                                // 0xE8(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, Config, NativeAccessSpecifierPublic)
	class FText                                  PersonalDeclinedInviteText;                        // 0x100(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, Config, NativeAccessSpecifierPublic)
	class FText                                  DeclinedInviteText;                                // 0x118(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, Config, NativeAccessSpecifierPublic)
	class FText                                  DeclinedInviteFullText;                            // 0x130(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, Config, NativeAccessSpecifierPublic)
	class FText                                  PersonalDeclinedInviteFullText;                    // 0x148(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, Config, NativeAccessSpecifierPublic)
	class FText                                  DeclinedInviteAlreadyInPartyText;                  // 0x160(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, Config, NativeAccessSpecifierPublic)
	class FText                                  PersonalLeaderChangedText;                         // 0x178(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, Config, NativeAccessSpecifierPublic)
	class FText                                  LeaderChangedText;                                 // 0x190(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, Config, NativeAccessSpecifierPublic)
	class FText                                  PersonalInviteRescindedText;                       // 0x1A8(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, Config, NativeAccessSpecifierPublic)
	class FText                                  InviteRescindedText;                               // 0x1C0(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, Config, NativeAccessSpecifierPublic)
	class FText                                  SentInviteTimedOutText;                            // 0x1D8(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, Config, NativeAccessSpecifierPublic)
	class FText                                  ReceivedInviteTimedOutText;                        // 0x1F0(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, Config, NativeAccessSpecifierPublic)
	class FText                                  MemberPromotedText;                                // 0x208(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, Config, NativeAccessSpecifierPublic)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("VAl_PartySettings");
		return Clss;
	}

};

// 0x0 (0x28 - 0x28)
// Class Palia.VAL_PartyLibrary
class UVAL_PartyLibrary : public UBlueprintFunctionLibrary
{
public:

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("VAL_PartyLibrary");
		return Clss;
	}

	class FString GetPartyInviteDurationLeftFormatted(struct FVAL_PartyInvite& InInvite);
	TSet<struct FVAL_PartyMember> GetAllPartyMembers(struct FVAL_Party& InParty);
	TArray<struct FUniqueNetIdRepl> GetAllPartyMemberIds(struct FVAL_Party& InParty);
	bool EqualEqual(struct FVAL_PartyMember& InA, struct FVAL_PartyMember& InB);
	bool DoesPartyContainMemberByNetId(struct FVAL_Party& InParty, struct FUniqueNetIdRepl& InNetId);
	bool DoesPartyContainMember(struct FVAL_Party& InParty, struct FVAL_PartyMember& InPartyMember);
	struct FVAL_PartyMember CreatePartyMember(struct FGuid& InAccountId, struct FGuid& InCharacterId);
};

// 0x10 (0x570 - 0x560)
// Class Palia.PathStepComponent
class UPathStepComponent : public UBillboardComponent
{
public:
	int32                                        StepIndex;                                         // 0x560(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_31A4[0xC];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("PathStepComponent");
		return Clss;
	}

};

// 0x0 (0x28 - 0x28)
// Class Palia.Persistable
class IPersistable : public IInterface
{
public:

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("Persistable");
		return Clss;
	}

};

// 0x208 (0x2A8 - 0xA0)
// Class Palia.PersistComponent
class UPersistComponent : public UActorComponent
{
public:
	FMulticastInlineDelegateProperty_            OnParentOrChildChanged;                            // 0xA0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnMoved;                                           // 0xB0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnRemoved;                                         // 0xC0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnHousingSlotChanged;                              // 0xD0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FPersistActorId                       ParentPersistActorId;                              // 0xE0(0x24)(Net, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FPersistActorId                       PersistActorId;                                    // 0x104(0x24)(Net, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FSessionActorId                       AnchorSessionId;                                   // 0x128(0x4)(Net, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FSessionActorId                       SessionActorId;                                    // 0x12C(0x4)(Net, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FPersistComponentChildArray           PersistChildren;                                   // 0x130(0x120)(Net, NativeAccessSpecifierPrivate)
	bool                                         PersistWasRemoved;                                 // 0x250(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bIsQueuedForDestruction;                           // 0x251(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_31A8[0x6];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSoftObjectPtr<class UVAL_ItemTypeDefinitionAsset> PersistItemType;                                   // 0x258(0x30)(Net, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	enum class EPersistAnchorType                PersistAnchorType;                                 // 0x288(0x1)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_31A9[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FString                                PersistAnchorUniqueId;                             // 0x290(0x10)(Net, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int32                                        HousingSlotId;                                     // 0x2A0(0x4)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        ActorEnableCollisionAndVisibility : 1;             // Mask: 0x1, PropSize: 0x10x2A4(0x1)(Net, Transient, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_31AA[0x3];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("PersistComponent");
		return Clss;
	}

	void ReplicatedParentOrChild();
	void OnRep_SessionId();
	void OnRep_AnchorSessionId();
	void OnRep_ActorEnableCollisionAndVisibility();
};

// 0xE0 (0x180 - 0xA0)
// Class Palia.PersistentTagMapComponent
class UPersistentTagMapComponent : public UActorComponent
{
public:
	uint8                                        Pad_31C0[0x60];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	FMulticastInlineDelegateProperty_            OnChanged;                                         // 0x100(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FTagMapPersistBlock                   TagMapPersistBlock;                                // 0x110(0x60)(Edit, Net, RepNotify, NativeAccessSpecifierPrivate)
	bool                                         bBatchingUpdates;                                  // 0x170(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_31C1[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FTimerHandle                          BatchFinishedCheckTimerHandle;                     // 0x178(0x8)(NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("PersistentTagMapComponent");
		return Clss;
	}

	void ServerApplyScriptedWriteback(struct FPersistentTagWriteback& InTagWriteback);
	void PersistentTagValuesUpdated();
	TArray<struct FTagEntry> GetTagValuesContainingString(const class FString& InInString, bool InbSort);
	int32 GetTagValue(struct FGameplayTag& InTag);
	TArray<struct FTagEntry> GetAllTagValues();
	float ComputeTagScore(struct FTagScoreRubric& InRubric);
};

// 0x30 (0x2C0 - 0x290)
// Class Palia.PersistSpawnerActor
class APersistSpawnerActor : public AActor
{
public:
	class UVAL_ItemTypeDefinitionAsset*          ItemTypeToSpawn;                                   // 0x290(0x8)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                PersistAnchorUniqueId;                             // 0x298(0x10)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USceneComponent*                       Root;                                              // 0x2A8(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UBillboardComponent*                   Billboard;                                         // 0x2B0(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bIsReadyToSpawn;                                   // 0x2B8(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_31C5[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("PersistSpawnerActor");
		return Clss;
	}

};

// 0xD8 (0x178 - 0xA0)
// Class Palia.PlaceableAlterationsComponent
class UPlaceableAlterationsComponent : public UActorComponent
{
public:
	uint8                                        Pad_31D5[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	FMulticastInlineDelegateProperty_            OnChanged;                                         // 0xA8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TArray<struct FGameplayTag>                  ActiveAlterationGroup;                             // 0xB8(0x10)(ZeroConstructor, Transient, NativeAccessSpecifierPublic)
	struct FTimerHandle                          InitialSetupTimer;                                 // 0xC8(0x8)(NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FPlaceableAlterationsPersistData      PersistData;                                       // 0xD0(0x10)(Net, RepNotify, NativeAccessSpecifierPrivate)
	uint8                                        Pad_31D8[0x98];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("PlaceableAlterationsComponent");
		return Clss;
	}

	void PlugsAndSocketsChanged(class UPlaceablePlugAndSocketsComponent* InPlugAndSockets);
	void PlacementItemChanged(class UVAL_ItemTypeDefinitionAsset* InItemType, bool InIsCancelPlacement);
	void OnPersistDataReplicated();
	bool IsDefaultAlteration(struct FPlaceableAlterationConfig& InConfig);
	bool IsAvailibleAlteration(struct FPlaceableAlterationConfig& InConfig);
	void InitialSetupTimerTick();
	bool ContainsAlteration(int32 InPersistId);
	void CharacterStateChanged(class UCharacterStateMachineComponent* InCsm, const struct FCharacterStateChangeParams& InParams);
};

// 0xB0 (0x150 - 0xA0)
// Class Palia.PlaceablePlugAndSocketsComponent
class UPlaceablePlugAndSocketsComponent : public UActorComponent
{
public:
	uint8                                        Pad_31DC[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	FMulticastInlineDelegateProperty_            OnChanged;                                         // 0xA8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FPlaceablePlugPersistData             PlugPersistData;                                   // 0xB8(0x28)(NoDestructor, NativeAccessSpecifierPrivate)
	struct FPlaceablePlugAndSocketStatuses       PlugAndSocketStatuses;                             // 0xE0(0x68)(Net, RepNotify, NativeAccessSpecifierPrivate)
	class UDataTable*                            SocketsTable;                                      // 0x148(0x8)(ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("PlaceablePlugAndSocketsComponent");
		return Clss;
	}

	void OnStatusReplicated();
	void OnLevelChanged(class ULevelerComponent* InLeveler);
};

// 0x8 (0xA8 - 0xA0)
// Class Palia.PlaceableVisibilityComponent
class UPlaceableVisibilityComponent : public UActorComponent
{
public:
	class UDataTable*                            VisibilityConfig;                                  // 0xA0(0x8)(Edit, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("PlaceableVisibilityComponent");
		return Clss;
	}

	void UpdateVisibility(bool InbAllowRemovalOfPlaceables);
	void InitialUpdateVisibility();
	void HandlePlugAndSocketStatusChanged(class UPlaceablePlugAndSocketsComponent* InComp);
	void HandleLevelerChanged(class ULevelerComponent* InComp);
	void HandleHousingSlotChanged(class UPersistComponent* InComp);
	void HandleAlterationsChanged(class UPlaceableAlterationsComponent* InComp);
};

// 0x290 (0x330 - 0xA0)
// Class Palia.PlacementComponent
class UPlacementComponent : public UActorComponent
{
public:
	uint8                                        Pad_322E[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        InputRotationDegreesPerSecond;                     // 0xA8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        RotationDegreeInterval;                            // 0xAC(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class APlacementViewActor>       PlacementViewActor;                                // 0xB0(0x8)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MaxPlacementUpAngle;                               // 0xB8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        MaxFenceSectionCount;                              // 0xBC(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnPlacementChanged;                                // 0xC0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnPlacementConfirmed;                              // 0xD0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnPlacementItemChanged;                            // 0xE0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnFreePlacementModeChanged;                        // 0xF0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	bool                                         bNeedsCurrentRotationInit;                         // 0x100(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_322F[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FVector                               PlacementReferenceLocation;                        // 0x108(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FTransform                            PlacementItemTransform;                            // 0x120(0x60)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EItemPlacementState               PlacingState;                                      // 0x180(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         CanPlaceHere;                                      // 0x181(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_3230[0x6];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FItemToPlaceParams                    ItemToPlaceParams;                                 // 0x188(0xF8)(BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPrivate)
	class APlacementViewActor*                   ItemToPlaceView;                                   // 0x280(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UPlacementRegionComponent*             RegionToPlaceIn;                                   // 0x288(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSoftObjectPtr<class UVAL_ItemTypeDefinitionAsset> ItemTypeToPlace;                                   // 0x290(0x30)(BlueprintVisible, BlueprintReadOnly, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int32                                        CurrentRotation;                                   // 0x2C0(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FName                                  PlacementFailureMessage;                           // 0x2C4(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         IsOnLimitedAxisMovement;                           // 0x2CC(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_3232[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FVector                               LimitedAxisMovementOrigin;                         // 0x2D0(0x18)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UPlacementRegionComponent*             LimitedAxisRegionToPlaceIn;                        // 0x2E8(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bFreePlacementModeActive;                          // 0x2F0(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bRecheckLockedPlacementItems;                      // 0x2F1(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bWaitForLockedPlacement;                           // 0x2F2(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_3233[0x5];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FVector                               LastGoodCanPlaceLocation;                          // 0x2F8(0x18)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FSessionActorId                       ActiveLockedPlacementItem;                         // 0x310(0x4)(NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_3234[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class UFenceMeshComponent*>           ConnectingFenceMeshes;                             // 0x318(0x10)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	uint8                                        Pad_3235[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("PlacementComponent");
		return Clss;
	}

	bool StartPlacingFromInventory(const struct FBagSlotLocation& InLocation);
	bool StartPlacingFromHouseInventory(int32 InHouseInventoryIndex);
	bool StartPlacing(const struct FItemToPlaceParams& InParams);
	bool StartMoving(class AActor* InActor);
	void SetFreePlacementModeActive(bool InbActive);
	void RpcServer_UpdateLockedItemToPlace(const struct FSessionActorId& InActorId, const struct FVector& InPosition, const struct FRotator& InRotation);
	void RpcServer_UnlockItemToPlace(const struct FSessionActorId& InActorId);
	void RpcServer_PlaceItem(const struct FItemToPlaceParams& InParams, class AHousingOwnershipActor* InHousingOwner, struct FPlacementRegionId& InAnchor, const struct FVector& InPosition, const struct FRotator& InRotation);
	void RpcServer_LockItemToPlace(const struct FSessionActorId& InActorId);
	void PlayPlacementAudio(bool InbPlaced);
	void OnStateChanged(class UCharacterStateMachineComponent* InCsm, const struct FCharacterStateChangeParams& InParams);
	struct FSelfUseEventResult OnClientUseEquippedOutward(class AValeriaPlayerController* InPlayer, const struct FUseEventParams& InParams);
	void NotifyLockedUpdate();
	bool IsPlacing();
	bool IsFreePlacementModeActive();
	void HandleEquipmentChanged(class UEquipmentComponent* InEquipmentComponent, const struct FEquipmentItem& InItem);
	void GetPlacedItemsCount(int32* InOutRequired, int32* InOutAvailable);
	TSoftObjectPtr<class UVAL_ItemTypeDefinitionAsset> GetItemTypeToPlace();
	int32 GetItemToPlaceItemConfigId();
	struct FPlacementHoverInfo GetHoveredObject();
	TArray<struct FPlacementHoverInfo> GetAlterationPoints();
	class AActor* GetActorMoving();
	bool GatherPlacement();
	bool ConfirmPlacement();
	void Client_CancelPlacement();
	bool CancelPlacement();
};

// 0xA0 (0x340 - 0x2A0)
// Class Palia.PlacementRegionComponent
class UPlacementRegionComponent : public USceneComponent
{
public:
	float                                        TotalRowLength;                                    // 0x2A0(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        TotalColLength;                                    // 0x2A4(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        NumberRows;                                        // 0x2A8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        NumberCols;                                        // 0x2AC(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        VisualGridRatio;                                   // 0x2B0(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTag                          PlacementGameplayTag;                              // 0x2B4(0x8)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsEnabled;                                         // 0x2BC(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsHiddenDuringPlacement;                           // 0x2BD(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3240[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        RotationInterval;                                  // 0x2C0(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        LevelRequired;                                     // 0x2C4(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTagContainer                 DisableIfAnySocketActive;                          // 0x2C8(0x20)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	class FString                                PersistAnchorUniqueId;                             // 0x2E8(0x10)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         ShouldCheckPlotUnlocks;                            // 0x2F8(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bShouldEnforceBoundary;                            // 0x2F9(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3244[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        WallSupportGridSize;                               // 0x2FC(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        WallSupportTraceLength;                            // 0x300(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         DisplayCenterLineOnPlacementGrid;                  // 0x304(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3245[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UStaticMesh*                           CustomPlacementGridMesh;                           // 0x308(0x8)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         UseStickySnap;                                     // 0x310(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         UseStickySnapAutoRotate;                           // 0x311(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3246[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        StickySnapDistanceThreshold;                       // 0x314(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3247[0x1];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         bHasBoundToCharacterEvents;                        // 0x319(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_3248[0x6];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FTimerHandle                          BindToCharacterEventsTimerHandle;                  // 0x320(0x8)(NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bCanLocalPlayerPlaceHere;                          // 0x328(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_3249[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class APlacementRegionMatActor*              MatActor;                                          // 0x330(0x8)(ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_324A[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("PlacementRegionComponent");
		return Clss;
	}

	void TryBindToCharacterEvents();
	struct FVector SnapWorldPositionToNearestNeighbor(struct FVector& InWorldPosition, struct FQuat& InOrientation, class UVAL_ItemTypeDefinitionAsset* InItemType);
	struct FVector SnapWorldPositionToGrid(struct FVector& InWorldPosition, struct FQuat& InOrientation, struct FVector& InExtents);
	void RpcClient_RecheckPlacementValidity();
	void PlacementItemChanged(class UVAL_ItemTypeDefinitionAsset* InItem, bool InbCancelPlacement);
	void PlacementChanged(class UPlacementComponent* InPC, bool InIsPlacing);
	void OnPlacementInteractChanged(class AValeriaCharacter* InVC, bool InFlag);
	bool IsBuildingClusterLimitEnabled();
	void FreePlacementChanged(class UPlacementComponent* InPC);
	void CharacterStateChanged(class UCharacterStateMachineComponent* InCsm, const struct FCharacterStateChangeParams& InParams);
	bool CanLocalPlayerPlaceHere();
};

// 0x78 (0x308 - 0x290)
// Class Palia.PlacementRegionMatActor
class APlacementRegionMatActor : public AActor
{
public:
	class USceneComponent*                       Root;                                              // 0x290(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UStaticMeshComponent*                  GridMesh;                                          // 0x298(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UStaticMeshComponent*                  CollisionPlane;                                    // 0x2A0(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UInstancedStaticMeshComponent*         PlaceableActorBounds;                              // 0x2A8(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UInstancedStaticMeshComponent*         ConnectorSockets;                                  // 0x2B0(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UInstancedStaticMeshComponent*         ConnectorSocketsInUse;                             // 0x2B8(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FLinearColor                          GridLineColor;                                     // 0x2C0(0x10)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FLinearColor                          HighlightLineColor;                                // 0x2D0(0x10)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        GridLineThickness;                                 // 0x2E0(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        HighlightLineThickness;                            // 0x2E4(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        GridFadeStartDistance;                             // 0x2E8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        GridFadeEndDistance;                               // 0x2EC(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         IsCurrentlyFocusedOn;                              // 0x2F0(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_3253[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UMaterialInstanceDynamic*              GridMaterialInstance;                              // 0x2F8(0x8)(ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_3254[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("PlacementRegionMatActor");
		return Clss;
	}

};

// 0x90 (0x320 - 0x290)
// Class Palia.PlacementViewActor
class APlacementViewActor : public AActor
{
public:
	TArray<class UMeshComponent*>                ViewMeshComponents;                                // 0x290(0x10)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	TArray<class AActor*>                        MovedConnectedActors;                              // 0x2A0(0x10)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	class USceneComponent*                       Root;                                              // 0x2B0(0x8)(Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UStaticMeshComponent*                  PlugMesh;                                          // 0x2B8(0x8)(Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UInstancedStaticMeshComponent*         PlaceableActorBoundsInstances;                     // 0x2C0(0x8)(Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UInstancedStaticMeshComponent*         PlaceableConnectionsBounds;                        // 0x2C8(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UStaticMeshComponent*                  FloorToCeilingIndicator;                           // 0x2D0(0x8)(Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UMaterialInstance*                     HighlightedMaterial;                               // 0x2D8(0x8)(Edit, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UMaterialInstance*                     UnhighlightedMaterial;                             // 0x2E0(0x8)(Edit, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<class UMaterialInstanceDynamic*>      ItemToPlaceMaterials;                              // 0x2E8(0x10)(ZeroConstructor, NativeAccessSpecifierPrivate)
	TArray<class AActor*>                        OriginalMovedActors;                               // 0x2F8(0x10)(ZeroConstructor, NativeAccessSpecifierPrivate)
	TArray<class UFenceComponent*>               FenceComponents;                                   // 0x308(0x10)(ExportObject, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	int32                                        NumValidFenceComponents;                           // 0x318(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_325B[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("PlacementViewActor");
		return Clss;
	}

	void HandleOnPlacementUserRotationInput(int32 InAmount);
};

// 0x0 (0xA0 - 0xA0)
// Class Palia.PlayerActionRequirementFilterComponent
class UPlayerActionRequirementFilterComponent : public UActorComponent
{
public:

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("PlayerActionRequirementFilterComponent");
		return Clss;
	}

};

// 0x68 (0x98 - 0x30)
// Class Palia.PlayerCompassTargetConfigAsset
class UPlayerCompassTargetConfigAsset : public UDataAsset
{
public:
	struct FPlayerCompassTargetConfig            Config;                                            // 0x30(0x68)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("PlayerCompassTargetConfigAsset");
		return Clss;
	}

};

// 0x100 (0x130 - 0x30)
// Class Palia.InWorldLocationDef
class UInWorldLocationDef : public UDataAsset
{
public:
	TSoftObjectPtr<class UWorld>                 LocationLevel;                                     // 0x30(0x30)(Edit, BlueprintVisible, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UPrivateSpaceConfig>    LocationPrivateSpace;                              // 0x60(0x30)(Edit, BlueprintVisible, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class ULimitedEventDataAsset> LocationLimitedEvent;                              // 0x90(0x30)(Edit, BlueprintVisible, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftClassPtr<class AActor>                  LocationActorType;                                 // 0xC0(0x30)(Edit, BlueprintVisible, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  LocationActorName;                                 // 0xF0(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class AActor>                 LocationActorExact;                                // 0xF8(0x30)(Edit, BlueprintVisible, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bLocationActorIsArea;                              // 0x128(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3266[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        LocationAreaRadiusOverride;                        // 0x12C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("InWorldLocationDef");
		return Clss;
	}

};

// 0x70 (0x110 - 0xA0)
// Class Palia.PlayerCraftingHistoryComponent
class UPlayerCraftingHistoryComponent : public UActorComponent
{
public:
	uint8                                        Pad_3268[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FCraftingHistoryPersistBlock          CraftingHistoryPersistBlock;                       // 0xA8(0x58)(Net, NativeAccessSpecifierPrivate)
	uint8                                        Pad_3269[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("PlayerCraftingHistoryComponent");
		return Clss;
	}

	bool HasRecipeBeenCraftedBefore(int32 InRecipeConfigId);
};

// 0x0 (0x28 - 0x28)
// Class Palia.PlayerEventRespondable
class IPlayerEventRespondable : public IInterface
{
public:

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("PlayerEventRespondable");
		return Clss;
	}

	void OnControllerAttachedToCharacter(class AValeriaPlayerController* InPlayer, class AValeriaCharacter* InCharacter);
};

// 0xE0 (0x288 - 0x1A8)
// Class Palia.PlayerInventoryComponent
class UPlayerInventoryComponent : public UInventoryComponent
{
public:
	uint8                                        Pad_3273[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FValeriaItem>                  CarriedItems;                                      // 0x1B0(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, EditConst, RepNotify, NativeAccessSpecifierPublic)
	TArray<struct FCarryVisualizationInfo>       PrioritizedCarryVisualization;                     // 0x1C0(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnCarryChanged;                                    // 0x1D0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnCurrencyChanged;                                 // 0x1E0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TArray<struct FCurrencyBag>                  Currencies;                                        // 0x1F0(0x10)(Net, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_3274[0x70];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class US6Core_AssetLoader*                   PlayerInventoryAssetLoader;                        // 0x270(0x8)(ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FTimerHandle                          CleanupTimerHandle;                                // 0x278(0x8)(NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_3275[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("PlayerInventoryComponent");
		return Clss;
	}

	void RpcServer_PocketCarried();
	void RpcClient_ChangeCurrency(class UCurrencyConfig* InCurrencyConfig, int32 InDelta, int32 InNewAmount);
	void OnRep_Carried();
	void OnInventorySettingsChanged(struct FValeriaGameplaySettings& InInventorySettings);
	struct FSelfUseEventResult OnClientUseEquippedInward(class AValeriaPlayerController* InPlayer, const struct FUseEventParams& InParams);
	bool GetSellValueText(const struct FBagSlotLocation& InLocation, class FText* InOutText);
	int32 GetCurrencyAmount(class UCurrencyConfig* InCurrencyConfig);
};

// 0x108 (0x1A8 - 0xA0)
// Class Palia.PlayerWorldStateComponent
class UPlayerWorldStateComponent : public UActorComponent
{
public:
	uint8                                        Pad_327A[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	FMulticastInlineDelegateProperty_            OnWorldPersistGatherableAdded;                     // 0xA8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnTimedLootPileAdded;                              // 0xB8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FPlayerWorldStatePersistBlock         PlayerWorldStatePersistBlock;                      // 0xC8(0xE0)(Transient, Protected, NativeAccessSpecifierProtected)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("PlayerWorldStateComponent");
		return Clss;
	}

	void RpcClient_UpdateWorldPersistGatherable(struct FGameplayTag& InInTag, struct FWorldPersistGatherableData& InInWorldPersistGatherableData);
	void RpcClient_UpdateTimedLootPile(struct FGameplayTag& InInTag, class FName& InInActorName, struct FTimedLootPileData& InInTimedLootPileData);
	void RpcClient_InitializeWorldPersistGatherablesGroup(TArray<struct FGameplayTag>& InInTags, TArray<struct FWorldPersistGatherableData>& InInWorldPersistGatherableDatas);
	void RpcClient_InitializeTimedLootPilesGroup(TArray<struct FGameplayTag>& InInTags, TArray<struct FTimedLootPileData>& InInTimedLootPileDatas);
	bool HasGatheredWorldPersistGatherable(struct FGameplayTag& InInTag);
	bool HasGatheredTimedLootPileToday(struct FGameplayTag& InInTag, class FName& InInActorName);
};

// 0xE0 (0x110 - 0x30)
// Class Palia.PresenceManager
class UPresenceManager : public ULocalPlayerSubsystem
{
public:
	FMulticastInlineDelegateProperty_            OnPresenceChange;                                  // 0x30(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnShowDebugPresences;                              // 0x40(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnServerIdChanged;                                 // 0x50(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                        Pad_3285[0xB0];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("PresenceManager");
		return Clss;
	}

	void ValShowDebugPresences__DelegateSignature(bool InbDisplayDebugPresences);
	bool TrySearchForCharacter(const class FString& InCharacterName, FDelegateProperty_& InOnSearchForCharacterResult);
	void SetPresence(enum class EVAL_PresenceStatus InStatus, const class FString& InStatusStr);
	void OnServerIdChanged__DelegateSignature(const class FString& InID);
	void OnSearchForCharacterResult__DelegateSignature(bool InbWasSuccessful, const class FString& InOriginalSearchTerm, struct FUniqueNetIdRepl& InOutUserId, struct FVALDTOS_MetaCharacterFormat& InOutCharacterInfo);
	void HandleOnServerIdUpdated(const class FString& InID);
	void HandleOnSelectedCharacterChanged(struct FOSSVAL_SelectedCharacter& InSelectedCharacter);
	void HandleOnPawnChanged(class APawn* InPawn);
	void HandleExpPkgChanged(class UExperiencePackageConfig* InNewExpPkg);
	struct FUniqueNetIdRepl GetUserIdForCharacterName(const class FString& InCharacterName);
	class FString GetServerId();
	struct FPresence GetPresenceForUserId(struct FUniqueNetIdRepl& InUserId);
	class FString GetOurCurrentServer();
	class FString GetDebugPresenceFlag();
	class FString GetCharacterName(struct FUniqueNetIdRepl& InUserId);
	TArray<struct FUniqueNetIdRepl> GetCachedPresencesUserIdList();
};

// 0xF8 (0x140 - 0x48)
// Class Palia.PrivateSpaceConfig
class UPrivateSpaceConfig : public UGuidDataAsset
{
public:
	TSoftObjectPtr<class UWorld>                 PrivateSpaceMap;                                   // 0x48(0x30)(Edit, BlueprintVisible, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                PrivateSpaceManagedName;                           // 0x78(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPrivateSpaceVillagerDeterminantConfig* VillagerDeterminantConfig;                         // 0x88(0x8)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bFreezeAtSpecificTime;                             // 0x90(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3288[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        FrozenTimeHour;                                    // 0x94(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        FrozenTimeMinute;                                  // 0x98(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3289[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FTravelPayload                        TravelPayload;                                     // 0xA0(0xA0)(NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("PrivateSpaceConfig");
		return Clss;
	}

	float GetFrozenTimeAsPercentage();
};

// 0x38 (0x70 - 0x38)
// Class Palia.PrivateSpaceSettings
class UPrivateSpaceSettings : public UDeveloperSettings
{
public:
	struct FVector                               BaseSpawnOffset;                                   // 0x38(0x18)(Edit, BlueprintVisible, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               SpawnSeparation;                                   // 0x50(0x18)(Edit, BlueprintVisible, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        MaxPrivateSpaceSlots;                              // 0x68(0x4)(Edit, BlueprintVisible, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_328B[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("PrivateSpaceSettings");
		return Clss;
	}

};

// 0x78 (0xA8 - 0x30)
// Class Palia.PrivateSpaceManager
class UPrivateSpaceManager : public UWorldSubsystem
{
public:
	FMulticastInlineDelegateProperty_            OnVillagerInPrivateSpaceForScheduleChanged;        // 0x30(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMap<int32, struct FPrivateSpaceScheduledVillagerSpawnInfo> VillagerConfigsInPrivateSpacesForSchedule;         // 0x40(0x50)(NativeAccessSpecifierPrivate)
	TArray<class UPrivateSpaceLevelHandle*>      LoadedPrivateSpaces;                               // 0x90(0x10)(ZeroConstructor, NativeAccessSpecifierPrivate)
	uint8                                        Pad_3292[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("PrivateSpaceManager");
		return Clss;
	}

	void SpawnPrivateSpaceForCharacter(class AValeriaCharacter* InPlayer, class UPrivateSpaceConfig* InPrivateSpaceConfig);
	void SetVisibilityOfPrivateSpaceSublevelForCharacter(class AValeriaCharacter* InPlayer, const class FString& InSublevelName, bool InbInShouldBeVisible);
	void Server_LeavePrivateSpace(class AValeriaCharacter* InPlayer, class UPrivateSpaceConfig* InPrivateSpaceConfig);
	void MarkVillagerInPrivateSpaceForSchedule(int32 InVillagerId, class UPrivateSpaceConfig* InPrivateSpace, const struct FVillagerSpawnParams& InSpawnParams);
	class AValeriaPlayerController* GetPrivateSpaceInstigator(class AActor* InInActor);
	TArray<struct FTitleAndRowsInfo> GetLoadedPrivateSpaceTitleAndRowsInfoForPlayerController(class AValeriaPlayerController* InInValeriaPlayerController);
	class UPrivateSpaceConfig* GetCurrentPrivateSpaceForVillagerSchedule(int32 InVillagerId);
	TArray<struct FTitleAndRowsInfo> GetAllLoadedPrivateSpaceTitleAndRowsInfo();
	void ClientUpdatePrivateSpaceLocation(class AValeriaCharacter* InPlayer, const class FString& InHandleID, class UPrivateSpaceConfig* InPrivateSpaceConfig, int32 InSlotId);
	void ClearVillagerInPrivateSpaceForSchedule(int32 InVillagerId);
	bool CharacterHasActivePrivateSpace(class AValeriaCharacter* InPlayer);
};

// 0xE8 (0x110 - 0x28)
// Class Palia.PrivateSpaceLevelHandle
class UPrivateSpaceLevelHandle : public UObject
{
public:
	int32                                        SlotId;                                            // 0x28(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3293[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class AValeriaPlayerController*              Instigator;                                        // 0x30(0x8)(ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                HandleID;                                          // 0x38(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class AValeriaPlayerController*>      VisitingPlayers;                                   // 0x48(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FSublevelAndTransform>         Levels;                                            // 0x58(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	uint8                                        Pad_3294[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FTransform                            LevelSpawnTransform;                               // 0x70(0x60)(IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPrivateSpaceConfig*                   PrivateSpaceConfig;                                // 0xD0(0x8)(ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bInitializedPrivateSpace;                          // 0xD8(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3295[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class AValeriaTargetPoint*>           TargetPoints;                                      // 0xE0(0x10)(ZeroConstructor, Transient, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnPrivateSpaceReady;                               // 0xF0(0x10)(ZeroConstructor, InstancedReference, NativeAccessSpecifierPublic)
	uint8                                        LocalLevelReady : 1;                               // Mask: 0x1, PropSize: 0x10x100(0x1)(Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        RemoteLevelReady : 1;                              // Mask: 0x2, PropSize: 0x10x100(0x1)(Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        PendingUnload : 1;                                 // Mask: 0x4, PropSize: 0x10x100(0x1)(Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3296[0xF];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("PrivateSpaceLevelHandle");
		return Clss;
	}

	void HandleLevelShown();
};

// 0x18 (0x48 - 0x30)
// Class Palia.PrivateSpaceVillagerDeterminantConfig
class UPrivateSpaceVillagerDeterminantConfig : public UDataAsset
{
public:
	bool                                         bAllowSimultaneousVisits;                          // 0x30(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3297[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<TSoftObjectPtr<class UPrivateSpaceVillagerVisitConfig>> VillagerVisits;                                    // 0x38(0x10)(Edit, BlueprintVisible, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("PrivateSpaceVillagerDeterminantConfig");
		return Clss;
	}

	TArray<class UPrivateSpaceVillagerVisitConfig*> DeterminePrivateSpaceVillagerVisits(class AValeriaCharacter* InInValeriaCharacter);
};

// 0x130 (0x178 - 0x48)
// Class Palia.PrivateSpaceVillagerVisitConfig
class UPrivateSpaceVillagerVisitConfig : public UGuidDataAsset
{
public:
	bool                                         bEnabled;                                          // 0x48(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_329B[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        Priority;                                          // 0x4C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bPreventPlayerFromLeaving;                         // 0x50(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bKeepVillagersUntilPlayerLeaves;                   // 0x51(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bDelayedVisit;                                     // 0x52(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_329C[0x1];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        DelayedVisitGameHours;                             // 0x54(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EVillagerVisitOccurrence          VillagerVisitOccurrence;                           // 0x58(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_329D[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FVillagerActionPrereq                 Requirements;                                      // 0x60(0x78)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	class UVAL_GameplayConditionDef*             StartCondition;                                    // 0xD8(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, PersistentInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVillagerActionPrereq                 FinishRequirements;                                // 0xE0(0x78)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	class UVAL_GameplayConditionDef*             FinishCondition;                                   // 0x158(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, PersistentInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FPrivateSpaceVillagerSpawnInfo> VisitingVillagerSpawnInfos;                        // 0x160(0x10)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	float                                        VisitingVillagerWalkOutDuration;                   // 0x170(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_329E[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("PrivateSpaceVillagerVisitConfig");
		return Clss;
	}

	TMap<int32, struct FPrivateSpaceVillagerSpawnInfo> GetVisitingVillagerIdsAndSpawnInfos();
	TArray<int32> GetVisitingVillagerIds();
	TArray<class FName> GetVisitingVillagerCoreNames();
	bool CanStartPrivateSpaceVillagerVisit(class AValeriaCharacter* InInValeriaCharacter);
	bool CanFinishPrivateSpaceVillagerVisit(class AValeriaCharacter* InInValeriaCharacter);
};

// 0xE8 (0x188 - 0xA0)
// Class Palia.ProjectileFiringComponent
class UProjectileFiringComponent : public UActorComponent
{
public:
	uint8                                        Pad_32B5[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	FMulticastInlineDelegateProperty_            OnProjectileFired;                                 // 0xB0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnSelectedAmmo;                                    // 0xC0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, Protected, BlueprintCallable, NativeAccessSpecifierProtected)
	class FName                                  FiringLocationSocketName;                          // 0xD0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FProjectileFiringPersistBlock         ProjectileFiringPersistBlock;                      // 0xD8(0x50)(Edit, Protected, NativeAccessSpecifierProtected)
	TArray<struct FFiredProjectileData>          FiredProjectiles;                                  // 0x128(0x10)(ZeroConstructor, Transient, NativeAccessSpecifierPrivate)
	TArray<struct FPreemptiveHitData>            PreemptiveHits;                                    // 0x138(0x10)(ZeroConstructor, Transient, NativeAccessSpecifierPrivate)
	uint8                                        Pad_32B6[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UVAL_ItemTypeDefinitionAsset*          SelectedAmmoType;                                  // 0x158(0x8)(Net, ZeroConstructor, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSubclassOf<class AValeriaProjectile>        ProjectileActorClass;                              // 0x160(0x8)(ZeroConstructor, Transient, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_32B7[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        NextProjectileId;                                  // 0x178(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        MaxAimRaycastDistance;                             // 0x17C(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        MinAimRaycastDistance;                             // 0x180(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_32B8[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("ProjectileFiringComponent");
		return Clss;
	}

	void TryAutoEquipAmmo();
	void RpcServer_NotifyProjectileHit(int32 InProjectileId, class AActor* InHitActor, const struct FVector& InHitLocation);
	void RpcServer_FireProjectile(const struct FBagSlotLocation& InAmmoSlotLocation, const struct FBagSlotLocation& InToolSlotLocation, const struct FVector& InSpawnLocation, const struct FRotator& InSpawnRotation, int32 InProjectileId);
	void RpcServer_EquipProjectile(const struct FBagSlotLocation& InSlot, enum class EAmmoType InType);
	void RpcNetMulticast_FireProjectile(TSoftObjectPtr<class UVAL_ItemTypeDefinitionAsset>& InAmmoItemType, TSoftObjectPtr<class UVAL_ItemTypeDefinitionAsset>& InToolItemType, const struct FVector& InSpawnLocation, const struct FRotator& InSpawnRotation, int32 InProjectileId);
	void RpcClient_SetEquippedAmmo(const struct FBagSlotLocation& InAmmoSlotToEquip, enum class EAmmoType InType);
	void RetryEquipProjectileFromPersistBlock(class UInventoryComponent* InInventory);
	void OnRep_SelectedAmmoTypeUpdated();
	struct FSelfUseEventResult OnClientUseEquippedOutward(class AValeriaPlayerController* InPlayer, const struct FUseEventParams& InParams);
	struct FSelfUseEventResult OnClientUseEquippedInward(class AValeriaPlayerController* InPlayer, const struct FUseEventParams& InParams);
	void NotifyAbilityStarted(class UValeriaGASComponent* InGasComponent, class UValeriaGASGameplayAbility* InAbility);
	bool HasUsableAmmoEquipped();
	void HandleEquipmentChanged(class UEquipmentComponent* InEquipmentComponent, const struct FEquipmentItem& InItem);
	class UVAL_ItemTypeDefinitionAsset* GetSelectedAmmoType();
	struct FValeriaItem GetSelectedAmmo();
	struct FBagSlotLocation GetEquippedAmmoSlot();
	void FireProjectile(class FName InSocketToFireFrom);
	bool EquipProjectileAt(const struct FBagSlotLocation& InAmmoSlotToEquip, enum class EAmmoType InType, bool InIsServerInitiated);
};

// 0x70 (0x310 - 0x2A0)
// Class Palia.ProximityChecker
class UProximityChecker : public USceneComponent
{
public:
	float                                        DistanceToTrack;                                   // 0x2A0(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_32BC[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	FMulticastInlineDelegateProperty_            OnTrackerChanged;                                  // 0x2A8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                        Pad_32BD[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TMap<class AActor*, bool>                    ActorsToTrack;                                     // 0x2C0(0x50)(NativeAccessSpecifierPrivate)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("ProximityChecker");
		return Clss;
	}

	void StopTracking(class AActor* InActorToTrack);
	void StartTracking(class AActor* InActorToTrack);
	void OnActorDestroyed(class AActor* InInActor);
	bool IsWithinDistance(class AActor* InActorToTrack);
	bool IsTrackingActor(class AActor* InActorToTrack);
	bool IsTrackingActive();
	void DeactivateTracking();
};

// 0x20 (0x50 - 0x30)
// Class Palia.QualityGlobalConfig
class UQualityGlobalConfig : public UDataAsset
{
public:
	float                                        SellRewardQualityMultiplier;                       // 0x30(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ConsumeRewardFocusQualityMultiplier;               // 0x34(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        WormFarmFoodValueQualityModifier;                  // 0x38(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_32BE[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<int32>                                ItemRarityWeights;                                 // 0x40(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("QualityGlobalConfig");
		return Clss;
	}

};

// 0x228 (0x258 - 0x30)
// Class Palia.QueryManager
class UQueryManager : public UGameInstanceSubsystem
{
public:
	FMulticastInlineDelegateProperty_            OnServerSpaceRegistered;                           // 0x30(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnServerSpaceUnregistered;                         // 0x40(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMap<enum class EVAL_ServerSpaceType, struct FVAL_ServerSpaceContainer> ServerSpaces;                                      // 0x50(0x50)(Transient, NativeAccessSpecifierPrivate)
	TMap<class FName, struct FTargetPointArray>  TargetPoints;                                      // 0xA0(0x50)(NativeAccessSpecifierPrivate)
	TArray<class AHousingPlotActor*>             HousingPlots;                                      // 0xF0(0x10)(ZeroConstructor, NativeAccessSpecifierPrivate)
	TMap<class UTeleportTravelConfigAsset*, class UTeleportDestinationComponent*> LocalDestinationRegistry;                          // 0x100(0x50)(ExportObject, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	TArray<struct FPrivateSpaceDestination>      PSDestinationRegistry;                             // 0x150(0x10)(ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	TMap<struct FSessionActorId, struct FSessionActorRecord> SessionIdToActor;                                  // 0x160(0x50)(NativeAccessSpecifierPrivate)
	TMap<class AActor*, struct FSessionActorId>  ActorToSessionId;                                  // 0x1B0(0x50)(NativeAccessSpecifierPrivate)
	uint8                                        Pad_32C3[0x58];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("QueryManager");
		return Clss;
	}

	bool WorldSupportsLoadingHousingPlotActor();
	class AHousingPlotActor* SpawnNewHousingPlotActor(class AValeriaCharacter* InCharacter);
	void OnServerSpaceUnregistered__DelegateSignature(struct FVAL_ServerSpace& InServerSpace);
	void OnServerSpaceRegistered__DelegateSignature(struct FVAL_ServerSpace& InServerSpace);
	bool IsReadyToQueryForMapInfo();
	class AValeriaCharacter* FindValeriaCharacterByPlayerGuid(struct FGuid& InPlayerGuid);
	class AValeriaTargetPoint* FindRandomTargetPoint(class FName InTag);
	class AHousingPlotActor* FindRandomAvailableHousingPlotActor(class AValeriaCharacter* InCharacter);
	struct FGuid FindPlayerGuidByName(const class FString& InPlayerName);
	class AHousingPlotActor* FindOccupiedHousingPlotByOwnerId(struct FGuid& InOwnerId);
	class AHousingPlotActor* FindOccupiedHousingPlotByHousingId(struct FGuid& InHousingId);
	class AHousingPlotActor* FindHousingPlotByActorName(const class FString& InActorName);
	class AValeriaTargetPoint* FindClosestTargetPoint(class FName InTag, const struct FVector& InPosition);
	class AHousingPlotActor* FindAvailableHousingPlotActorByName(class AValeriaCharacter* InCharacter, const class FString& InName);
};

// 0x30 (0x58 - 0x28)
// Class Palia.VAL_DataAsset
class UVAL_DataAsset : public UObject
{
public:
	uint8                                        Pad_32C5[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FTagList                              Tags;                                              // 0x30(0x20)(Edit, BlueprintVisible, DisableEditOnInstance, NativeAccessSpecifierPublic)
	bool                                         IsArchived;                                        // 0x50(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_32C6[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        PersistId;                                         // 0x54(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, AssetRegistrySearchable, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("VAL_DataAsset");
		return Clss;
	}

	int32 GetInvalidItemPersistId();
};

// 0xB0 (0x108 - 0x58)
// Class Palia.VAL_QuestDef
class UVAL_QuestDef : public UVAL_DataAsset
{
public:
	bool                                         bEnabled;                                          // 0x58(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_32CB[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        Version;                                           // 0x5C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIsAccomplishment;                                 // 0x60(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_32CC[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FText                                  Title;                                             // 0x68(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, AssetRegistrySearchable, NativeAccessSpecifierPublic)
	class FText                                  Description;                                       // 0x80(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UTexture2D>             Icon;                                              // 0x98(0x30)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EVAL_QuestCategory                QuestCategory;                                     // 0xC8(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bShouldAutoPinToTracker;                           // 0xC9(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_32CD[0x6];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FQuestRewardConfig>            StartRewards;                                      // 0xD0(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	bool                                         bLastsForever;                                     // 0xE0(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_32CE[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UVAL_GameplayConditionDef*             ExpirationCondition;                               // 0xE8(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, PersistentInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bRepeatable;                                       // 0xF0(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_32CF[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        CooldownAfterCompletionSecs;                       // 0xF4(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FVAL_QuestStepDef>             Steps;                                             // 0xF8(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("VAL_QuestDef");
		return Clss;
	}

	bool IsHidden();
	TArray<TSoftObjectPtr<class UVAL_QuestDef>> GetAssetsWithTag_Cast(struct FGameplayTag& InGameplayTag);
	TArray<TSoftObjectPtr<class UVAL_QuestDef>> GetAssetsOfClass_Cast(bool InbIncludeDerivedClasses);
	TArray<TSoftObjectPtr<class UVAL_QuestDef>> GetAssetsByFilter_Cast(struct FARFilter& InFilter);
	TSoftObjectPtr<class UVAL_QuestDef> GetAssetByPersistId_Cast(int32 InPersistIdToGet);
	TSoftObjectPtr<class UVAL_QuestDef> GetAssetByName_Cast(class FName& InAssetName);
};

// 0xD8 (0x110 - 0x38)
// Class Palia.VAL_QuestConfiguration
class UVAL_QuestConfiguration : public UDeveloperSettings
{
public:
	int32                                        PinLimit;                                          // 0x38(0x4)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_32D0[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FQuestCompassConfig                   Compass;                                           // 0x40(0x40)(Edit, Config, NoDestructor, NativeAccessSpecifierPublic)
	class FText                                  GoalCountDescriptionFormat;                        // 0x80(0x18)(Edit, Config, NativeAccessSpecifierPublic)
	class FText                                  StarQualityGoalDescriptionFormat;                  // 0x98(0x18)(Edit, Config, NativeAccessSpecifierPublic)
	struct FNotification                         QuestResetNotification;                            // 0xB0(0x30)(Edit, Config, NativeAccessSpecifierPublic)
	struct FNotification                         MultipleQuestsResetNotification;                   // 0xE0(0x30)(Edit, Config, NativeAccessSpecifierPublic)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("VAL_QuestConfiguration");
		return Clss;
	}

};

// 0x80 (0x120 - 0xA0)
// Class Palia.QuestGiverComponent
class UQuestGiverComponent : public UActorComponent
{
public:
	uint8                                        Pad_32D6[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        QuestSelectorConfigId;                             // 0xA8(0x4)(Edit, BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_32D7[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FQuestReward>                  CurrentRewards;                                    // 0xB0(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, EditConst, RepNotify, NativeAccessSpecifierPublic)
	struct FQuest                                CurrentQuest;                                      // 0xC0(0x28)(Edit, BlueprintVisible, BlueprintReadOnly, Net, EditConst, RepNotify, NativeAccessSpecifierPublic)
	int32                                        TimeQuestStartedAtSecs;                            // 0xE8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, EditConst, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        TimeQuestEndsAtSecs;                               // 0xEC(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, EditConst, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnChanged;                                         // 0xF0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	bool                                         bHasBeenShared;                                    // 0x100(0x1)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_32D8[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FPersistGuid>                  RewardsCollectedByPlayerIds;                       // 0x108(0x10)(Net, ZeroConstructor, RepNotify, NativeAccessSpecifierPrivate)
	int32                                        TimeWhenNextQuestStartsSecs;                       // 0x118(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_32D9[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("QuestGiverComponent");
		return Clss;
	}

	void OnServerUsedEquippedOnMe(class AValeriaPlayerController* InPlayer, const struct FServerUseEventParams& InParams);
	struct FServerUseEventResult OnServerInteract(class UInteractableComponent* InInteractable, class AValeriaCharacter* InCharacter, const struct FInteractEventParams& InEventParams);
	void OnReplicatedAndShouldBroadcast();
	struct FUseEventResult OnClientUsedEquippedOnMe(class AValeriaPlayerController* InPlayer, const struct FUseEventParams& InParams);
	struct FUseEventResult OnClientInteract(class UInteractableComponent* InInteractable, class AValeriaPlayerController* InCharacter, const struct FInteractEventParams& InParams);
	bool IsQuestReady();
	bool IsInteractable(class AValeriaCharacter* InCharacter, const struct FInteractEventParams& InEventParams);
	int32 InteractPriority();
	bool HasBeenShared();
	bool GetText(class AValeriaCharacter* InCharacter, enum class EInteractEventIndex InEventIndex, struct FGetTextParams* InParams);
	bool CanCollectReward(class AValeriaCharacter* InCharacter);
};

// 0x110 (0x1B0 - 0xA0)
// Class Palia.QuestProgressComponent
class UQuestProgressComponent : public UActorComponent
{
public:
	uint8                                        Pad_32E8[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	FMulticastInlineDelegateProperty_            OnChanged;                                         // 0xA8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnQuestStarted;                                    // 0xB8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnQuestCompleted;                                  // 0xC8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnQuestStepProgressed;                             // 0xD8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnQuestGoalProgressed;                             // 0xE8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	class AValeriaCharacter*                     VC;                                                // 0xF8(0x8)(ZeroConstructor, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FTimerHandle                          RunQuestUpdatesHandle;                             // 0x100(0x8)(NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FVAL_QuestProgressPersistBlock        QuestProgressPersistBlock;                         // 0x108(0xA0)(Net, RepNotify, NativeAccessSpecifierPrivate)
	uint8                                        Pad_32E9[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("QuestProgressComponent");
		return Clss;
	}

	void ToggleQuestPin(int32 InQuestPersistId);
	void Server_RunQuestUpdates();
	void Server_RunQuestCleanups();
	void RpcServer_ToggleQuestPin(int32 InQuestPersistId);
	void RpcClient_ForceMarkQuestProgressReplicated();
	void OnRep_QuestProgressPersistBlock(struct FVAL_QuestProgressPersistBlock& InOldQuestProgressPersistBlock);
	bool IsQuestActiveByID(int32 InID);
	bool IsQuestActiveByDef(TSoftObjectPtr<class UVAL_QuestDef> InInQuestDef);
	bool IsBelowPinLimit();
	TArray<struct FVAL_QuestState> GetUnstartedAccomplishments();
	int32 GetNumPinned();
	struct FVAL_QuestState GetFirstActiveQuestInfo();
	TArray<struct FVAL_QuestState> GetCompletedQuests();
	TArray<struct FVAL_QuestState> GetCompletedAccomplishments();
	TArray<struct FVAL_QuestState> GetAllInactiveQuests();
	TArray<struct FVAL_QuestState> GetAllActiveQuests();
	TArray<struct FVAL_QuestState> GetAllAccomplishments();
	TArray<struct FVAL_QuestState> GetActiveAccomplishments();
	struct FVAL_QuestState FindInactiveQuestInfo(int32 InID);
	struct FVAL_QuestState FindActiveQuestInfo(int32 InID);
	void Debug_UpdateClientDebugView();
};

// 0x30 (0xD0 - 0xA0)
// Class Palia.ReadableBookComponent
class UReadableBookComponent : public UActorComponent
{
public:
	uint8                                        Pad_32F3[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FDataTableRowHandle                   BookConfig;                                        // 0xA8(0x10)(Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
	class FText                                  InteractText;                                      // 0xB8(0x18)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("ReadableBookComponent");
		return Clss;
	}

	struct FUseEventResult OnClientInteract(class UInteractableComponent* InInteractable, class AValeriaPlayerController* InPlayer, const struct FInteractEventParams& InEventParams);
	bool IsInteractable(class AValeriaCharacter* InCharacter, const struct FInteractEventParams& InEventParams);
	int32 InteractPriority();
	bool GetText(class AValeriaCharacter* InCharacter, enum class EInteractEventIndex InEventIndex, struct FGetTextParams* InParams);
};

// 0x110 (0x140 - 0x30)
// Class Palia.RecipeInteractionConfig
class URecipeInteractionConfig : public UDataAsset
{
public:
	enum class ERecipeInteractionMode            InteractionMode;                                   // 0x30(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_32F4[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSoftObjectPtr<class UTexture2D>             InteractionIcon;                                   // 0x38(0x30)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EMinigameQTEStyle                 MinigameStyle;                                     // 0x68(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ECharacterAttachPoint             InteractablePropCharacterAttachPoint;              // 0x69(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_32F6[0x6];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FText                                  InteractionText;                                   // 0x70(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	float                                        InteractionToleranceSecs;                          // 0x88(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_32F7[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FAbilityToolConfig                    Tool;                                              // 0x90(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
	struct FRuntimeFloatCurve                    PlayerMarkerMovementCurve;                         // 0xA0(0x88)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	enum class EEasingFunc                       PlayerMarkerMovementEasingFunc;                    // 0x128(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_32F8[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        PlayerMarkerMovementEasingFuncBlendExp;            // 0x12C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        TargetMarkerPositionMinAlpha;                      // 0x130(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        NumCyclesPerAnimation;                             // 0x134(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         MistakeTriggersPenalty;                            // 0x138(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_32FA[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("RecipeInteractionConfig");
		return Clss;
	}

};

// 0x110 (0x1B0 - 0xA0)
// Class Palia.RecipeInventoryComponent
class URecipeInventoryComponent : public UActorComponent
{
public:
	uint8                                        Pad_3305[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	FMulticastInlineDelegateProperty_            OnChanged;                                         // 0xA8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnUnlocked;                                        // 0xB8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            DevOnly_OnLocked;                                  // 0xC8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TArray<int32>                                InspirationRecipeChoices;                          // 0xD8(0x10)(BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	struct FRecipeInventoryPersistBlock          RecipeInventoryPersistBlock;                       // 0xE8(0x60)(Net, RepNotify, NativeAccessSpecifierPrivate)
	uint8                                        Pad_3306[0x68];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("RecipeInventoryComponent");
		return Clss;
	}

	void RpcServer_Cheat_UnlockAll();
	void RpcServer_Cheat_LockAll();
	void RpcServer_Cheat_GiveRecipeIngredients(int32 InRecipeConfigId, bool InbGiveToAllPresentPlayers, bool InbGiveStarQuality);
	void RpcClient_AddRecipes(TArray<int32>& InRecipeConfigIds);
	void ProcessPendingAdds();
	void OnValeriaCharacterChanged(class AValeriaCharacter* InValeriaCharacter, enum class EValeriaCharacterEvent InValeriaCharacterEvent);
	void OnReplicatedAndShouldBroadcast();
	void OnLevelProgressed(enum class ESkillType InSkillType);
	bool IsAvailable(int32 InRecipeConfigId);
	TArray<TSoftObjectPtr<class UVAL_ItemTypeDefinitionAsset>> GetItemMappings(TSoftObjectPtr<class UVAL_ItemTypeDefinitionAsset>& InInputItemType);
	bool DoesItemMappingExist(TSoftObjectPtr<class UVAL_ItemTypeDefinitionAsset>& InInputItemType, TSoftObjectPtr<class UVAL_ItemTypeDefinitionAsset>& InOutputItemType);
	void Cheat_GiveRecipeIngredients(int32 InRecipeConfigId, bool InbGiveToAllPresentPlayers, bool InbGiveStarQuality);
	bool AddAvailable_Internal(int32 InInRecipeConfigId, TArray<int32>* InOutAdded, struct FRecipeLearnedFrom& InSource);
	void AddAvailable(int32 InRecipeConfigId, struct FRecipeLearnedFrom& InSource);
};

// 0x18 (0xB8 - 0xA0)
// Class Palia.ReplicationTrackingComponent
class UReplicationTrackingComponent : public UActorComponent
{
public:
	TArray<int32>                                VillagersToTrack;                                  // 0xA0(0x10)(ZeroConstructor, NativeAccessSpecifierPrivate)
	bool                                         bAllVillagersTracked;                              // 0xB0(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_3308[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("ReplicationTrackingComponent");
		return Clss;
	}

	void UntrackAllVillagers();
	void TrackAllVillagers();
	void Server_UntrackVillager(int32 InVillagerId);
	void Server_TrackVillager(int32 InVillagerId);
	bool Server_IsTrackingVillager(int32 InVillagerId);
	void RpcServer_ChangeAllVillagerTracking(bool InTracked);
};

// 0x0 (0x28 - 0x28)
// Class Palia.RequirementFetcher
class IRequirementFetcher : public IInterface
{
public:

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("RequirementFetcher");
		return Clss;
	}

	bool GetRequirement(struct FRequirement* InRequirement);
};

// 0x10 (0x40 - 0x30)
// Class Palia.ResourceTrackerGlobalConfig
class UResourceTrackerGlobalConfig : public UDataAsset
{
public:
	TArray<struct FResourceTrackerTypeConfig>    TypeConfigs;                                       // 0x30(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("ResourceTrackerGlobalConfig");
		return Clss;
	}

};

// 0x60 (0x90 - 0x30)
// Class Palia.SceneGenData
class USceneGenData : public UPrimaryDataAsset
{
public:
	int32                                        Instance;                                          // 0x30(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_330A[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSoftObjectPtr<class UWorld>                 Level;                                             // 0x38(0x30)(UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class ULevelStreaming*                       Streamer;                                          // 0x68(0x8)(ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class AActorSocket*>                  Sockets;                                           // 0x70(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	class AAttachmentGenerator*                  Generator;                                         // 0x80(0x8)(ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         Loaded;                                            // 0x88(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_330B[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("SceneGenData");
		return Clss;
	}

	void OnLoaded();
};

// 0xB8 (0x348 - 0x290)
// Class Palia.AttachmentGenerator
class AAttachmentGenerator : public AActor
{
public:
	int32                                        SceneLimit;                                        // 0x290(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int32                                        SearchLimit;                                       // 0x294(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int32                                        Seed;                                              // 0x298(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int32                                        StepCount;                                         // 0x29C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         RandomSeed;                                        // 0x2A0(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         AutoIncrementSeed;                                 // 0x2A1(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         DontLeaveEmptySocket;                              // 0x2A2(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         DebugPauseAtStart;                                 // 0x2A3(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_330F[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FVector                               BoundsOffset;                                      // 0x2A8(0x18)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FVector                               Bounds;                                            // 0x2C0(0x18)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_3310[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TMap<int32, class USceneGenData*>            Scenes;                                            // 0x2E8(0x50)(NativeAccessSpecifierPrivate)
	uint8                                        Pad_3311[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("AttachmentGenerator");
		return Clss;
	}

	void StateChanged(class USceneGenData* InData);
	void PreGeneration();
	void PostGeneration();
	void OnAttachmentAdded();
	int32 NextSeed();
	bool IsGeneratedValid();
	void GenerationInit();
	bool GenerateStep_Internal();
	void GenerateStep();
	void Generate();
	bool ContinueAddingAttachment();
	void Clear();
	bool ChooseNextAttachmentData(TSoftObjectPtr<class UWorld>* InAttachment, class AActorSocket* InSocket);
	bool ChooseFirstAttachmentData(TSoftObjectPtr<class UWorld>* InAttachment);
};

// 0x78 (0x308 - 0x290)
// Class Palia.ActorSocket
class AActorSocket : public AActor
{
public:
	struct FGameplayTagRequirements              Requirements;                                      // 0x290(0x40)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPrivate)
	class AActorSocket*                          ConnectedSocket;                                   // 0x2D0(0x8)(ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSoftObjectPtr<class UWorld>                 Level;                                             // 0x2D8(0x30)(UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("ActorSocket");
		return Clss;
	}

	void SetAttached(class AActorSocket* InActor);
	bool IsAttached();
};

// 0x20 (0x50 - 0x30)
// Class Palia.VAL_SessionManager
class UVAL_SessionManager : public ULocalPlayerSubsystem
{
public:
	FMulticastInlineDelegateProperty_            OnPlayersRegistered;                               // 0x30(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                        Pad_3317[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("VAL_SessionManager");
		return Clss;
	}

	void ValSessionOnPlayersRegistered__DelegateSignature(bool InbRegistered, class FName InSessionName, TArray<struct FUniqueNetIdRepl>& InPlayers);
	TArray<struct FUniqueNetIdRepl> GetRegisteredPlayers();
};

// 0x20 (0x50 - 0x30)
// Class Palia.ShaderBasedAnimation
class UShaderBasedAnimation : public UDataAsset
{
public:
	float                                        StartFrame;                                        // 0x30(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        EndFrame;                                          // 0x34(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        TotalFrames;                                       // 0x38(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        FramesPerSecond;                                   // 0x3C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FShaderBasedAnimEvent>         Events;                                            // 0x40(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("ShaderBasedAnimation");
		return Clss;
	}

	float GetDuration();
};

// 0x50 (0xF0 - 0xA0)
// Class Palia.ShaderBasedAnimationComponent
class UShaderBasedAnimationComponent : public UActorComponent
{
public:
	FMulticastInlineDelegateProperty_            OnAnimEventWasTriggered;                           // 0xA0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FShaderBasedAnimationPlayback         CurrentlyPlayingNormalLayer;                       // 0xB0(0x18)(Transient, NoDestructor, NativeAccessSpecifierPrivate)
	struct FShaderBasedAnimationPlayback         CurrentlyPlayingOneOffLayer;                       // 0xC8(0x18)(Transient, NoDestructor, NativeAccessSpecifierPrivate)
	TArray<struct FMaterialInstanceDynamicToAnimate> MaterialInstancesToAnimate;                        // 0xE0(0x10)(ZeroConstructor, Transient, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("ShaderBasedAnimationComponent");
		return Clss;
	}

	void StopAnimationLayer(enum class EShaderBasedAnimPlaybackLayer InAnimationLayer);
	void SetAnimationNormalizedTime(enum class EShaderBasedAnimPlaybackLayer InAnimationLayer, float InNormalizedTime, bool InbTriggerAnimEvents, bool InbPausePlayback);
	void PlayAnimation(class UShaderBasedAnimation* InAnimation, float InPlaybackSpeed, bool InbRestartIfAlreadyPlaying, enum class EShaderBasedAnimPlaybackLayer InAnimationLayer, enum class EShaderBasedAnimPlaybackCycle InAnimationCycle);
	float GetCurrentAnimationTime();
	float GetCurrentAnimationNormalizedTime();
	float GetCurrentAnimationLength();
	class UShaderBasedAnimation* GetCurrentAnimation();
	void AddMaterialToAnimate(class UPrimitiveComponent* InPrimitiveComponent, int32 InMaterialIndex, class FName InParameterToAnimate);
};

// 0x20 (0x1C8 - 0x1A8)
// Class Palia.ShippingBinComponent
class UShippingBinComponent : public UInventoryComponent
{
public:
	uint8                                        Pad_3320[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FTimerHandle                          CheckAndTryToSellItemsTimerHandle;                 // 0x1B0(0x8)(NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int64                                        LastCheckedTimeToSell;                             // 0x1B8(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int32                                        SecondsUntilNextShipment;                          // 0x1C0(0x4)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_3321[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("ShippingBinComponent");
		return Clss;
	}

	int32 GetTimeUntilNextShipment();
};

// 0x28 (0xC8 - 0xA0)
// Class Palia.ShopComponent
class UShopComponent : public UActorComponent
{
public:
	int32                                        ShopConfigId;                                      // 0xA0(0x4)(Edit, BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3322[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class UShopSlotComponent*>            ShopSlots;                                         // 0xA8(0x10)(ExportObject, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	bool                                         bIsShopOpen;                                       // 0xB8(0x1)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_3323[0xF];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("ShopComponent");
		return Clss;
	}

};

// 0x10 (0x2B0 - 0x2A0)
// Class Palia.ShopSlotComponent
class UShopSlotComponent : public USceneComponent
{
public:
	class FName                                  ShopSelectorName;                                  // 0x2A0(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AActor*                                AttachedActor;                                     // 0x2A8(0x8)(ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("ShopSlotComponent");
		return Clss;
	}

	void AttachedActorWasDestroyed(class AActor* InActorDestroyed);
};

// 0xE8 (0x188 - 0xA0)
// Class Palia.SkillLevelsComponent
class USkillLevelsComponent : public UActorComponent
{
public:
	uint8                                        Pad_3325[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FGameplayTag                          SkillPointsAllowedTag;                             // 0xA8(0x8)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        BaseFocusBonusMult;                                // 0xB0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3326[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FTagScoreRubric                       FocusBonusUpgradeBonusCalculator;                  // 0xB8(0x20)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnChanged;                                         // 0xD8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            LevelChanged;                                      // 0xE8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                        Pad_3327[0x18];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	struct FSkillsPersistBlock                   SkillsPersistBlock;                                // 0x110(0x58)(Edit, BlueprintVisible, BlueprintReadOnly, Net, EditConst, RepNotify, NativeAccessSpecifierPublic)
	class FString                                StatSkillAccomplishmentPrefix;                     // 0x168(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<struct FSkillXpAggregationGroup>      batchedSkillXp;                                    // 0x178(0x10)(ZeroConstructor, Transient, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("SkillLevelsComponent");
		return Clss;
	}

	void OnRep_SkillLevels();
	struct FSkillPersist GetSkillLevel(enum class ESkillType InSkillType);
	int32 GetNumberOfSkillPoints();
	int32 GetMaxSkillPoints();
	int32 GetMasterLevel();
	float GetFocusBonusXpMult();
	float GetFocusBonusUpgradeXpMult();
	float GetFocusBonusBuffXpMult();
	void CorrectSkillStatAccuracy();
};

// 0xF0 (0x380 - 0x290)
// Class Palia.SlidingPuzzleBoard
class ASlidingPuzzleBoard : public AActor
{
public:
	class USceneComponent*                       SlidingPuzzleBoardRootComponent;                   // 0x290(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USceneComponent*                       SlidingPuzzlePiecesRootComponent;                  // 0x298(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	FMulticastInlineDelegateProperty_            SlidingPuzzleBoardCompletedDel;                    // 0x2A0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            SlidingPuzzleBoardMoveStartedDel;                  // 0x2B0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            SlidingPuzzleBoardMoveCompletedDel;                // 0x2C0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TSubclassOf<class ASlidingPuzzlePiece>       SlidingPuzzlePieceClass;                           // 0x2D0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        PieceSpacing;                                      // 0x2D8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        PieceMovementTime;                                 // 0x2DC(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TMap<struct FIntPoint, class ASlidingPuzzlePiece*> PuzzlePieceGrid;                                   // 0x2E0(0x50)(Protected, NativeAccessSpecifierProtected)
	class USlidingPuzzleConfig*                  CachedSlidingPuzzleConfig;                         // 0x330(0x8)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FSlidingPuzzleMove                    SlidingPuzzleMove;                                 // 0x338(0x38)(Net, RepNotify, NoDestructor, Protected, NativeAccessSpecifierProtected)
	struct FIntPoint                             OpenSpaceLocation;                                 // 0x370(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bCompleted;                                        // 0x378(0x1)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bMovingPiece;                                      // 0x379(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_332E[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        CurrentPieceMovementTime;                          // 0x37C(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("SlidingPuzzleBoard");
		return Clss;
	}

	void TryResetPuzzle();
	void OnRep_SlidingPuzzleMove();
	void OnRep_bCompleted();
	void MoveSlidingPuzzlePieceWithDirection(enum class ESlidingPuzzleCardinalDirections InInDirection);
	void MoveSlidingPuzzlePiece(class ASlidingPuzzlePiece* InInPiece);
	bool IsPuzzleSolved();
	bool IsPointAdjacentToOpenSpace(struct FIntPoint& InInPoint);
	bool IsMovingPiece();
	bool IsCompleted();
	void InitializeSlidingPuzzleBoard(class USlidingPuzzleConfig* InInSlidingPuzzleConfig);
	void CreatePieces();
	void CheckPuzzleCompletion();
	bool CanResetPuzzle();
	bool CanMovePiece(class ASlidingPuzzlePiece* InInPiece);
};

// 0x28 (0x90 - 0x68)
// Class Palia.SlidingPuzzleConfig
class USlidingPuzzleConfig : public USubgameConfig
{
public:
	class UMaterialInstance*                     PuzzlePieceMaterial;                               // 0x68(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        NumRowsAndColumns;                                 // 0x70(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ESlidingPuzzleOpenPieceSlot       OpenPieceSlot;                                     // 0x74(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ESlidingPuzzleOpenPieceSlot       SavedOpenPieceSlot;                                // 0x75(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3338[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<int32>                                NewPieceLocations;                                 // 0x78(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	int32                                        AutoGenerateNumMovesRequired;                      // 0x88(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3339[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("SlidingPuzzleConfig");
		return Clss;
	}

	bool IsPuzzleSolvable(class FString* InSolveError);
	bool IsPuzzleFormattedCorrectly(class FString* InFormattingError);
	TMap<struct FIntPoint, int32> GetPieceLocationsWithIntPointKey();
	enum class ESlidingPuzzleCardinalDirections GetOppositeCardinalDirection(enum class ESlidingPuzzleCardinalDirections InInDirection);
	struct FIntPoint GetIntPointFromInteger(int32 InInInteger);
	int32 GetIntegerFromIntPoint(struct FIntPoint& InInIntPoint);
	struct FIntPoint GetFinalOpenSpacePoint();
};

// 0x30 (0xD0 - 0xA0)
// Class Palia.SubgameInputHandlerComponent
class USubgameInputHandlerComponent : public UActorComponent
{
public:
	class UInputMappingContext*                  SubgameInputMappingContext;                        // 0xA0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<struct FSubgameInputInfo>             SubgameInputInfos;                                 // 0xA8(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	class AValeriaPlayerController*              OwningPlayerController;                            // 0xB8(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TWeakObjectPtr<class USubgameManagerComponent> SubgameManagerRef;                                 // 0xC0(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAkRtpc*                               SubgameMixRtpc;                                    // 0xC8(0x8)(ZeroConstructor, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("SubgameInputHandlerComponent");
		return Clss;
	}

	void RpcServer_ExitSubgame(enum class ESubgameResult InSubgameResult);
	void RpcClient_UninitializeSubgameInputHandlerComponent(enum class ESubgameResult InSubgameResult);
	void RpcClient_InitializeSubgameInputHandlerComponent(struct FSubgameInputHandlerInitializationParams& InInSubgameInputHandlerInitializationParams);
	bool IsSubgameActive();
	void ExitSubgame(enum class ESubgameResult InSubgameResult);
	void ClearSubgameInputs();
	void BPNE_AssignSubgameManagerReference(class USubgameManagerComponent* InInSubgameManagerRef);
	void BPIE_PlayerExitedSubgame(enum class ESubgameResult InSubgameResult);
	void AddSubgameInputs();
};

// 0x20 (0xF0 - 0xD0)
// Class Palia.SlidingPuzzleInputHandlerComponent
class USlidingPuzzleInputHandlerComponent : public USubgameInputHandlerComponent
{
public:
	TArray<enum class EObjectTypeQuery>          MouseQueryObjectTypes;                             // 0xD0(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	class USlidingPuzzleSubgameManagerComponent* SlidingPuzzleSubgameManagerComponent;              // 0xE0(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TWeakObjectPtr<class ASlidingPuzzlePiece>    HoveredPuzzlePiece;                                // 0xE8(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("SlidingPuzzleInputHandlerComponent");
		return Clss;
	}

	void UpdateHoveredPuzzlePiece(class ASlidingPuzzlePiece* InInSlidingPuzzlePiece);
	bool CanHoverPieces();
};

// 0x20 (0x2B0 - 0x290)
// Class Palia.SlidingPuzzlePiece
class ASlidingPuzzlePiece : public AActor
{
public:
	class USceneComponent*                       SlidingPuzzlePieceRootComponent;                   // 0x290(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class ASlidingPuzzleBoard*                   OwningSlidingPuzzleBoard;                          // 0x298(0x8)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, Transient, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        PieceNumber;                                       // 0x2A0(0x4)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, Transient, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FIntPoint                             PieceLocation;                                     // 0x2A4(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class ESlidingPuzzleCardinalDirections  MovableDirection;                                  // 0x2AC(0x1)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, Transient, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bHovered;                                          // 0x2AD(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bShowingInvalidPress;                              // 0x2AE(0x1)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_3349[0x1];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("SlidingPuzzlePiece");
		return Clss;
	}

	void UpdatePieceLocation(struct FIntPoint& InInPieceLocation);
	void UnhoverPiece();
	void OnRep_PieceNumber();
	void OnRep_OwningSlidingPuzzleBoard();
	void OnRep_MovableDirection();
	void HoverPiece();
	int32 GetPieceNumber();
	enum class ESlidingPuzzleCardinalDirections GetMovableDirection();
	bool CanBeMoved();
	bool CanBeHovered();
	void BPNE_PieceNumberChanged();
	void BPNE_OwningSlidingPuzzleBoardChanged();
	void BPNE_MovableDirectionChanged();
	void BPIE_UnhoverPiece();
	void BPIE_SlidingPuzzleBoardMoveStarted();
	void BPIE_SlidingPuzzleBoardMoveCompleted();
	void BPIE_SlidingPuzzleBoardCompleted(class ASlidingPuzzleBoard* InCompletedSlidingPuzzleBoard);
	void BPIE_HoverPiece();
	void BPIE_Client_ShowInvalidPress();
	void AssignPieceInformation(class ASlidingPuzzleBoard* InInSlidingPuzzleBoard, int32 InInPieceNumber, struct FIntPoint& InInPieceLocation);
};

// 0x10 (0x2A0 - 0x290)
// Class Palia.SubgameCutawayScene
class ASubgameCutawayScene : public AActor
{
public:
	class USceneComponent*                       SubgameCutawaySceneRootComponent;                  // 0x290(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCameraComponent*                      SubgameCutawaySceneCameraComponent;                // 0x298(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("SubgameCutawayScene");
		return Clss;
	}

	void InitializeSubgameCutawayScene(class USubgameConfig* InInSubgameConfig);
};

// 0x8 (0x2A8 - 0x2A0)
// Class Palia.SlidingPuzzleSubgameCutawayScene
class ASlidingPuzzleSubgameCutawayScene : public ASubgameCutawayScene
{
public:
	class USceneComponent*                       SlidingPuzzleSpawnRootComponent;                   // 0x2A0(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("SlidingPuzzleSubgameCutawayScene");
		return Clss;
	}

	class USceneComponent* GetSlidingPuzzleSpawnRootComponent();
};

// 0x8 (0xF8 - 0xF0)
// Class Palia.SubgameCutawayManagerComponent
class USubgameCutawayManagerComponent : public USubgameManagerComponent
{
public:
	class ASubgameCutawayScene*                  ManagedSubgameCutawayScene;                        // 0xF0(0x8)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("SubgameCutawayManagerComponent");
		return Clss;
	}

	class ASubgameCutawayScene* GetManagedSubgameCutawayScene();
};

// 0x18 (0x110 - 0xF8)
// Class Palia.SlidingPuzzleSubgameManagerComponent
class USlidingPuzzleSubgameManagerComponent : public USubgameCutawayManagerComponent
{
public:
	TSubclassOf<class ASlidingPuzzleBoard>       SlidingPuzzleBoardClass;                           // 0xF8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USlidingPuzzleConfig*                  SlidingPuzzleConfig;                               // 0x100(0x8)(ZeroConstructor, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class ASlidingPuzzleBoard*                   ManagedSlidingPuzzleBoard;                         // 0x108(0x8)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("SlidingPuzzleSubgameManagerComponent");
		return Clss;
	}

	void SlidingPuzzleBoardCompleted(class ASlidingPuzzleBoard* InCompletedSlidingPuzzleBoard);
	void CreateSlidingPuzzleBoard();
};

// 0x1C8 (0x268 - 0xA0)
// Class Palia.SpawnerComponent
class USpawnerComponent : public UActorComponent
{
public:
	FMulticastInlineDelegateProperty_            OnSpawned;                                         // 0xA0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnDespawned;                                       // 0xB0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	enum class ESpawnerKind                      SpawnerKind;                                       // 0xC0(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_334B[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FWeightedActorToSpawn>         ActorsToSpawn;                                     // 0xC8(0x10)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	float                                        IntervalBetweenSpawnsSecs;                         // 0xD8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        InitialSpawnDelay;                                 // 0xDC(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        MinActorsOnStartup;                                // 0xE0(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        MaxActors;                                         // 0xE4(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         AlwaysOrientUpAxisToZAxis;                         // 0xE8(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         RaycastToSpawnOnTerrain;                           // 0xE9(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         RaycastToSpawnOnWater;                             // 0xEA(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_334C[0x1];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        DistanceOffsetOfTerrain;                           // 0xEC(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        DespawnTimerOverride;                              // 0xF0(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ESpawnerMode                      SpawnMode;                                         // 0xF4(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_334D[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        Radius;                                            // 0xF8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  SpawnOnFoliageTag;                                 // 0xFC(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_334E[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class UClass*>                        ActorTypesToAttachTo;                              // 0x108(0x10)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	bool                                         CoopSpawningEnabled;                               // 0x118(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_334F[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        CoopSpawningDestroyTimeAfterFirstGatherSecs;       // 0x11C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        TotalNumSpawnedActors;                             // 0x120(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        NextTimeToSpawn;                                   // 0x124(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIsReadyToSpawn;                                   // 0x128(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_3351[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FTimerHandle                          SpawningIsReadyTimer;                              // 0x130(0x8)(NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<class USpawnPointComponent*>          SpawnPoints;                                       // 0x138(0x10)(ExportObject, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	TArray<class AActor*>                        ActorsSpawned;                                     // 0x148(0x10)(ZeroConstructor, NativeAccessSpecifierPrivate)
	TMap<TSubclassOf<class AActor>, int32>       ActorClassMap;                                     // 0x158(0x50)(NativeAccessSpecifierPrivate)
	TMap<TSoftObjectPtr<class AActor>, struct FLimitedTimeFilterToCheck> LimitedTimeActorsMap;                              // 0x1A8(0x50)(NativeAccessSpecifierPrivate)
	TMap<class FString, int32>                   SpawnCountTracking;                                // 0x1F8(0x50)(NativeAccessSpecifierPrivate)
	int32                                        LastTrackingAmountDisplayed;                       // 0x248(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        LastTrackingTime;                                  // 0x24C(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_3352[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	int64                                        SpawnerIdForTelemetry;                             // 0x260(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("SpawnerComponent");
		return Clss;
	}

	void SpawnedActorWasDestroyed(class AActor* InInActorDestroyed);
	TArray<class AActor*> GetSpawnedActors();
};

// 0x60 (0x90 - 0x30)
// Class Palia.DefaultSpawnRarityConfig
class UDefaultSpawnRarityConfig : public UDataAsset
{
public:
	TSoftClassPtr<class AActor>                  DefaultCommonSpawn;                                // 0x30(0x30)(Edit, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftClassPtr<class AActor>                  DefaultUncommonSpawn;                              // 0x60(0x30)(Edit, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("DefaultSpawnRarityConfig");
		return Clss;
	}

};

// 0x78 (0xA8 - 0x30)
// Class Palia.SpawningManager
class USpawningManager : public UGameInstanceSubsystem
{
public:
	bool                                         bIsHoneyLureDebuggerEnabled;                       // 0x30(0x1)(Edit, BlueprintVisible, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3362[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class USpawnerComponent*>             AllSpawners;                                       // 0x38(0x10)(ExportObject, ZeroConstructor, Transient, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	TMap<class AActor*, struct FTelemetryInfoForSpawnedResource> TelemetryInfoFromSpawnedResources;                 // 0x48(0x50)(Transient, NativeAccessSpecifierPrivate)
	int64                                        NextUniqueIdForTelemetry;                          // 0x98(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bShouldSendSpawnInfoToTelemetry;                   // 0xA0(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_3363[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("SpawningManager");
		return Clss;
	}

	void SpawnedActorWasDestroyed(class AActor* InActorDestroyed);
	class AActor* SpawnActorAtSpawnPointAroundArea(const struct FVector& InCenter, float InRadius, class UClass* InClassTypesToSpawn, class UDefaultSpawnRarityConfig* InDefaultSpawns, enum class EWhereToSpawnActors InWhereToSpawn, class UObject* InInstigator, int64 InTelemetryUniqueId);
	int64 GenerateUniqueIdForTelemetry();
	int32 FindAllPossibleSpawnsInArea(const struct FVector& InCenter, float InRadius, class UClass* InClassTypesToSpawn, TArray<class UClass*>* InOutClassesConsidered);
};

// 0x188 (0x1B0 - 0x28)
// Class Palia.SpawnOnFoliageManager
class USpawnOnFoliageManager : public UObject
{
public:
	TArray<struct FSpawnOnFoliageSetup>          Foliages;                                          // 0x28(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	uint8                                        Pad_3369[0x50];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TMap<class AActor*, struct FTagAndIndexPair> ActorsOccupyingPoints;                             // 0x88(0x50)(Transient, NativeAccessSpecifierPrivate)
	enum class ESpawnOnFoliageStatus             Status;                                            // 0xD8(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_336B[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FTimerHandle                          WaitForWorldPartitionToLoadTimerHandle;            // 0xE0(0x8)(Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TMap<class AActor*, struct FVector>          ActorToCoordinateMap;                              // 0xE8(0x50)(Transient, NativeAccessSpecifierPrivate)
	uint8                                        Pad_336C[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TSet<TSoftObjectPtr<class UFoliageType>>     FoliageTypesToHide;                                // 0x148(0x50)(Transient, UObjectWrapper, NativeAccessSpecifierPrivate)
	int32                                        FoliageErrorHeight;                                // 0x198(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        FoliageErrorRadius;                                // 0x19C(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FColor                                FoliageErrorColor;                                 // 0x1A0(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        TerrainRaycastStartOffset;                         // 0x1A4(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        TerrainRaycastEndOffset;                           // 0x1A8(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_336E[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("SpawnOnFoliageManager");
		return Clss;
	}

	void SpawnedActorWasDestroyed(class AActor* InActorDestroyed);
	void OnLevelAddedToWorld(class ULevel* InInLevel, class UWorld* InInWorld);
};

// 0x50 (0x5B0 - 0x560)
// Class Palia.SpawnOnLevelComponent
class USpawnOnLevelComponent : public UBillboardComponent
{
public:
	TSoftObjectPtr<class UVAL_ItemTypeDefinitionAsset> ItemTypeToSpawn;                                   // 0x560(0x30)(Edit, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int32                                        LevelEarnedAt;                                     // 0x590(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_336F[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FString                                PersistAnchorUniqueIdOfPlacementRegionToUse;       // 0x598(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_3370[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("SpawnOnLevelComponent");
		return Clss;
	}

};

// 0x10 (0x570 - 0x560)
// Class Palia.SpawnPointComponent
class USpawnPointComponent : public UBillboardComponent
{
public:
	class AActor*                                OccupiedBy;                                        // 0x560(0x8)(ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_3371[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("SpawnPointComponent");
		return Clss;
	}

};

// 0x10 (0x570 - 0x560)
// Class Palia.SpawnStartingItemComponent
class USpawnStartingItemComponent : public UBillboardComponent
{
public:
	bool                                         bIsSpawnEnabled;                                   // 0x560(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3372[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UVAL_ItemTypeDefinitionAsset*          ItemTypeToSpawn;                                   // 0x568(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("SpawnStartingItemComponent");
		return Clss;
	}

};

// 0x18 (0x48 - 0x30)
// Class Palia.StablesConfigAsset
class UStablesConfigAsset : public UDataAsset
{
public:
	class UTeleportTravelConfigAsset*            SelfConfig;                                        // 0x30(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FTeleportDestinationConfig>    DestinationConfigs;                                // 0x38(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("StablesConfigAsset");
		return Clss;
	}

};

// 0x0 (0x30 - 0x30)
// Class Palia.StartingLoadoutGlobalConfig
class UStartingLoadoutGlobalConfig : public UDataAsset
{
public:

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("StartingLoadoutGlobalConfig");
		return Clss;
	}

};

// 0x198 (0x238 - 0xA0)
// Class Palia.StorageComponent
class UStorageComponent : public UActorComponent
{
public:
	uint8                                        Pad_338C[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	FMulticastInlineDelegateProperty_            OnChanged;                                         // 0xA8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            ItemAdded;                                         // 0xB8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            ItemRemoved;                                       // 0xC8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            ItemsFullyLoaded;                                  // 0xD8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnMoveAllModifierUpdated;                          // 0xE8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnDraggedItemDropped;                              // 0xF8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnItemDragged;                                     // 0x108(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FStoragePool                          PrimaryStorage;                                    // 0x118(0x68)(Net, RepNotify, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FStoragePool                          LockboxStorage;                                    // 0x180(0x68)(Net, RepNotify, ContainsInstancedReference, NativeAccessSpecifierPublic)
	uint8                                        Pad_338D[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        InteractableStorageConfigId;                       // 0x1EC(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSoftObjectPtr<class UVAL_ItemTypeDefinitionAsset> InteractableStorageItemType;                       // 0x1F0(0x30)(BlueprintVisible, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_338E[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	struct FTimerHandle                          SendItemsQueuedHandle;                             // 0x230(0x8)(NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("StorageComponent");
		return Clss;
	}

	void SortItems(TArray<struct FValeriaItem>& InItemsToSort);
	void SetActiveStoragePool(enum class EStoragePoolType InStoragePool);
	void SendInitialItemsToClient_TimerTick();
	void RpcClient_SendItemsQueued(enum class EStoragePoolType InStoragePoolType, TArray<struct FValeriaItem>& InData, bool InFullyLoaded);
	void RpcClient_RemoveItem(enum class EStoragePoolType InStoragePoolType, const struct FValeriaItem& InItem);
	void RpcClient_AddItem(enum class EStoragePoolType InStoragePoolType, const struct FValeriaItem& InItem);
	void OnReplicatedAndShouldBroadcast();
	void OnItemPlaced(class AValeriaCharacter* InVC, struct FValeriaItem& InItem, struct FPlacementRegionId& InAnchor);
	void OnItemGathered(class AValeriaCharacter* InVC, class UGatherableComponent* InGatherableComponent, struct FValeriaItem& InItem);
	void OnInventoryChanged(class UInventoryComponent* InInventory);
	bool HasFullyLoadedItems();
	struct FValeriaItem GetItemVariant(TSoftObjectPtr<class UVAL_ItemTypeDefinitionAsset>& InItemType, int32 InQualityStars, int32 InTintPersistID, enum class EStoragePoolType InStoragePool);
	TArray<struct FValeriaItem> GetItemsWithTags(struct FGameplayTagContainer& InIncludeTag, struct FGameplayTagContainer& InExcludeTag, enum class EStoragePoolType InStoragePool);
	TArray<struct FValeriaItem> GetItemsWithPlacementTags(struct FGameplayTagContainer& InIncludeTag, struct FGameplayTagContainer& InExcludeTag, enum class EStoragePoolType InStoragePool);
	TArray<struct FValeriaItem> GetItemsOfCategory(enum class EStoragePoolType InPoolType, enum class EItemStorageCategory InCategory);
	int32 GetItemMaxCapacity(enum class EStoragePoolType InStoragePool);
	int32 GetItemFreeSpace(enum class EStoragePoolType InStoragePool);
	int32 GetItemCount(enum class EStoragePoolType InStoragePool);
	int32 GetItemCapacity(enum class EStoragePoolType InStoragePool);
	int32 GetItemAmountByType(TSoftObjectPtr<class UVAL_ItemTypeDefinitionAsset>& InItemType, struct FStarQualityConstraint& InStarQualityConstraint, enum class EStoragePoolType InStoragePool);
	int32 GetItemAmountByTag(struct FGameplayTag& InIngredientTag, struct FStarQualityConstraint& InStarQualityConstraint, enum class EStoragePoolType InPoolType);
	struct FValeriaItem GetItem(TSoftObjectPtr<class UVAL_ItemTypeDefinitionAsset>& InItemType, int32 InQualityStars, enum class EStoragePoolType InStoragePool);
	TArray<struct FValeriaItem> GetAllItemsOfType(TSoftObjectPtr<class UVAL_ItemTypeDefinitionAsset>& InItemType, enum class EStoragePoolType InStoragePool);
	enum class EStoragePoolType GetActiveStoragePool();
	void CallOnMoveAllModifierUpdated(bool InIsMoveAllModifierDown);
	void CallOnItemDragged();
	void CallOnDraggedItemDropped();
};

// 0x88 (0x128 - 0xA0)
// Class Palia.SubgameActivatorComponent
class USubgameActivatorComponent : public UActorComponent
{
public:
	uint8                                        Pad_339B[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSoftObjectPtr<class USubgameConfig>         SubgameConfig;                                     // 0xA8(0x30)(Edit, BlueprintVisible, BlueprintReadOnly, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FText                                  InteractText;                                      // 0xD8(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected)
	int32                                        InteractionPriority;                               // 0xF0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_339D[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	FMulticastInlineDelegateProperty_            OnCharacterEnteredSubgame;                         // 0xF8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnCharacterExitedSubgame;                          // 0x108(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	class USubgameManagerComponent*              SubgameManager;                                    // 0x118(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bFadeToBlackOnCameraChange;                        // 0x120(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_339E[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("SubgameActivatorComponent");
		return Clss;
	}

	void SubgameManagerComponentDeactivated(class UActorComponent* InDeactivatedComponent);
	void RpcNetMulticast_NotifyCharacterExitedSubgame(class AValeriaCharacter* InPlayingCharacter, enum class ESubgameResult InSubgameResult);
	void RpcNetMulticast_NotifyCharacterEnteredSubgame(class AValeriaCharacter* InPlayingCharacter);
	void PostFinishExitSubgame(class AValeriaCharacter* InPlayingCharacter, enum class ESubgameResult InSubgameResult);
	void PostFinishBeginSubgame(class AValeriaCharacter* InPlayingCharacter);
	void OnServerUsedEquippedOnMe(class AValeriaPlayerController* InPlayer, const struct FServerUseEventParams& InParams);
	struct FServerUseEventResult OnServerInteract(class UInteractableComponent* InInteractable, class AValeriaCharacter* InCharacter, const struct FInteractEventParams& InEventParams);
	struct FUseEventResult OnClientUsedEquippedOnMe(class AValeriaPlayerController* InPlayer, const struct FUseEventParams& InParams);
	struct FUseEventResult OnClientInteract(class UInteractableComponent* InInteractable, class AValeriaPlayerController* InVpc, const struct FInteractEventParams& InEventParams);
	bool IsInteractable(class AValeriaCharacter* InCharacter, const struct FInteractEventParams& InEventParams);
	bool IsAtMaxPlayers();
	int32 InteractPriority();
	bool GetText(class AValeriaCharacter* InCharacter, enum class EInteractEventIndex InEventIndex, struct FGetTextParams* InParams);
	void FinishExitSubgame(class AValeriaCharacter* InPlayingCharacter, enum class ESubgameResult InSubgameResult);
	void FinishBeginSubgame(class AValeriaCharacter* InPlayingCharacter);
	void ExitSubgame(class USubgameManagerComponent* InExitedSubgameManager, class AValeriaCharacter* InPlayingCharacter, enum class ESubgameResult InSubgameResult);
	void BeginSubgame(class AValeriaCharacter* InPlayingCharacter);
};

// 0x30 (0x68 - 0x38)
// Class Palia.SubgameSettings
class USubgameSettings : public UDeveloperSettings
{
public:
	struct FVector                               BaseSpawnOffset;                                   // 0x38(0x18)(Edit, BlueprintVisible, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               SpawnSeparation;                                   // 0x50(0x18)(Edit, BlueprintVisible, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("SubgameSettings");
		return Clss;
	}

};

// 0xC0 (0x140 - 0x80)
// Class Palia.VAL_TaskProxy_PlayMontageAndWaitForEvent
class UVAL_TaskProxy_PlayMontageAndWaitForEvent : public UAbilityTask
{
public:
	FMulticastInlineDelegateProperty_            OnCompleted;                                       // 0x80(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnBlendOut;                                        // 0x90(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnInterrupted;                                     // 0xA0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnCancelled;                                       // 0xB0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            EventReceived;                                     // 0xC0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	class UAnimMontage*                          MontageToPlay;                                     // 0xD0(0x8)(ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FName                                  MontageMappingName;                                // 0xD8(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FGameplayTagContainer                 EventTags;                                         // 0xE0(0x20)(NativeAccessSpecifierPrivate)
	float                                        Rate;                                              // 0x100(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FName                                  StartSection;                                      // 0x104(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bStopWhenAbilityEnds;                              // 0x10C(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bHardJump;                                         // 0x10D(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_33A2[0x32];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("VAL_TaskProxy_PlayMontageAndWaitForEvent");
		return Clss;
	}

	class UVAL_TaskProxy_PlayMontageAndWaitForEvent* PlayMontageByMappingAndWaitForEvent(class UGameplayAbility* InOwningAbility, class FName InTaskInstanceName, class FName InMontageMappingToPlay, const struct FGameplayTagContainer& InEventTags, float InRate, class FName InStartSection, bool InbStopWhenAbilityEnds, bool InbHardJump);
};

// 0x88 (0x108 - 0x80)
// Class Palia.VAL_TaskProxy_PlayMontageAndWait
class UVAL_TaskProxy_PlayMontageAndWait : public UAbilityTask
{
public:
	FMulticastInlineDelegateProperty_            OnCompleted;                                       // 0x80(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnBlendOut;                                        // 0x90(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnInterrupted;                                     // 0xA0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnCancelled;                                       // 0xB0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	class UAnimMontage*                          MontageToPlay;                                     // 0xC0(0x8)(ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FName                                  MontageMappingName;                                // 0xC8(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        Rate;                                              // 0xD0(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FName                                  StartSection;                                      // 0xD4(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bStopWhenAbilityEnds;                              // 0xDC(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bHardJump;                                         // 0xDD(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_33A5[0x2A];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("VAL_TaskProxy_PlayMontageAndWait");
		return Clss;
	}

	class UVAL_TaskProxy_PlayMontageAndWait* PlayMontageByMappingAndWait(class UGameplayAbility* InOwningAbility, class FName InTaskInstanceName, class FName InMontageMappingToPlay, float InRate, class FName InStartSection, bool InbStopWhenAbilityEnds, bool InbHardJump);
};

// 0x120 (0x150 - 0x30)
// Class Palia.TeleportActorToConfigAsset
class UTeleportActorToConfigAsset : public UDataAsset
{
public:
	struct FTeleportActorToConfig                Config;                                            // 0x30(0x120)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("TeleportActorToConfigAsset");
		return Clss;
	}

};

// 0x18 (0x48 - 0x30)
// Class Palia.TeleportActorFromConfigAsset
class UTeleportActorFromConfigAsset : public UDataAsset
{
public:
	TArray<class UTeleportActorToConfigAsset*>   Configs;                                           // 0x30(0x10)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	bool                                         ShowQuestMarkers;                                  // 0x40(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         MapIntroPrivateSpace;                              // 0x41(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_33A7[0x6];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("TeleportActorFromConfigAsset");
		return Clss;
	}

};

// 0x10 (0x40 - 0x30)
// Class Palia.TeleportActorGlobalConfigAsset
class UTeleportActorGlobalConfigAsset : public UDataAsset
{
public:
	float                                        FadeOutSeconds;                                    // 0x30(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        FadeInDelaySeconds;                                // 0x34(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        FadeInSeconds;                                     // 0x38(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_33A8[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("TeleportActorGlobalConfigAsset");
		return Clss;
	}

};

// 0x40 (0x2E0 - 0x2A0)
// Class Palia.TeleportDestinationComponent
class UTeleportDestinationComponent : public USceneComponent
{
public:
	class UTeleportTravelConfigAsset*            DestinationAddress;                                // 0x2A0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnArrival;                                         // 0x2A8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            DestinationReadyCallback;                          // 0x2B8(0x10)(ZeroConstructor, InstancedReference, NativeAccessSpecifierPublic)
	class AHousingPlotActor*                     OwningPlot;                                        // 0x2C8(0x8)(ZeroConstructor, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UWorldPartitionStreamingSourceComponent* StreamingSourceComponent;                          // 0x2D0(0x8)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_33A9[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("TeleportDestinationComponent");
		return Clss;
	}

};

// 0x150 (0x3E0 - 0x290)
// Class Palia.TeleporterActor
class ATeleporterActor : public AActor
{
public:
	uint8                                        Pad_33B9[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	enum class ETeleportActorDestination         Destination;                                       // 0x298(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_33BA[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FTransform                            TeleportWorldPoint;                                // 0x2A0(0x60)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                TeleportMapName;                                   // 0x300(0x10)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnErrorMessageTriggered;                           // 0x310(0x10)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, NativeAccessSpecifierPublic)
	TArray<struct FPersistentTagFilter>          PlayerTagRequirements;                             // 0x320(0x10)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	class FText                                  ErrorMessage;                                      // 0x330(0x18)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	class FText                                  InteractText;                                      // 0x348(0x18)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	struct FSecondaryTeleportOptions             DefaultSecondaryTeleportOptions;                   // 0x360(0x38)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnTeleporterUsedServer;                            // 0x398(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	class USceneComponent*                       Root;                                              // 0x3A8(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class USceneComponent*                       TeleportTo;                                        // 0x3B0(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class USphereComponent*                      InteractableCollider;                              // 0x3B8(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UInteractableComponent*                Interactable;                                      // 0x3C0(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UTeleportOriginComponent*              TeleportOrigin;                                    // 0x3C8(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTeleportDestinationComponent*         TeleportDestination;                               // 0x3D0(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_33BB[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("TeleporterActor");
		return Clss;
	}

	void TeleportToPlayerHouse(class AValeriaPlayerController* InPlayer, struct FUniqueNetIdRepl& InUserId);
	void TeleportToDestination(class AValeriaPlayerController* InPlayer);
	void RpcServer_TeleportToDestination(class AValeriaPlayerController* InPlayer);
	struct FServerUseEventResult OnServerInteract(class UInteractableComponent* InInteractable, class AValeriaCharacter* InCharacter, const struct FInteractEventParams& InEventParams);
	struct FUseEventResult OnClientInteract(class UInteractableComponent* InInteractable, class AValeriaPlayerController* InPlayer, const struct FInteractEventParams& InParams);
	bool IsSecondaryTeleportOptionsEmpty(struct FSecondaryTeleportOptions& InOptions);
	bool IsInteractable(class AValeriaCharacter* InCharacter, const struct FInteractEventParams& InEventParams);
	int32 InteractPriority();
	bool HasSecondaryTeleportationOptions(class AValeriaPlayerController* InPlayer);
	bool GetText(class AValeriaCharacter* InCharacter, enum class EInteractEventIndex InEventIndex, struct FGetTextParams* InParams);
	struct FSecondaryTeleportOptions GetSecondaryTeleportationOptions(class AValeriaPlayerController* InPlayer);
	bool DisplaySecondaryTeleportationOptions(class AValeriaPlayerController* InPlayer);
};

// 0x8 (0xA8 - 0xA0)
// Class Palia.TeleportFromComponent
class UTeleportFromComponent : public UActorComponent
{
public:
	class UTeleportActorFromConfigAsset*         TeleportConfig;                                    // 0xA0(0x8)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("TeleportFromComponent");
		return Clss;
	}

};

// 0x60 (0x100 - 0xA0)
// Class Palia.TeleportOriginComponent
class UTeleportOriginComponent : public UActorComponent
{
public:
	class UTeleportTravelConfigAsset*            DefaultDestinationAddress;                         // 0xA0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTeleportTravelConfigAsset*            TargetTravelAsset;                                 // 0xA8(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TMap<class AValeriaCharacter*, class UTeleportTravelConfigAsset*> CharacterSpecificTravelRegistry;                   // 0xB0(0x50)(Protected, NativeAccessSpecifierProtected)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("TeleportOriginComponent");
		return Clss;
	}

	void SetTravelAsset(class UTeleportTravelConfigAsset* InInTravelAsset, class AValeriaCharacter* InInSettingCharacter);
	bool HasValidTravelDestination(class AValeriaCharacter* InTeleportingCharacter);
	class UTeleportTravelConfigAsset* GetTravelAsset(class AValeriaCharacter* InTravelingCharacter);
	bool ExecuteServerTeleport(class AValeriaCharacter* InTeleportingCharacter, class AActor* InSeamlessAnchor);
	bool ExecuteClientTeleport(class AValeriaCharacter* InTeleportingCharacter, class AActor* InSeamlessAnchor);
};

// 0x10 (0x2B0 - 0x2A0)
// Class Palia.TeleportToComponent
class UTeleportToComponent : public USceneComponent
{
public:
	class UTeleportActorToConfigAsset*           TeleportConfigAsset;                               // 0x2A0(0x8)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_33C6[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("TeleportToComponent");
		return Clss;
	}

};

// 0x128 (0x158 - 0x30)
// Class Palia.TeleportTravelConfigAsset
class UTeleportTravelConfigAsset : public UDataAsset
{
public:
	enum class ETeleportTravelType               TravelType;                                        // 0x30(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_33CA[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FText                                  DestinationDisplayName;                            // 0x38(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UWorld>                 Map;                                               // 0x50(0x30)(Edit, BlueprintVisible, BlueprintReadOnly, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UExperiencePackageConfig> ExperiencePackage;                                 // 0x80(0x30)(Edit, BlueprintVisible, BlueprintReadOnly, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UPrivateSpaceConfig>    PrivateSpaceConfig;                                // 0xB0(0x30)(Edit, BlueprintVisible, BlueprintReadOnly, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        CrossMapTrackingTypes;                             // 0xE0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_33CB[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FPersistentTagFilter>          PlayerTagRequirements;                             // 0xE8(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	class UVAL_GameplayConditionDef*             Condition;                                         // 0xF8(0x8)(Edit, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, PersistentInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FText                                  WrongTagsErrorMessage;                             // 0x100(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	bool                                         bFadeScreen;                                       // 0x118(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bSeamlessTeleport;                                 // 0x119(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_33CD[0x6];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FVector                               SpecificLocationOverride;                          // 0x120(0x18)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FRotator                              SpecficRotationOverride;                           // 0x138(0x18)(ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	class ULimitedEventDataAsset*                LimitedEvent;                                      // 0x150(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("TeleportTravelConfigAsset");
		return Clss;
	}

	bool IsDestinationActive(class UObject* InWorldContextObject);
	bool ArePlayerTagRequirementsMet(class AValeriaCharacter* InValeriaCharacter);
};

// 0x68 (0x150 - 0xE8)
// Class Palia.TimedDropComponent
class UTimedDropComponent : public ULootInteractorBaseComponent
{
public:
	uint8                                        Pad_33CF[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	FMulticastInlineDelegateProperty_            OnCooldownStatusChanged;                           // 0xF0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	enum class ECooldownTimerType                CooldownType;                                      // 0x100(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_33D0[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        NumDaysCooldown;                                   // 0x104(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        CooldownLengthSecs;                                // 0x108(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bCooldownComplete;                                 // 0x10C(0x1)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, Transient, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_33D1[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FQuestRewardConfig>            Rewards;                                           // 0x110(0x10)(Edit, BlueprintVisible, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_33D3[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FQuestReward>                  RolledRewards;                                     // 0x128(0x10)(Net, ZeroConstructor, Transient, NativeAccessSpecifierPrivate)
	uint8                                        Pad_33D4[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class AValeriaCharacter*                     CachedOwnerCharacter;                              // 0x148(0x8)(ZeroConstructor, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("TimedDropComponent");
		return Clss;
	}

	void OnRep_bCooldownComplete();
	bool IsCooldownComplete();
	class AValeriaCharacter* GetCachedOwnerCharacter();
};

// 0x60 (0x2F0 - 0x290)
// Class Palia.WorldGatherableBase
class AWorldGatherableBase : public AActor
{
public:
	class USceneComponent*                       GatherableRootComponent;                           // 0x290(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UArrowComponent*                       RootVisual;                                        // 0x298(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UStaticMeshComponent*                  MeshVisual;                                        // 0x2A0(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USphereComponent*                      InteractableCollider;                              // 0x2A8(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UAkCulledComponent*                    AkCulledComponent;                                 // 0x2B0(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UInteractableComponent*                InteractableComponent;                             // 0x2B8(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UStaticLootInteractorComponent*        StaticLootInteractorComponent;                     // 0x2C0(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UAkAudioEvent*                         IdleLoopSFX;                                       // 0x2C8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UAkAudioEvent*                         GatherSFX;                                         // 0x2D0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bClientValidForGather;                             // 0x2D8(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_33DE[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class AValeriaCharacter*                     CachedLocalValeriaCharacter;                       // 0x2E0(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FTimerHandle                          TryGetValeriaCharacterTimerHandle;                 // 0x2E8(0x8)(NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("WorldGatherableBase");
		return Clss;
	}

	void UpdateGatherableEnabledState();
	void SetGatherableEnabled(bool InbInEnabled);
	void RpcNetMulticast_RequestUpdateGatherableEnabledState();
	void Client_TryGetValeriaCharacter();
	void CharacterGatheredLoot(class AValeriaCharacter* InGatheringCharacter, class ULootInteractorBaseComponent* InGatheredLootComponent);
	bool CanGather(class AValeriaCharacter* InGatheringCharacter);
	void BPIE_GatherableGathered(class AValeriaCharacter* InGatheringCharacter);
	void BPIE_GatherableEnabled();
	void BPIE_GatherableDisabled();
};

// 0x10 (0x300 - 0x2F0)
// Class Palia.TimedLootPile
class ATimedLootPile : public AWorldGatherableBase
{
public:
	bool                                         bInitialized;                                      // 0x2F0(0x1)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_33DF[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FGameplayTag                          GroupTag;                                          // 0x2F4(0x8)(BlueprintVisible, BlueprintReadOnly, Net, Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bActivated;                                        // 0x2FC(0x1)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, Transient, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_33E0[0x3];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("TimedLootPile");
		return Clss;
	}

	void TimedLootPileAdded(const struct FGameplayTag& InInTag, class FName InInActorName);
	void OnRep_bActivated();
	bool IsInitialized();
	bool IsActivated();
};

// 0x30 (0x2C0 - 0x290)
// Class Palia.TimedLootPileManager
class ATimedLootPileManager : public AActor
{
public:
	struct FGameplayTag                          GroupTag;                                          // 0x290(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnTemplate, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<class ATimedLootPile*>                TimedLootPiles;                                    // 0x298(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, Protected, NativeAccessSpecifierProtected)
	int32                                        NumLootPilesToActivate;                            // 0x2A8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_33E1[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class ATimedLootPile*>                ValidTimedLootPiles;                               // 0x2B0(0x10)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, Protected, NativeAccessSpecifierProtected)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("TimedLootPileManager");
		return Clss;
	}

	void ServerDailyReset();
};

// 0x10 (0x2A0 - 0x290)
// Class Palia.TimeOfDayAudioActor
class ATimeOfDayAudioActor : public AActor
{
public:
	TArray<struct FTimeOfDayAudio>               AudioSettings;                                     // 0x290(0x10)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("TimeOfDayAudioActor");
		return Clss;
	}

};

// 0x40 (0xE0 - 0xA0)
// Class Palia.TrackingTargetComponent
class UTrackingTargetComponent : public UActorComponent
{
public:
	class UPlayerCompassTargetConfigAsset*       Asset;                                             // 0xA0(0x8)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FText                                  Tooltip;                                           // 0xA8(0x18)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	class FText                                  DisplayText;                                       // 0xC0(0x18)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	int32                                        TrackingOn;                                        // 0xD8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EWorldLocationContext             WorldLocationContext;                              // 0xDC(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_33E2[0x3];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("TrackingTargetComponent");
		return Clss;
	}

};

// 0x2A0 (0x340 - 0xA0)
// Class Palia.TrackingComponent
class UTrackingComponent : public UActorComponent
{
public:
	FMulticastInlineDelegateProperty_            OnItemTracked;                                     // 0xA0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnItemUntracked;                                   // 0xB0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnTrackedItemChanged;                              // 0xC0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnUserMarkerSet;                                   // 0xD0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	class AValeriaPlayerController*              ValeriaPlayerController;                           // 0xE0(0x8)(ZeroConstructor, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FTrackedItemSerializer                TrackedItemList;                                   // 0xE8(0x120)(Net, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	int32                                        FocusedItemId;                                     // 0x208(0x4)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        ForceQuestIconUpdateTime;                          // 0x20C(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTexture2D*                            UnmetVillagerIcon;                                 // 0x210(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTexture2D*                            LocalPlayerIcon;                                   // 0x218(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTexture2D*                            RemotePlayerIcon;                                  // 0x220(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTexture2D*                            UserMarkerIcon;                                    // 0x228(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTexture2D*                            PartyMarkerIcon;                                   // 0x230(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class AActor>                    InWorldMarkerClass_LocalPlayer;                    // 0x238(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class AActor>                    InWorldMarkerClass_PartyMemberFocus;               // 0x240(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class AActor>                    InWorldMarkerClass_QuestGoal;                      // 0x248(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class ECollisionChannel                 WorldMapTraceCollisionChannel;                     // 0x250(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_33ED[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class AValeriaCharacter*                     ValeriaCharacter;                                  // 0x258(0x8)(ZeroConstructor, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FTimerHandle                          TimerHandle;                                       // 0x260(0x8)(NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<class AActor*>                        QuestTrackedActors;                                // 0x268(0x10)(ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	TMap<int32, class AActor*>                   ClientSpawnedInWorldMarkers;                       // 0x278(0x50)(Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_33EE[0x18];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	struct FTimerHandle                          UpdateTrackedResourcesHandle;                      // 0x2E0(0x8)(Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FTimerHandle                          ForceQuestIconUpdateHandle;                        // 0x2E8(0x8)(Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSet<class UClass*>                          ClassesToConsiderForTrackedResources;              // 0x2F0(0x50)(Transient, Protected, NativeAccessSpecifierProtected)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("TrackingComponent");
		return Clss;
	}

	void UpdateTrackedResources();
	void Server_OnCharacterLocationContextChanged(class AValeriaCharacter* InCharacter, enum class EWorldLocationContext InLocationContext);
	void RpcServer_UpdateQuestTracking();
	void RpcServer_TeleportToResource();
	void RpcServer_SetUserMarkerViaWorldMap(struct FVector2D& InWorldMapMarkerLocation);
	void RpcServer_SetUserMarker(const struct FVector& InLocation);
	void RpcServer_SetPartyMembers(TArray<struct FUniqueNetIdRepl>& InPartyMembers);
	void RpcServer_SetFocusedItem(int32 InNewFocusedItemId);
	void RpcClient_SetUserMarkerViaWorldMap(struct FVector& InMarkerLocation);
	void RpcClient_HandleOnPartyMemberLocationContextChanged(class AValeriaCharacter* InCharacter, enum class EWorldLocationContext InLocationContext);
	void HandleVitalsChanged(class UVitalsComponent* InVitals);
	void HandleVisibilityChanged(class AValeriaVillagerCharacter* InVillager);
	void HandleVillagersOnMapChanged();
	void HandleTeleported(class AValeriaPlayerController* InController);
	void HandleSkillsLevelChanged(enum class ESkillType InSkillType);
	void HandleQuestProgressChanged(class UQuestProgressComponent* InQuestProgress);
	void HandlePrivateSpaceChanged(class AValeriaCharacter* InCharacter, class UPrivateSpaceConfig* InPrivateSpaceConfig);
	void HandlePossessionChanged(class AValeriaPlayerController* InPlayerController);
	void HandleOnPartyStateChanged(enum class EVAL_PartyManagerState InState);
	void HandleOnPartyMemberChanged(struct FVAL_PartyMember& InMember);
	void HandleDialogueHistoryChanged(class UDialogueHistoryComponent* InDialogueHistoryComponent);
	void HandleDestroyedTrackingActor(class AActor* InDestroyedTrackingActor);
	void HandleCurrentActivityChanged(class AValeriaVillagerController* InVillagerController);
	TArray<struct FTrackedItemInfo> GetTrackedItems();
	void ForceQuestIconUpdate();
	void FindClosestResourceTracked(const struct FVector& InCenter, struct FTrackedItemInfo* InOutClosestItemInfo, enum class EValeriaFuncResult* InOutResult);
	void Client_SetUserMarkerViaWorldMap(const struct FVector2D& InWorldMapMarkerLocation);
	void Client_SetUserMarker(const struct FVector& InMarkerLocation);
	bool Client_SetFocusedItem(int32 InNewItemId);
	bool Client_IsFocusedItem(int32 InTrackedItemId);
	void Client_HandleOnPartyMemberLocationContextChangedAfterDelay(class AValeriaCharacter* InCharacter, enum class EWorldLocationContext InLocationContext);
};

// 0x18 (0xB8 - 0xA0)
// Class Palia.TransitiveDecorComponent
class UTransitiveDecorComponent : public UActorComponent
{
public:
	FMulticastInlineDelegateProperty_            OnProgressTransitiveDecor;                         // 0xA0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                        Pad_33EF[0x5];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         bShouldAutoProgress;                               // 0xB5(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_33F0[0x2];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("TransitiveDecorComponent");
		return Clss;
	}

	void ReceiveOnProgressTransitiveDecor();
};

// 0x360 (0x390 - 0x30)
// Class Palia.TravelManager
class UTravelManager : public ULocalPlayerSubsystem
{
public:
	uint8                                        Pad_33F6[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	FMulticastInlineDelegateProperty_            OnJoinSessionSuccess;                              // 0x38(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnJoinSessionFailure;                              // 0x48(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnStatusChanged;                                   // 0x58(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnTravelFailure;                                   // 0x68(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnNetworkFailure;                                  // 0x78(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnMatchmakingRequestDeletedResultObtained;         // 0x88(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnServerQueueNumberUpdated;                        // 0x98(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	class FString                                NetworkTravelFailureErrorMsg;                      // 0xA8(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FText                                  KickedReason;                                      // 0xB8(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnTravelCompleted;                                 // 0xD0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	class AOSSVAL_BeaconClient*                  BeaconClient;                                      // 0xE0(0x8)(ZeroConstructor, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_33F7[0x138];                                   // Fixing Size After Last Property  [ Dumper-7 ]
	class UTexture2D*                            IconTexture;                                       // 0x220(0x8)(ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_33F8[0x138];                                   // Fixing Size After Last Property  [ Dumper-7 ]
	class UPaliaScreenStateRequester*            TravelScreenStateRequester;                        // 0x360(0x8)(ZeroConstructor, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_33F9[0x28];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("TravelManager");
		return Clss;
	}

	bool WasKicked();
	void StoreTravelNetworkFailure(const class FString& InMsg);
	void StoreKickReason(class FText& InReason);
	void SetMapTravelReason(enum class EMapTravelReason InMapTravelReason);
	void SetLoadingScreenVisibility(bool InIsVisible);
	void SetDestination(struct FTravelDestination& InDestination);
	void RequestReservationForSession(struct FBlueprintSessionResult& InSession);
	void OnTravelFailure__DelegateSignature(const class FString& InErrorMsg);
	void OnTravelCompleted__DelegateSignature(const class FString& InStartMap, const class FString& InEndMap);
	void OnServerQueueNumberUpdated__DelegateSignature(int32 InNumber);
	void OnNetworkFailure__DelegateSignature(const class FString& InErrorMsg);
	void OnMatchmakingRequestDeletedResultObtained__DelegateSignature(struct FOSSVAL_MatchmakingResult& InResult);
	void JoinSession(struct FBlueprintSessionResult& InSession);
	bool IsTravelStatusAFailure(enum class ETravelManagerStatus InStatus);
	bool IsCurrentlyMatchmaking();
	bool HadTravelNetworkFailure();
	class FText GetPrintableTextForStatus(enum class ETravelManagerStatus InStatus);
	class FString GetPreTravelMapName();
	class FString GetPostTravelMapName();
	enum class ETravelManagerStatus GetCurrentStatus();
	void FindSession(const class FString& InMapName);
	void ClearTravelNetworkFailure();
	void ClearKickReason();
};

// 0x0 (0x28 - 0x28)
// Class Palia.Useable
class IUseable : public IInterface
{
public:

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("Useable");
		return Clss;
	}

	struct FSelfUseEventResult OnClientUseEquippedOutward(class AValeriaPlayerController* InPlayer, const struct FUseEventParams& InParams);
	struct FSelfUseEventResult OnClientUseEquippedInward(class AValeriaPlayerController* InPlayer, const struct FUseEventParams& InParams);
};

// 0x8 (0x2D8 - 0x2D0)
// Class Palia.ValeriaAkAmbientSound
class AValeriaAkAmbientSound : public AAkAmbientSound
{
public:
	class UAkAudioEvent*                         AkEvent;                                           // 0x2D0(0x8)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("ValeriaAkAmbientSound");
		return Clss;
	}

};

// 0x8 (0x298 - 0x290)
// Class Palia.ValeriaAkCulledAmbientSound
class AValeriaAkCulledAmbientSound : public AActor
{
public:
	class UAkCulledComponent*                    AkCulledComponent;                                 // 0x290(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("ValeriaAkCulledAmbientSound");
		return Clss;
	}

};

// 0x0 (0x28 - 0x28)
// Class Palia.ValeriaAkFunctionLibrary
class UValeriaAkFunctionLibrary : public UBlueprintFunctionLibrary
{
public:

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("ValeriaAkFunctionLibrary");
		return Clss;
	}

	void VTrackAkEventOnActor(int32 InPlayingID, class UAkAudioEvent* InAkEvent, class AActor* InActor, bool InbOverrideExisting);
	void VTrackAkEventAtLocation(class UObject* InWorldContextObject, int32 InPlayingID, class UAkAudioEvent* InAkEvent, const struct FVector& InLocation, bool InbOverrideExisting);
	void VTrackAkComponent(class UAkComponent* InAkComponent, class UAkAudioEvent* InAkEvent, const struct FVector& InLocation, int32 InPlayingID, bool InbOverrideExisting);
	bool VIsWithinAttenuation(class UObject* InWorldContextObject, class UAkAudioEvent* InAkEvent, const struct FVector& InLocation);
	void VExecuteActionOnPlayingID(enum class EAkActionOnEventType InActionType, int32 InPlayingID, int32 InTransitionDuration, enum class EAkCurveInterpolation InFadeCurve);
	class UAkComponent* VAkGetComponent(class USceneComponent* InAttachToComponent, bool* InComponentCreated, class FName InAttachPointName, const struct FVector& InLocation, enum class EAttachLocation InLocationType, bool InbAutoDestroy);
	int32 VAkEventLocation(class UObject* InWorldContextObject, class UAkAudioEvent* InAkEvent, const struct FVector& InLocation, class AActor* InInstigator, class UAkComponent** InOutComponent);
	int32 VAkEventComponent(class UAkAudioEvent* InAkEvent, class UAkComponent* InAkComponent);
	void GetValeriaAudioListenerPosition(class UObject* InWorldContextObject, struct FVector* InOutLocation, struct FVector* InOutFrontDir, struct FVector* InOutRightDir);
	TArray<class UAkRoomComponent*> GetAudioRoomComponents(class UObject* InWorldContextObject);
	int32 GetAkNotifyId(class USkeletalMeshComponent* InMesh, class UAnimNotifyState* InNotifyState, bool InRemove);
	void ForceDestroyComponent(class UActorComponent* InComponent, bool InbPromoteChildren);
	float FindClosestActorCollision(class UObject* InWorldContextObject, struct FVector& InPoint, class AActor* InActor, enum class ECollisionChannel InTraceChannel, struct FVector& InClosestPointOnCollision);
	void ClearAkNotifyIds();
	class UAkComponent* AkSpawnAtLocation(class UObject* InWorldContextObject, class UAkAudioEvent* InAkEvent, class AActor* InActor, const struct FVector& InLocation, const struct FRotator& InOrientation, bool InAutoPost, const class FString& InEventName, bool InAutoDestroy);
	void AddAkNotifyId(class USkeletalMeshComponent* InMesh, class UAnimNotifyState* InNotifyState, int32 InID);
};

// 0x78 (0x3A0 - 0x328)
// Class Palia.ValeriaAkHomeVerbComponent
class UValeriaAkHomeVerbComponent : public UAkLateReverbComponent
{
public:
	class UAkRoomComponent*                      RoomComponent;                                     // 0x328(0x8)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        CurrentTotalAbsorption;                            // 0x330(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_341D[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FAbsorptionAuxBusSetting>      AuxBusSettings;                                    // 0x338(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	float                                        SendLevelDb;                                       // 0x348(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        VFadeRate;                                         // 0x34C(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSet<class UGatherableComponent*>            Gatherables;                                       // 0x350(0x50)(BlueprintVisible, ExportObject, BlueprintReadOnly, ContainsInstancedReference, NativeAccessSpecifierPublic)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("ValeriaAkHomeVerbComponent");
		return Clss;
	}

	void UpdateRoom();
	void UpdateAuxBus(class UAkAuxBus* InNewBus);
	void UpdateAbsorption();
	void HandleEndOverlap(class UPrimitiveComponent* InOverlappedComponent, class AActor* InOtherActor, class UPrimitiveComponent* InOtherComp, int32 InOtherBodyIndex);
	void HandleBeginOverlap(class UPrimitiveComponent* InOverlappedComponent, class AActor* InOtherActor, class UPrimitiveComponent* InOtherComp, int32 InOtherBodyIndex, bool InbFromSweep, struct FHitResult& InSweepResult);
	class UAkRoomComponent* GetRoomComponent();
	bool AddGatherable(class UGatherableComponent* InGatherableComp);
};

// 0x8 (0x490 - 0x488)
// Class Palia.ValeriaAkListenerComponent
class UValeriaAkListenerComponent : public UAkComponent
{
public:
	class UObject*                               OriginalOuter;                                     // 0x488(0x8)(ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("ValeriaAkListenerComponent");
		return Clss;
	}

};

// 0x10 (0x2B0 - 0x2A0)
// Class Palia.ValeriaAkTriggerComponent
class UValeriaAkTriggerComponent : public USceneComponent
{
public:
	class UPrimitiveComponent*                   PrimitiveParent;                                   // 0x2A0(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3423[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("ValeriaAkTriggerComponent");
		return Clss;
	}

	void TriggerUpdate();
	void SetParameters();
	void HandleEndOverlap(class UPrimitiveComponent* InOverlappedComponent, class AActor* InOtherActor, class UPrimitiveComponent* InOtherComp, int32 InOtherBodyIndex);
	void HandleBeginOverlap(class UPrimitiveComponent* InOverlappedComponent, class AActor* InOtherActor, class UPrimitiveComponent* InOtherComp, int32 InOtherBodyIndex, bool InbFromSweep, struct FHitResult& InSweepResult);
};

// 0x18 (0x368 - 0x350)
// Class Palia.ValeriaAnimInstance
class UValeriaAnimInstance : public UAnimInstance
{
public:
	float                                        IsMovingThreshold;                                 // 0x348(0x4)(Edit, BlueprintVisible, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        TurnedThreshold;                                   // 0x34C(0x4)(Edit, BlueprintVisible, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        TurnedAroundThreshold;                             // 0x350(0x4)(Edit, BlueprintVisible, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        BaseYawOffset;                                     // 0x354(0x4)(Edit, BlueprintVisible, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  MoveSpeedCurve;                                    // 0x358(0x8)(Edit, BlueprintVisible, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  RootRotationCurve;                                 // 0x360(0x8)(Edit, BlueprintVisible, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("ValeriaAnimInstance");
		return Clss;
	}

	bool IsTurnedRight();
	bool IsTurnedLeft();
	bool IsTurnedAround();
	bool IsMoving();
	struct FRotator GetRootRotation();
	class UAnimSequenceBase* GetRandomAnimSetSequence(struct FWeightedAnimSet& InInAnimSet);
	float GetOwningMeshForwardAxisScale();
	float GetOwnerYaw();
	float GetLinearMovementPlayRate(float InMin, float InMax);
	struct FVector2D GetGroundVelocity();
	float GetGroundSpeed();
	float GetDeltaYaw();
};

// 0x0 (0x28 - 0x28)
// Class Palia.ValeriaAutomationBpFunctionLibrary
class UValeriaAutomationBpFunctionLibrary : public UBlueprintFunctionLibrary
{
public:

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("ValeriaAutomationBpFunctionLibrary");
		return Clss;
	}

	void VALTEST_TestTrue(class UObject* InContext, const class FString& InResult, bool InWasSuccess);
	bool VALTEST_IsInAutomationWorld(class UObject* InContext);
	void VALTEST_FinishMapTest(class UObject* InContext);
};

// 0x0 (0x28 - 0x28)
// Class Palia.ValeriaBlueprintFunctionLibrary
class UValeriaBlueprintFunctionLibrary : public UBlueprintFunctionLibrary
{
public:

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("ValeriaBlueprintFunctionLibrary");
		return Clss;
	}

	int32 Wrap(int32 InNumber, int32 InMax);
	void WaitForValeriaCharacter(class UObject* InWorldContextObject, const struct FLatentActionInfo& InLatentInfo, class AValeriaCharacter** InValeriaCharacter);
	void WaitForLimitedEventManager(class UObject* InWorldContextObject, const struct FLatentActionInfo& InLatentInfo, class ULimitedEventDataAsset* InLimitedEventDataAsset, class ALimitedEventManagerBase** InEventManager);
	bool VitalEquals(const struct FVital& InVital1, const struct FVital& InVital2);
	bool TryGetObjectPathFromPackageName(const class FString& InInPackageName, class FString* InOutObjectPath);
	void SyncWidgetsTest1(class UUserWidget* InOwner, class UPanelWidget* InParentPanel, TSubclassOf<class UUserWidget> InWidgetToCreate, TArray<class UObject*>& InObjectsToSync);
	struct FInt64Split SubtractInt64(const struct FInt64Split& InA, const struct FInt64Split& InB);
	class FText StripTextTags(class FText& InInputText);
	class AActor* SpawnActorOnGround(class UObject* InContext, TSubclassOf<class AActor> InActorClass, const struct FTransform& InSpawnTransform, enum class ESpawnActorCollisionHandlingMethod InCollisionHandlingMethod, float InUnitsToTraceDown);
	void SortStoreItemsArrayBySkillLevel(TArray<struct FStoreItem>& InOutStoreItems);
	void SortStoreItemsArrayByRecipeAndSkillLevel(TArray<struct FStoreItem>& InOutStoreItems);
	TArray<class FName> SortRecipeArray(class UObject* InContext, TArray<class FName>& InArr);
	void SortItemTypes(TArray<class UVAL_ItemTypeDefinitionAsset*>* InItems, enum class EItemSortType InSortType);
	TArray<class FName> SortFNameArray(TArray<class FName>& InArr);
	TArray<class AActor*> SortActorsByClosest(TArray<class AActor*>& InActors, const struct FVector& InCenter);
	TArray<class FString> Sort(TArray<class FString>& InArray);
	bool ShouldVillagerDisappearDuringActivity(struct FVillagerScheduleActivity& InInVillagerScheduleActivity);
	void SetMapTravelReason(class UObject* InContext, enum class EMapTravelReason InTravelReason);
	bool SetBlueprintStaticMesh(class FName InPath, class FName InComponentName, class UStaticMesh* InMesh);
	bool SetBlueprintGatherableItemRow(class FName InPath, class FName InRowName);
	void SaveStringToFile(const class FString& InInputText, const class FString& InFilename);
	bool SameItemTypeVariantAndQuality(const struct FValeriaItem& InItem1, const struct FValeriaItem& InItem2);
	void RunBuildVerification();
	struct FGameplayTag RequestGameplayTag(class FName InDesiredTagName);
	bool PlacementHoverInfoEquals(struct FPlacementHoverInfo& InInfo1, struct FPlacementHoverInfo& InInfo2);
	class FText PerformTextSubstitutionsForCharacter(class FText& InInputText, class AValeriaCharacter* InCharacter);
	class FText PerformTextSubstitutions(class FText& InInputText, class UObject* InContext);
	void OpenTutorialWidget(class UObject* InContext, class APlayerController* InOwningPlayer, const TArray<TSoftClassPtr<class UUserWidget>>& InTutorialWidgetClasses, TSoftClassPtr<class UUserWidget> InTutorialModalClass, FDelegateProperty_ InOpenModalDelegate);
	void OnOpenModalWidget__DelegateSignature(class UUserWidget* InModalWidget, TArray<class UUserWidget*>& InTutorialWidgets);
	float MoveTowards(float InValue, float InTarget, float InDelta);
	bool MontageHasSection(class UAnimMontage* InMontage, class FName& InSectionName);
	class FString MakePartOfTextInvisible(class FText InInputText, float InAccumulatedTime, class UObject* InContext, bool* InIsTextFullyDisplayed);
	void LoadFileToText(class FText* InOutputText, const class FString& InFilename);
	bool ItemIsEmpty(const struct FValeriaItem& InItem);
	bool ItemEquals(const struct FValeriaItem& InItem1, const struct FValeriaItem& InItem2);
	bool ItemCanBePlaced(struct FValeriaItem& InItem);
	bool IsReturnHomeMapButtonVisible(class UObject* InContext);
	bool IsReturnHomeEnabled(class AValeriaCharacter* InCharacter);
	bool IsPlayInEditor(class UObject* InWorldContextObject);
	bool IsOtherInventoryOpen(class UObject* InContext);
	bool IsOnHousingPlot(class UObject* InContext);
	bool IsMouseHiddenOnToolWheel();
	bool IsMobilePlatform(class UObject* InContext);
	bool IsMinigameWorld(class UObject* InContext);
	bool IsLoadTestClient();
	bool IsItemTypeInCategory(class UObject* InContext, class UVAL_ItemTypeDefinitionAsset* InItemType, enum class EItemStorageCategory InCategory);
	bool IsItemOwned(class UObject* InContext, TSoftObjectPtr<class UVAL_ItemTypeDefinitionAsset>& InItemType);
	bool IsFTUEMapOrExperience(const class FString& InMapOrExperienceName);
	bool IsFTUEComplete(class AValeriaCharacter* InCharacter);
	bool IsDialogueTypeQuestOrImportantDialogue(enum class EDialogueType InInDialogueType);
	bool IsDialogueTypeQuestDialogue(enum class EDialogueType InInDialogueType);
	bool IsDialogueTypeImportantDialogue(enum class EDialogueType InInDialogueType);
	bool IsDialogueRequirementMetForWorldVillager(class UObject* InContext, struct FDialogueRequirements& InRequirement, class AValeriaCharacter* InPlayerCharacter, class AValeriaVillagerCharacter* InVillagerCharacter);
	bool IsDialogueRequirementMetForVillagerId(class UObject* InContext, struct FDialogueRequirements& InRequirement, class AValeriaCharacter* InPlayerCharacter, int32 InVillagerId);
	bool IsBagSlotLocationValid(const struct FBagSlotLocation& InLocation);
	bool IntLevelArrayHasLevel(TArray<int32>& InLevelArray, int32 InLevel);
	bool InsectsAreTrappedInsteadOfDamaged();
	bool GetWaterPercent(class UObject* InContext, struct FValeriaItem& InItem, float* InPercent);
	struct FVitalConfig GetVitalConfigByType(class UObject* InContext, enum class EVitalType InTyp);
	struct FVitalConfig GetVitalConfigById(class UObject* InContext, int32 InID);
	TArray<int32> GetVisibleVillagerCoreConfigIds(class UObject* InContext, bool InbSortAlphabetically);
	class FName GetVillagerRowNameByCoreConfigId(class UObject* InContext, int32 InVillagerCoreId);
	class FName GetVillagerRowNameByConfigId(class UObject* InContext, int32 InVillagerId);
	void GetVillagerRelationshipXpProgressForCurrentLevel(class UObject* InContext, int32 InValue, enum class ERelationshipType InType, int32 InVillagerCoreId, int32* InOutXpProgressForCurrentLevel, int32* InOutXpMaxForCurrentLevel, bool* InbOutMaxLevel);
	float GetVillagerRelationshipLevelPercentageByVillagerCoreId(class UObject* InContext, int32 InValue, enum class ERelationshipType InType, int32 InVillagerCoreId, bool* InbOutMaxLevel);
	struct FVillagerQuestConfig GetVillagerQuestDataTableRow(class UObject* InContext, const struct FDataTableRowHandle& InHandle, enum class EValeriaFuncResult* InOutResult);
	struct FVillagerMailMessageConfig GetVillagerMailMessageDataTableRow(class UObject* InContext, const struct FDataTableRowHandle& InHandle, enum class EValeriaFuncResult* InOutResult);
	class AValeriaVillagerCharacter* GetVillagerInWorldById(class UObject* InContext, int32 InInVillagerId);
	TArray<int32> GetVillagerIdsByVillagerCoreId(class UObject* InContext, int32 InVillagerCoreId);
	struct FVillagerGiftPreferenceConfig GetVillagerGiftPreferenceConfigById(class UObject* InContext, int32 InID);
	struct FVillagerConfig GetVillagerDataTableRow(class UObject* InContext, const struct FDataTableRowHandle& InHandle, enum class EValeriaFuncResult* InOutResult);
	int32 GetVillagerCoreIdByVillagerId(class UObject* InContext, int32 InVillagerId);
	struct FVillagerCoreConfig GetVillagerCoreDataTableRow(class UObject* InContext, const struct FDataTableRowHandle& InHandle, enum class EValeriaFuncResult* InOutResult);
	struct FVillagerCoreConfig GetVillagerCoreConfigById(class UObject* InContext, int32 InID);
	struct FVillagerConfig GetVillagerConfigById(class UObject* InContext, int32 InID);
	TArray<uint8> GetValuesFromGrayscaleTexture(class UTexture2D* InTexture);
	uint8 GetValueFromFlattened2DArray(const TArray<uint8>& InValueArray, int32 InX, int32 InY, int32 InSizeX);
	class AVAL_WorldSettings* GetValeriaWorldSettings(class UObject* InContext);
	int32 GetValeriaTimestampSecs(class UObject* InContext);
	int64 GetValeriaTimestampMs64(class UObject* InContext);
	struct FInt64Split GetValeriaTimestampMs(class UObject* InContext);
	struct FDateTime GetValeriaTimestampDateTime(class UObject* InContext);
	class AValeriaPlayerController* GetValeriaPlayerController(class UObject* InContext, enum class EValeriaFuncResult* InOutResult);
	class AValeriaCharacter* GetValeriaCharacterByPlayerId(class UObject* InContext, const struct FPersistGuid& InPlayerId, enum class EValeriaFuncResult* InOutResult);
	class AValeriaCharacter* GetValeriaCharacter(class UObject* InContext, enum class EValeriaFuncResult* InOutResult);
	class FString GetValeriaBuildInfoString();
	struct FTransform GetTransformFromValeriaSpawnTransform(struct FValeriaSpawnTransform& InInValeriaSpawnTransform);
	TArray<int32> GetTrackableVillagerConfigIds(class UObject* InContext);
	class FText GetTooltipForVital(class UObject* InContext, enum class EVitalType InVitalType);
	class FText GetTooltipForCurrency(class UCurrencyConfig* InCurrencyConfig);
	struct FTimespan GetTimeUntilS6WeeklyReset(class UObject* InContext);
	TArray<class UVAL_ItemTypeDefinitionAsset*> GetSortedItemTypesFromCategory(class UObject* InContext, enum class EItemStorageCategory InStorageCategory, enum class EItemSortType InSortType);
	TArray<class UVAL_ItemTypeDefinitionAsset*> GetSortedItemTypesFromCategories(class UObject* InContext, TArray<enum class EItemStorageCategory>& InStorageCategories, enum class EItemSortType InSortType);
	float GetSlotMontageGlobalWeight(class UAnimInstance* InAnimInstance, class FName InSlotNodeName);
	struct FSkillLevelConfig GetSkillLevelConfigByType(class UObject* InContext, enum class ESkillType InTyp);
	struct FSkillLevelConfig GetSkillLevelConfigById(class UObject* InContext, int32 InID);
	struct FShopConfig GetShopConfigById(class UObject* InContext, int32 InID);
	struct FVillagerCoreConfig GetSheppCoreConfigForPlayer(class AValeriaCharacter* InPlayerCharacter);
	struct FDateTime GetS6WeeklyResetTime(class UObject* InContext);
	TSoftObjectPtr<class AActor> GetRuntimeISMActor(class UObject* InContext);
	enum class EQuestRewardType GetRewardType(struct FSingleQuestReward& InReward);
	int32 GetRecipeNumberOfExtraSteps(class UObject* InContext, int32 InRecipeConfigId);
	struct FRecipeConfig GetRecipeDataTableRow(class UObject* InContext, const struct FDataTableRowHandle& InHandle, enum class EValeriaFuncResult* InOutResult);
	struct FRecipeConfig GetRecipeConfigById(class UObject* InContext, int32 InID);
	struct FQuestSelectorConfig GetQuestSelectorDataTableRow(class UObject* InContext, const struct FDataTableRowHandle& InHandle, enum class EValeriaFuncResult* InOutResult);
	bool GetQuestRequirementDescription(class UObject* InContext, struct FVillagerQuestRequirement& InRequirement, class FText* InOutText);
	struct FQuestConfig GetQuestDataTableRow(class UObject* InContext, const struct FDataTableRowHandle& InHandle, enum class EValeriaFuncResult* InOutResult);
	int32 GetPrimaryVillagerIdByVillagerCoreId(class UObject* InContext, int32 InVillagerCoreId);
	int32 GetPathStepIndexAfter(class AActor* InOwner, int32 InCurrIndex);
	class UPathStepComponent* GetPathStepComponentAt(class AActor* InOwner, int32 InStepIndex);
	void GetMostNotableDialogueTypeForWorldVillager(class UObject* InContext, class AValeriaCharacter* InPlayerCharacter, class AValeriaVillagerCharacter* InVillagerCharacter, bool InbAllowGroupedDialogues, enum class EDialogueType* InOutMostNotableDialogue, bool* InOutIsPinned);
	void GetMostNotableDialogueTypeForVillagerId(class UObject* InContext, class AValeriaCharacter* InPlayerCharacter, int32 InVillagerId, bool InbAllowGroupedDialogues, enum class EDialogueType* InOutMostNotableDialogue, bool* InOutIsPinned);
	float GetMontageSectionLength(class UAnimMontage* InMontage, class FName InSectionName);
	class FName GetMontageCurrentSectionName(class AValeriaCharacter* InPlayerCharacter, class UAnimMontage* InMontage);
	struct FLauncherConfig GetLauncherDataTableRow(class UObject* InContext, const struct FDataTableRowHandle& InHandle, enum class EValeriaFuncResult* InOutResult);
	struct FItemSellValueConfig GetItemSellValueDataTableRow(class UObject* InContext, const struct FDataTableRowHandle& InHandle, enum class EValeriaFuncResult* InOutResult);
	class FText GetItemDescription(class UObject* InContext, struct FValeriaItem& InItem);
	struct FDEPRECATED_ItemConfig GetItemDataTableRow(class UObject* InContext, const struct FDataTableRowHandle& InHandle, enum class EValeriaFuncResult* InOutResult);
	struct FDEPRECATED_ItemConfig GetItemConfigById(class UObject* InContext, int32 InID);
	int32 GetItemAmountInX_ByType(class AValeriaCharacter* InValeriaCharacter, TSoftObjectPtr<class UVAL_ItemTypeDefinitionAsset>& InItemType, struct FStarQualityConstraint& InStarQualityConstraint, int32 InStorageTypes);
	int32 GetItemAmountInX_ByTag(class AValeriaCharacter* InValeriaCharacter, struct FGameplayTag& InItemTag, struct FStarQualityConstraint& InStarQualityConstraint, int32 InStorageTypes);
	struct FInventoryBagConfig GetInventoryBagConfigById(class UObject* InContext, int32 InID);
	int32 GetIntValueFromLevelArray(TArray<int32>& InLevelArray, int32 InLevel);
	class UInventoryComponent* GetInteractor_OtherInventory(class UObject* InContext);
	class UInteractableComponent* GetInteractableComponent(class UObject* InContext);
	class UTexture2D* GetIconForIngredient(class UObject* InContext, struct FRecipe_RequireItem& InIngredient);
	struct FFishConfig GetFishDataTableRow(class UObject* InContext, const struct FDataTableRowHandle& InHandle, enum class EValeriaFuncResult* InOutResult);
	class FString GetDisplayNameAndUniqueId(class UObject* InObject);
	struct FCreatureConfig GetCreatureDataTableRow(class UObject* InContext, const struct FDataTableRowHandle& InHandle, enum class EValeriaFuncResult* InOutResult);
	int32 GetCraftTimeMs(class UObject* InContext, int32 InRecipeId, int32 InCrafterId);
	struct FCrafterConfig GetCrafterDataTableRow(class UObject* InContext, const struct FDataTableRowHandle& InHandle, enum class EValeriaFuncResult* InOutResult);
	struct FCrafterConfig GetCrafterConfigById(class UObject* InContext, int32 InID);
	TArray<class FString> GetConsoleObjectNamesThatStartWith(const class FString& InStartWith);
	bool GetConfigString_GameUserSettings(const class FString& InSection, const class FString& InKey, class FString* InOutput);
	bool GetConfigsManagerForBP(class UObject* InContext, struct FConfigsManager* InConfigsManager);
	struct FBuffConfig GetBuffDataTableRow(class UObject* InContext, const struct FDataTableRowHandle& InHandle, enum class EValeriaFuncResult* InOutResult);
	struct FBuffConfig GetBuffConfigById(class UObject* InContext, int32 InID);
	class UClass* GetBlueprintClass(const class FString& InFullPath);
	struct FAnimationMappingConfig GetAnimationMappingConfigFromVillagerActionInfo(struct FVillagerActionInfo& InInActionInfo);
	TArray<TSubclassOf<class AActor>> GetAllSpawnableActorClasses();
	void GetAllGameplayTagsAsFNameArray(TArray<class FName>* InOutArray);
	TArray<struct FAssetData> GetActorAssetsInPath(TArray<class FName>& InPath);
	class FString GetAchievementNameForInsect(TSoftObjectPtr<class UVAL_ItemTypeDefinitionAsset>& InItemType);
	void GatherPlayerPersonalityInfo(class AValeriaCharacter* InCharacter, enum class EValeriaPersonalityElement* InOutResult, int32* InAir, int32* InEarth, int32* InFire, int32* InWater);
	class FString FormatDuration(int32 InSeconds);
	bool FNameIsNone(class FName& InName);
	bool FloatRangeContains(const struct FFloatRange& InRange, float InValue);
	TArray<struct FSingleQuestReward> FlattenScalingRewardsForLevel(TArray<struct FScalingReward>& InScalingRewards, int32 InLevel);
	struct FVitalConfig FindVitalConfigByType(class UObject* InContext, enum class EVitalType InTyp, enum class EValeriaFuncResult* InOutResult);
	struct FVitalConfig FindVitalConfigById(class UObject* InContext, int32 InID, enum class EValeriaFuncResult* InOutResult);
	struct FVillagerRelationshipLevelConfig FindVillagerRelationshipLevelByVillagerCoreId(class UObject* InContext, int32 InLevel, enum class ERelationshipType InType, int32 InVillagerCoreId, enum class EValeriaFuncResult* InOutResult);
	struct FVillagerRelationshipLevelConfig FindVillagerRelationshipLevelByValueByVillagerCoreId(class UObject* InContext, int32 InValue, enum class ERelationshipType InType, int32 InVillagerCoreId);
	struct FVillagerGiftPreferenceConfig FindVillagerGiftPreferenceConfigById(class UObject* InContext, int32 InID, enum class EValeriaFuncResult* InOutResult);
	struct FVillagerCoreConfig FindVillagerCoreConfigById(class UObject* InContext, int32 InID, enum class EValeriaFuncResult* InOutResult);
	struct FVillagerConfig FindVillagerConfigById(class UObject* InContext, int32 InID, enum class EValeriaFuncResult* InOutResult);
	struct FToolConfig FindToolConfig(class UObject* InContext, class FName InName);
	struct FSkillLevelConfig FindSkillLevelConfigByType(class UObject* InContext, enum class ESkillType InTyp, enum class EValeriaFuncResult* InOutResult);
	struct FSkillLevelConfig FindSkillLevelConfigById(class UObject* InContext, int32 InID, enum class EValeriaFuncResult* InOutResult);
	struct FShopConfig FindShopConfigById(class UObject* InContext, int32 InID, enum class EValeriaFuncResult* InOutResult);
	struct FRecipeConfig FindRecipeConfigById(class UObject* InContext, int32 InID, enum class EValeriaFuncResult* InOutResult);
	class UPersistComponent* FindPersistComponentInParent(class AActor* InActor);
	int32 FindNeedsIndexForRecipeID(class UObject* InContext, int32 InRecipeId, TArray<struct FRecipe_RequireItem>& InNeededItems);
	class UVAL_ItemTypeDefinitionAsset* FindItemTypeByTag(class UObject* InContext, const struct FGameplayTag& InIngredientTag, enum class EValeriaFuncResult* InOutResult, int32* InOutResultsFound);
	class UVAL_ItemTypeDefinitionAsset* FindItemTypeBySimpleDecorActor(class AActor* InActor, enum class EValeriaFuncResult* InOutResult);
	class UVAL_ItemTypeDefinitionAsset* FindItemTypeByActor(class AActor* InActor, enum class EValeriaFuncResult* InOutResult);
	struct FDEPRECATED_ItemConfig FindItemConfigById(class UObject* InContext, int32 InID, enum class EValeriaFuncResult* InOutResult);
	struct FInventoryBagConfig FindInventoryBagConfigById(class UObject* InContext, int32 InID, enum class EValeriaFuncResult* InOutResult);
	class AActor* FindFacingActor(TArray<class AActor*>& InActors, const struct FVector& InPlayerLocation, const struct FVector& InCameraForwardVector);
	bool FindErrorModalConfig(class UObject* InContext, const struct FErrorMessage& InError, struct FErrorModalConfig* InOutModalConfig);
	class UVAL_DialogueAsset* FindDialogueByName(class UObject* InContext, const class FString& InName, enum class EValeriaFuncResult* InOutResult);
	class UVAL_DialogueAsset* FindDialogueByID(class UObject* InContext, int32 InID, enum class EValeriaFuncResult* InOutResult);
	TArray<struct FGameplayTag> FindDesiredTagFromAnyMatches(struct FGameplayTagContainer& InDesiredTags, struct FGameplayTagContainer& InTagsToMatch);
	struct FCrafterConfig FindCrafterConfigById(class UObject* InContext, int32 InID, enum class EValeriaFuncResult* InOutResult);
	class AActor* FindClosestActor(TArray<class AActor*>& InActors, const struct FVector& InCenter);
	struct FBuffConfig FindBuffConfigById(class UObject* InContext, int32 InID, enum class EValeriaFuncResult* InOutResult);
	TArray<TSoftObjectPtr<class UVAL_ItemTypeDefinitionAsset>> FindAllItemsByTag(class UObject* InContext, const struct FGameplayTag& InIngredientTag);
	void EnsureWidgetsCreatedOnPanel(class UUserWidget* InOwner, class UPanelWidget* InParentPanel, TSubclassOf<class UUserWidget> InWidgetToCreate, int32 InNumberOfWidgets, const struct FAdditionalEnsureWidgetsOptions& InOptions);
	bool DoesVillagerActionInfoHaveAnimationMapping(struct FVillagerActionInfo& InInActionInfo);
	bool DoesCharacterSatisfyQuestActivityPrereq(class AValeriaCharacter* InCharacter, struct FQuestActivityPrereq& InRequirement);
	bool DisableIfServer(class UObject* InObj);
	void DisableAnimationsOnSkelMesh(class USkeletalMeshComponent* InMesh);
	bool DestroyIfServer(class AActor* InActor);
	void DestroyAndRemovePersist(class AActor* InActor);
	void DebugLogWarn(class UObject* InWorldContextObject, const class FString& InInString);
	void DebugLogError(class UObject* InWorldContextObject, const class FString& InInString);
	void DebugLog(class UObject* InWorldContextObject, const class FString& InInString);
	bool CSM_IsOnStack(class UObject* InContext, enum class ECharacterState InCharacterState);
	struct FValeriaItem CreateWithAmount(const struct FValeriaItem& InExistingItem, int32 InAmount);
	struct FValeriaItem CreateItem(class UObject* InContext, class UVAL_ItemTypeDefinitionAsset* InItemType, int32 InAmount, int32 InQualityStars);
	float CosineAngle2DBetween(struct FVector& InVectorA, struct FVector& InVectorB);
	void CopyRenderTargetToRenderTarget(class UTextureRenderTarget2D* InSourceRenderTarget, class UTextureRenderTarget2D* InDestinationRenderTarget);
	void ConvertToSingleRewards(TArray<struct FQuestRewardConfig>& InRewards, TArray<struct FSingleQuestReward>& InSingleRewards);
	int32 ConvertToSecs64(int64 InTimestamp);
	int32 ConvertToSecs(const struct FInt64Split& InTimestamp);
	class FText ConvertErrorMessageToText(class UObject* InContext, const struct FErrorMessage& InError);
	bool ContainsOtherTagList(struct FTagList& InDesiredTagList, struct FTagList& InOther, bool InMatchAll);
	bool ContainsOtherContainer(struct FTagList& InDesiredTagList, struct FGameplayTagContainer& InOther, bool InMatchAll);
	bool ContainsOneTag(struct FTagList& InDesiredTagList, const struct FGameplayTag& InTagParam);
	void ComputeSaleValuePerItem(class UObject* InContext, const struct FValeriaItem& InItem, int32* InVitalAmountPerItem, enum class EVitalType* InVitalType);
	int32 CompareInt64(const struct FInt64Split& InA, const struct FInt64Split& InB);
	struct FValeriaItem Combine(class UObject* InContext, const struct FValeriaItem& InExistingItem, const struct FValeriaItem& InNewItem);
	class AValeriaPlayerController* Client_GetFirstPlayerController(class UObject* InContext, enum class EValeriaFuncResult* InOutResult);
	struct FInt64Split CastInt64ToInt64Split(int64 InTimeMs);
	int32 CastInt64ToInt32(const struct FInt64Split& InA);
	struct FInt64Split CastInt32ToInt64(int32 InA);
	bool CanSaveConfigFile();
	struct FBox2D CalculateBounds2D(TArray<struct FVector2D>& InArr);
	struct FBox CalculateBounds(TArray<struct FVector>& InArr);
	bool BuildIsShipping();
	bool BuildContainsServerOnlyCode();
	bool BuildContainsDebugCheatCode();
	bool AreBagSlotsEqual(struct FBagSlotLocation& InLhs, struct FBagSlotLocation& InRhs);
	float AngleBetween(struct FVector& InVectorA, struct FVector& InVectorB);
	void AddRowVillagerQuestConfig(class UDataTable* InDataTable, class FName InRowName, const struct FVillagerQuestConfig& InVillagerQuestConfig);
	void AddRowRecipeConfig(class UDataTable* InDataTable, class FName InRowName, const struct FRecipeConfig& InRecipeConfig);
	void AddRowLootPoolConfig(class UDataTable* InDataTable, class FName InRowName, const struct FLootPoolConfig& InLootPoolConfig);
	void AddRowLootBundleConfig(class UDataTable* InDataTable, class FName InRowName, const struct FLootBundleConfig& InLootBundleConfig);
	void AddRowItemConfig(class UDataTable* InDataTable, class FName InRowName, const struct FDEPRECATED_ItemConfig& InItemConfig);
	struct FInt64Split AddInt64(const struct FInt64Split& InA, const struct FInt64Split& InB);
};

// 0xCF0 (0x1150 - 0x460)
// Class Palia.ValeriaCharacter
class AValeriaCharacter : public AValeriaMoveablePawn
{
public:
	uint8                                        Pad_3560[0x18];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        BaseTurnRate;                                      // 0x478(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        BaseLookUpRate;                                    // 0x47C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        FishingSensitvity;                                 // 0x480(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        PlacementRotationRate;                             // 0x484(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        UnstuckSavePeriod;                                 // 0x488(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3561[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class USceneComponent*                       DebugSphere;                                       // 0x490(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                CharacterName;                                     // 0x498(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, EditConst, RepNotify, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGuid                                 PlayerId;                                          // 0x4A8(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, EditConst, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGuid                                 LoadoutId;                                         // 0x4B8(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, EditConst, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FHouseOwnershipTitle                  PrimaryHome;                                       // 0x4C8(0x28)(Edit, BlueprintVisible, BlueprintReadOnly, Net, EditConst, RepNotify, NoDestructor, NativeAccessSpecifierPublic)
	int32                                        LastKnownPrimaryHousingPlotValue;                  // 0x4F0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, EditConst, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3562[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TMap<int32, int32>                           CorrectionsApplied;                                // 0x4F8(0x50)(Transient, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnChanged;                                         // 0x548(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnItemPlaced;                                      // 0x558(0x10)(ZeroConstructor, InstancedReference, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnItemGathered;                                    // 0x568(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                        Pad_3564[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	FMulticastInlineDelegateProperty_            OnGardenInspectToggle;                             // 0x588(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnAnyInventoryChanged;                             // 0x598(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnSprintChange;                                    // 0x5A8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnPlacementInteractChange;                         // 0x5B8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnPlacementMoveModifierChange;                     // 0x5C8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnInspirationSequenceChange;                       // 0x5D8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnHousingVisitionPermissionChanged;                // 0x5E8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnHousingVisitorListChange;                        // 0x5F8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnCharacterLocationContextChanged;                 // 0x608(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                        bWasPressingJump : 1;                              // Mask: 0x1, PropSize: 0x10x618(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnTemplate, Transient, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        BitPad_1AA : 7;                                    // Fixing Bit-Field Size  [ Dumper-7 ]
	uint8                                        Pad_3566[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UMailboxComponent*                     Mailbox;                                           // 0x620(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UVAL_CharacterCustomizationComponent> CharacterCustomizationComponentClass;              // 0x628(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UBundlesComponent*                     BundlesComponent;                                  // 0x630(0x8)(Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsInInspirationSequence;                           // 0x638(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3567[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        SelfiePhotoMode_DollyDistance_Minimum;             // 0x63C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SelfiePhotoMode_DollyDistance_Maximum;             // 0x640(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        FPSPhotoMode_FOV_Minimum;                          // 0x644(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        FPSPhotoMode_FOV_Maximum;                          // 0x648(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_356A[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class USubgameManagerComponent*              PlayingSubgameManager;                             // 0x650(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        GroundCheckDistance;                               // 0x658(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        GroundCheckFrequency;                              // 0x65C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bInitialTeleportComplete;                          // 0x660(0x1)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EWorldLocationContext             CurrentLocationContext;                            // 0x661(0x1)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, Transient, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_356B[0x6];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FString                                PersistExpPkg;                                     // 0x668(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               LastGoodPersistPosition;                           // 0x678(0x18)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FRotator                              LastGoodPersistRotation;                           // 0x690(0x18)(ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnToolUsed;                                        // 0x6A8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnCharacterUnstuck;                                // 0x6B8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	class AValeriaPlayerController*              ValeriaPlayerController;                           // 0x6C8(0x8)(ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class USpringArmComponent*                   CameraBoom;                                        // 0x6D0(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UCameraComponent*                      FollowCamera;                                      // 0x6D8(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UFollowCameraManagerComponent*         FollowCameraManager;                               // 0x6E0(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UGardenPlantingComponent*              GardenPlanting;                                    // 0x6E8(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UMinigameComponentTilling*             MinigameTilling;                                   // 0x6F0(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UMinigameComponentMasterQTE*           MinigameQTE;                                       // 0x6F8(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UPlayerInventoryComponent*             InventoryComp;                                     // 0x700(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UStorageComponent*                     Storage;                                           // 0x708(0x8)(Edit, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UWarpStoneComponent*                   WarpStones;                                        // 0x710(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UPlayerWorldStateComponent*            PlayerWorldStateComponent;                         // 0x718(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UPersistedVitalsComponent*             Vitals;                                            // 0x720(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UFishingComponent*                     Fishing;                                           // 0x728(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UPlacementComponent*                   Placement;                                         // 0x730(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class USkillLevelsComponent*                 SkillLevels;                                       // 0x738(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UCharacterStateMachineComponent*       CharacterStateMachine;                             // 0x740(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UDialogueHistoryComponent*             DialogueHistory;                                   // 0x748(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UPersistentTagMapComponent*            PersistentTags;                                    // 0x750(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UVillagerQuestProgressComponent*       VillagerQuestProgress;                             // 0x758(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UQuestProgressComponent*               QuestProgress;                                     // 0x760(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UVillagerRelationshipsComponent*       Relationships;                                     // 0x768(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UVillagerGiftHistoryComponent*         VillagerGiftHistory;                               // 0x770(0x8)(Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class URecipeInventoryComponent*             RecipeInventory;                                   // 0x778(0x8)(Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UPersistComponent*                     Persister;                                         // 0x780(0x8)(Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UBuffComponent*                        Buffs;                                             // 0x788(0x8)(Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UInteractorComponent*                  Interactor;                                        // 0x790(0x8)(Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UValeriaGASComponent*                  ValeriaGAS;                                        // 0x798(0x8)(Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UMeleeAttackComponent*                 Melee;                                             // 0x7A0(0x8)(Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UItemUpgradeComponent*                 ItemUpgrade;                                       // 0x7A8(0x8)(Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UValeriaCharacterTeleportComponent*    TeleportComponent;                                 // 0x7B0(0x8)(Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UValeriaGASAttributeSet*               AttributeSet;                                      // 0x7B8(0x8)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UValeriaGASFishingAttributeSet*        FishingAttributeSet;                               // 0x7C0(0x8)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UValeriaGASSprintingAttributeSet*      SprintingAttributeSet;                             // 0x7C8(0x8)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UAbilityAnimationComponent*            AbilityAnimation;                                  // 0x7D0(0x8)(Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UHouseInventoryComponent*              HouseInventory;                                    // 0x7D8(0x8)(Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UVillagerMailInboxComponent*           VillagerMailInbox;                                 // 0x7E0(0x8)(Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UBookReadingComponent*                 BookReadingComponent;                              // 0x7E8(0x8)(Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UGiftPreferenceTrackingComponent*      GiftPreferenceTrackingComponent;                   // 0x7F0(0x8)(Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UDebugInfoComponent*                   DebugInfoComponent;                                // 0x7F8(0x8)(Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UAIPerceptionStimuliSourceComponent*   AIStimuliComponent;                                // 0x800(0x8)(Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UAimingComponent*                      AimingComponent;                                   // 0x808(0x8)(Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UProjectileFiringComponent*            FiringComponent;                                   // 0x810(0x8)(Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UItemTrackingComponent*                ItemTracking;                                      // 0x818(0x8)(Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UPlayerCraftingHistoryComponent*       CraftingHistory;                                   // 0x820(0x8)(Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UInventoryRequestComponent*            InventoryRequest;                                  // 0x828(0x8)(Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UValeriaEmoteComponent*                EmoteComponent;                                    // 0x830(0x8)(Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UArcadeCommandComponent*               ArcadeComponent;                                   // 0x838(0x8)(Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UVAL_CharacterCustomizationComponent*  CharacterCustomizationComponent;                   // 0x840(0x8)(Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FVALDTOS_MetaCharacterFormat          MetaCharacterData;                                 // 0x848(0x718)(Net, NativeAccessSpecifierPrivate)
	class UVillagerStoreComponent*               StoreComponent;                                    // 0xF60(0x8)(Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UVillagerVisitComponent*               VillagerVisitComponent;                            // 0xF68(0x8)(Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UEquipmentComponent*                   EquipmentComponent;                                // 0xF70(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UGearComponent*                        GearComponent;                                     // 0xF78(0x8)(Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UVAL_TimerComponent*                   TimerComponent;                                    // 0xF80(0x8)(Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UVAL_ScoreComponent*                   ScoreComponent;                                    // 0xF88(0x8)(Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class AHousingPlotActor*                     VisitingHousingPlot;                               // 0xF90(0x8)(Net, ZeroConstructor, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bHasSpawnedInitialItems;                           // 0xF98(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_356E[0x67];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         GodMode;                                           // 0x1000(0x1)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         MasterKey;                                         // 0x1001(0x1)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_3570[0x6];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int64                                        TimeLastLoggedOffMs;                               // 0x1008(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_3573[0x18];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        UnstuckIncrement;                                  // 0x1028(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_3574[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FVAL_UnstuckStackMap                  UnstuckLocations;                                  // 0x1030(0x68)(NativeAccessSpecifierPrivate)
	struct FVector                               SafeLocationInTeleportVolume;                      // 0x1098(0x18)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FRotator                              SafeRotationInTeleportVolume;                      // 0x10B0(0x18)(ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPrivate)
	bool                                         bInOOBVolume;                                      // 0x10C8(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bInTeleportVolume;                                 // 0x10C9(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_3575[0x16];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	FMulticastInlineDelegateProperty_            OnMeshRelevancyToLocalPlayerUpdated;               // 0x10E0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	bool                                         bIsMeshRelevantToLocalPlayer;                      // 0x10F0(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_3577[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TMap<struct FSoftObjectPath, class UAnimMontage*> CachedAnimMontages;                                // 0x10F8(0x50)(Transient, NativeAccessSpecifierPrivate)
	uint8                                        Pad_3578[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("ValeriaCharacter");
		return Clss;
	}

	void WasUpdated(enum class EValeriaCharacterEvent InEvent);
	void Walk_Released();
	void Walk_Pressed();
	void VirtualButtonReleased(class FName InbuttonName);
	void VirtualButtonPressed(class FName InbuttonName);
	void VirtualButtonClicked(class FName InbuttonName);
	void UpdateUnstuckLocation(bool InbFreshStack);
	void Unstuck();
	void TurnAtRate(float InRate);
	void Turn(float InRate);
	void TriggerTeleportGroundSafeguard();
	void ToggleDebugSphere(bool InIsOn);
	void ToggleAutorun();
	void TeleportToNearestSafePoint();
	bool TeleportToLocationWithGroundCheck(struct FVector& InDestLocation, struct FRotator& InDestRotation, float InDownDistance, float InUpDistance, bool InbIsATest, bool InbNoCheck);
	void StopJump();
	void StartPlaceOnKeyPress();
	void StartJump();
	void Sprint_Released();
	void Sprint_Pressed();
	void SetSelfieModeDollyDistance(float InValue);
	void SetPlacementMoveModifier(bool InbIsModifing);
	void SetMetaCharacterData(const struct FVALDTOS_MetaCharacterFormat& InNewMetaCharacterData);
	void SetItemActorForMeshSocket(int32 InItemId, class FName InSocket);
	void SetFPSPhotoModeFOV(float InValue);
	void SetCharacterForInspirationSequence();
	void Server_Unstuck(enum class ES6UnstuckType InUnstuckType, bool InbPop);
	void SecondaryActionReleased();
	void SecondaryActionPressed();
	void RpcServer_Unstuck(enum class ES6UnstuckType InUnstuckType, bool InbPop);
	void RpcServer_GroundFound();
	void RpcServer_ConfirmRecipeSelection(int32 InSelectedRecipeID);
	void RpcServer_ChargeForStableUsage(class AActor* InStablesActor, class UTeleportTravelConfigAsset* InDestinationConfig);
	void RpcServer_ApplyCheatSet(class UCheatSetConfig* InInCheatSetConfig);
	void RpcClient_SetupGroundCheck();
	void RpcClient_DisplaySubgameScreen(class USubgameConfig* InInSubgameConfig);
	void RpcClient_DisplayInspirationRecipeChoices(int32 InNumChoices, TArray<int32>& InRecipeIDs);
	void RpcClient_CloseSubgameScreen();
	void RevealInWorldMapMarkers();
	void RequestMontagePropHelper(TMap<enum class ECharacterAttachPoint, TSoftClassPtr<class AEquipViewActor>>& InProps, class FName& InRelevantMappingName, class FName& InRelevantSectionName);
	void PrimaryActionReleased();
	void PrimaryActionPressed();
	void PlayerCancel();
	void PlacementZoomWheel(float InRate);
	void PlacementRotationWheelEnded(float InRate);
	void PlacementRotationWheel(float InRate);
	void PlacementRotationCW();
	void PlacementRotationCCW();
	void PlacementPickupModeToggle();
	bool PlaceMapMarker(int32 InSecondsToDisplayMarkers, struct FVector* InMarkerLocation);
	void PersistParentingWasChanged(class UPersistComponent* InP);
	bool OwnsItem(TSoftObjectPtr<class UVAL_ItemTypeDefinitionAsset>& InItemType);
	void OpenHousingUpgrade();
	void OnVitalFull(enum class EVitalType InVitalType);
	void OnReplicated();
	void OnRep_CurrentLocationContext();
	void OnMovementSettingsChanged(struct FValeriaGameplaySettings& InGameplaySettings);
	void OnInventoryChanged(class UInventoryComponent* InInv);
	void OnHousingInventoryChanged(class UHouseInventoryComponent* InHouseInv);
	void OnAudioEventReplicated(class AActor* InActorHit, bool InWasDamaged, TSoftObjectPtr<class UVAL_ItemTypeDefinitionAsset>& InHeldItemType, class AActor* InExtInstigator);
	void NotifyComponentEndOverlap(class UPrimitiveComponent* InOverlappedComponent, class AActor* InOtherActor, class UPrimitiveComponent* InOtherComp, int32 InOtherBodyIndex);
	void NotifyComponentBeginOverlap(class UPrimitiveComponent* InOverlappedComponent, class AActor* InOtherActor, class UPrimitiveComponent* InOtherComp, int32 InOtherBodyIndex, bool InbFromSweep, struct FHitResult& InSweepResult);
	void MoveRight(float InValue);
	void MoveForward(float InValue);
	int32 MaxNumItemsCanPlace();
	void LookUpAtRate(float InRate);
	void LookUp(float InRate);
	bool IsPlayingSubgame();
	bool IsPlacementPickupModeActive();
	bool IsPlacementMoveModifierActive();
	bool IsMasterKeyEnabled();
	bool IsInHousingEditMode();
	bool IsGodModeEnabled();
	void HousingModePanRight(float InValue);
	void HousingModePanForward(float InValue);
	void HideInWorldMapMarkers();
	bool HasEnoughWaterInCanByTimeStep(float InTimeStep);
	bool HasEnoughWaterInCan(int32 InWaterAmount);
	void HandlePropMontageFinish(class UAnimMontage* InMontage, bool InbInterrupted);
	void HandleInspirationSequenceMontageEnded();
	void HandleEquipmentChanged(class UEquipmentComponent* InEquipmentComponent, const struct FEquipmentItem& InItem);
	void HandleClimbingChanged(bool InIsClimbing);
	void GroundCheck();
	float GetWateringCanTotalCapacity();
	float GetWateringCanRemainingPctg();
	float GetWateringCanRemainingAmount();
	float GetWateringCanAmountPerUse(float InTimeStep);
	class UWarpStoneComponent* GetWarpStones();
	class UVitalsComponent* GetVitals();
	class UVillagerVisitComponent* GetVillagerVisitComponent();
	class UVillagerQuestProgressComponent* GetVillagerQuestProgress();
	class UVillagerMailInboxComponent* GetVillagerMailInbox();
	class UVillagerGiftHistoryComponent* GetVillagerGiftHistory();
	int32 GetValueForTag(class FName InTagQuery);
	class AValeriaPlayerController* GetValeriaPlayerController();
	class UValeriaCharacterMoveComponent* GetValeriaCharacterMovementComponent();
	class UVAL_TimerComponent* GetTimerComponent();
	class UValeriaCharacterTeleportComponent* GetTeleportComponent();
	class UStorageComponent* GetStorage();
	class USkillLevelsComponent* GetSkillLevels();
	class USpringArmComponent* GetSelfieModeSpringArmComponent();
	float GetSelfieModeDollyDistance();
	class UVAL_ScoreComponent* GetScoreComponent();
	class USceneCaptureComponent2D* GetSceneCaptureComponent_Selfie();
	class USceneCaptureComponent2D* GetSceneCaptureComponent_FirstPerson();
	class UVillagerRelationshipsComponent* GetRelationships();
	class URecipeInventoryComponent* GetRecipeInventory();
	class UQuestProgressComponent* GetQuestProgress();
	class ASubgameCutawayScene* GetPlayingSubgameCutawayScene();
	class UPlayerWorldStateComponent* GetPlayerWorldStateComponent();
	class UPlacementComponent* GetPlacement();
	class UPersistentTagMapComponent* GetPersistentTags();
	class UPersistComponent* GetPersist();
	class AHousingOwnershipActor* GetOccupiedHousingOwnershipActor(enum class EHousingPermissionLevel* InPermissionLevel);
	struct FVALDTOS_MetaCharacterFormat GetMetaCharacterData();
	class UMeleeAttackComponent* GetMeleeAttackComponent();
	int32 GetMaxStorage(enum class EStoragePoolType InStoragePool);
	class UItemUpgradeComponent* GetItemUpgradeComponent();
	class UItemTrackingComponent* GetItemTrackingComponent();
	class UInventoryRequestComponent* GetInventoryRequest();
	class UPlayerInventoryComponent* GetInventory();
	class UInteractorComponent* GetInteractorComponent();
	class UHouseInventoryComponent* GetHouseInventory();
	class UGiftPreferenceTrackingComponent* GetGiftPreferenceTrackingComponent();
	class UGearComponent* GetGear();
	class UValeriaGASComponent* GetGAS();
	class UGardenPlantingComponent* GetGardenPlanting();
	float GetFPSPhotoModeFOV();
	class UFishingComponent* GetFishing();
	class UProjectileFiringComponent* GetFiringComponent();
	struct FValeriaItem GetEquippedItem();
	class UEquipmentComponent* GetEquipment();
	class UValeriaEmoteComponent* GetEmoteComponent();
	class UDialogueHistoryComponent* GetDialogueHistory();
	class UDebugInfoComponent* GetDebugInfoComponent();
	class UCharacterStateMachineComponent* GetCSM();
	class UPlayerCraftingHistoryComponent* GetCraftingHistoryComponent();
	class UVAL_CharacterCustomizationComponent* GetCharacterCustomizationComponent();
	class UBundlesComponent* GetBundlesComponent();
	class UBuffComponent* GetBuffs();
	class UBookReadingComponent* GetBookReadingComponent();
	class UValeriaGASAttributeSet* GetAttributeSet();
	class UArcadeCommandComponent* GetArcadeComponent();
	class UAIPerceptionStimuliSourceComponent* GetAIStimuliComponent();
	class UAimingComponent* GetAimingComponent();
	class UAbilityAnimationComponent* GetAbilityAnimation();
	void ExitTeleportVolume();
	void ExitOOBVolume();
	void EnterTeleportVolume();
	void EnterOOBVolume();
	void EndInspirationSequence();
	void DisplaySubgameScreen(class USubgameConfig* InInSubgameConfig);
	void DisplayHousingEditMode(class AHousingPlotActor* InHousingPlotActor);
	void DisplayAmmoMenu(enum class EAmmoType InAmmoType);
	void DeleteAction();
	void DebugTeleportToResource();
	void DebugTeleportForward();
	int32 CountNumItemsPlaced();
	void ConfirmRecipeSelection(int32 InSelectedRecipeID);
	void ConfirmAction();
	void CloseSubgameScreen();
	void Client_EndInspirationSequence();
	void Client_DisplayCrafter(class UCrafterComponent* InCrafter);
	void Client_BeginInspirationSequence();
	void ClearMontagePropHelper();
	void ChargeForStableUsage(class AActor* InStablesActor, class UTeleportTravelConfigAsset* InDestinationConfig);
	void CharacterExitedPrivateSpace(class AValeriaCharacter* InInValeriaCharacter, class UPrivateSpaceConfig* InPrivateSpaceConfig);
	void CharacterEnteredPrivateSpace(class AValeriaCharacter* InInValeriaCharacter, class UPrivateSpaceConfig* InPrivateSpaceConfig);
	bool CanUpdateUnstuckLocation();
	bool CanChangeActionBar();
	void CancelAction();
	void AsyncLoadMontageByName(class FName& InMontageName);
	void ApplyCheatSet(class UCheatSetConfig* InInCheatSetConfig);
	void AddScriptedReward(struct FQuestRewardConfig& InRewardConfig, enum class EQuestRewardSourceType InSource);
};

// 0x48 (0x7E8 - 0x7A0)
// Class Palia.ValeriaClientPriMovementComponent
class UValeriaClientPriMovementComponent : public UValeriaBaseMovementComponent
{
public:
	uint8                                        Pad_357D[0x1];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	enum class EMovementMode                     TargetMovementMode;                                // 0x7A1(0x1)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        TargetCustomSubMode;                               // 0x7A2(0x1)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bWasStationary;                                    // 0x7A3(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_357E[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FRotator                              PreviousRotationForStationaryCheck;                // 0x7A8(0x18)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	struct FVector                               PreviousPositionForStationaryCheck;                // 0x7C0(0x18)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bReceivedPostTeleportMove;                         // 0x7D8(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_357F[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        SendServerRpcThrottleLimit;                        // 0x7DC(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        SendServerRpcThrottleCounter;                      // 0x7E0(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        TimeSinceLastTeleport;                             // 0x7E4(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("ValeriaClientPriMovementComponent");
		return Clss;
	}

	void StartPathToPoint(const struct FVector& InWorldPoint);
	void RpcServer_SendMovement(struct FValeriaClientToServerMoveInfo& InMoveInfo);
	void RpcServer_RequestPathToPoint(const struct FVector& InWorldPoint);
	void RpcServer_RequestFollowPawn(class AValeriaMoveablePawn* InOtherPawn, float InDistance);
};

// 0x298 (0xA80 - 0x7E8)
// Class Palia.ValeriaCharacterMoveComponent
class UValeriaCharacterMoveComponent : public UValeriaClientPriMovementComponent
{
public:
	FMulticastInlineDelegateProperty_            OnGlidingChanged;                                  // 0x7E8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnClimbingChanged;                                 // 0x7F8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnIsClimbMovingChanged;                            // 0x808(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnLongFallingChanged;                              // 0x818(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnClimbDashingChanged;                             // 0x828(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnClimbOutroStarted;                               // 0x838(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnClimbAroundEdgeChanged;                          // 0x848(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	class UCurveFloat*                           RotationRateWithSpeed;                             // 0x858(0x8)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SprintAccelerationMultiplier;                      // 0x860(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SprintingStaminaDrainRate;                         // 0x864(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MinStaminaToStartSprinting;                        // 0x868(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bDoesSprintingCostStamina;                         // 0x86C(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_358F[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        WalkSpeedMultiplier;                               // 0x870(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        WalkAccelerationMultiplier;                        // 0x874(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SimWalkThreshold;                                  // 0x878(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SimSprintThreshold;                                // 0x87C(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        GlidingFallSpeed;                                  // 0x880(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        GlidingFallingLateralFriction;                     // 0x884(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FRotator                              GlidingRotationRate;                               // 0x888(0x18)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	float                                        GlidingMaxSpeed;                                   // 0x8A0(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ClimbingMaintainReach;                             // 0x8A4(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ClimbingAroundSurfaceDistance;                     // 0x8A8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        JumpUpLedgeMaxHeight;                              // 0x8AC(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ClimbIntroDuration;                                // 0x8B0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ClimbIntroSpeed;                                   // 0x8B4(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ClimbingOutHoldDuration;                           // 0x8B8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ClimbingSpeed;                                     // 0x8BC(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ClimbingStepDuration;                              // 0x8C0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ClimbingSimActivationFactor;                       // 0x8C4(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ClimbingAroundEdgeSpeed;                           // 0x8C8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ClimbingFromEdgeSpeed;                             // 0x8CC(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ClimbingDashSpeed;                                 // 0x8D0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ClimbingDashDuration;                              // 0x8D4(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ClimbingDashSimActivationFactor;                   // 0x8D8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        WallJumpHorizontalSpeed;                           // 0x8DC(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        WallJumpVerticalSpeed;                             // 0x8E0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ClimbingStaminaDrainRate;                          // 0x8E4(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ClimbingDashStaminaCost;                           // 0x8E8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ClimbingJumpStaminaCost;                           // 0x8EC(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ClimbingUnevenSurfaceBudgeScalar;                  // 0x8F0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3592[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FVector2D                             ClimbingSurfaceDotProductRange;                    // 0x8F8(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ClimbingEngageDotProductReq;                       // 0x908(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3593[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<enum class EPhysicalSurface>          AcceptableClimbingSurfaceTypes;                    // 0x910(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, AdvancedDisplay, NativeAccessSpecifierPublic)
	enum class ECollisionChannel                 ClimbabilityCollisionChannel;                      // 0x920(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3594[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FName                                  ClimbableTag;                                      // 0x924(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  NotClimbableTag;                                   // 0x92C(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3595[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class AValeriaCharacter*                     ValCharacter;                                      // 0x938(0x8)(ZeroConstructor, Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        SprintSpeedMultiplier;                             // 0x940(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_3596[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UCurveFloat*                           GravityScaleByVerticalSpeed;                       // 0x948(0x8)(Edit, ZeroConstructor, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        UsedClimbingSpeed;                                 // 0x950(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_3597[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FValeriaEnforcedPositionInfo          EnforcedPosition;                                  // 0x958(0x38)(Net, Transient, NoDestructor, NativeAccessSpecifierPrivate)
	struct FValeriaEnforcedPositionInfo          ClientDrivenPosition;                              // 0x990(0x38)(Transient, NoDestructor, NativeAccessSpecifierPrivate)
	bool                                         bShouldDoFallingForwardChecksForClimbing;          // 0x9C8(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bClimbingClientDrivenOut;                          // 0x9C9(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_3598[0x6];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FVector                               CannedInput;                                       // 0x9D0(0x18)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        CannedInputTimeRemaining;                          // 0x9E8(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bJumpingIsEnabled;                                 // 0x9EC(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_3599[0x2B];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         bWantsToSprint;                                    // 0xA18(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bIsAbleToSprint;                                   // 0xA19(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bWantsToWalk;                                      // 0xA1A(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bWasSprinting;                                     // 0xA1B(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_359A[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	uint8                                        bIsGliding : 1;                                    // Mask: 0x1, PropSize: 0x10xA20(0x1)(Net, Transient, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        BitPad_1AB : 7;                                    // Fixing Bit-Field Size  [ Dumper-7 ]
	uint8                                        Pad_359B[0xC];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         bWasClimbing;                                      // 0xA2D(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bIsClimbDashing;                                   // 0xA2E(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bIsClimbingAroundEdge;                             // 0xA2F(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bIsClimbMoving;                                    // 0xA30(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_359C[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        CurrentClimbMovingDuration;                        // 0xA34(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bHasReleasedJumpSinceClimbStart;                   // 0xA38(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_359D[0x37];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        MaxHorizontalClimbDistance;                        // 0xA70(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        HorizontalClimbIntroDistance;                      // 0xA74(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        ClimbingSurfaceAngleTangentX;                      // 0xA78(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ClimbingSurfaceAngleTangentY;                      // 0xA7C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("ValeriaCharacterMoveComponent");
		return Clss;
	}

	void ToggleSprintingCostsStamina();
	void StopEnforcingPosition();
	void StartEnforcingPosition(struct FVector& InLocation, struct FRotator& InFacing, bool InbHold);
	void SetJumpingIsEnabled(bool InbEnabled);
	void SetIsLongFalling(bool InbFalling);
	void RpcServer_CheatToggleSprintingCostsStamina();
	void RpcServer_CheatSetSprintingCostsStamina(bool InDoesSprintingCostStamina);
	void RpcClient_ForceEndSprinting();
	void RpcClient_ForceEndClimbing(int32 InServerStamina);
	void OnRep_IsGliding();
	void OnGearChanged(class UGearComponent* InGear);
	bool IsSprinting();
	bool IsJuking();
	bool IsInClimbingMode();
	bool IsGlidingEnabled();
	bool IsGliding();
	bool IsAtEnforcedPostion(float InTolerance);
	void HandleEquipmentChanged(class UEquipmentComponent* InEquipmentComponent, const struct FEquipmentItem& InItem);
	class AValeriaCharacter* GetValeriaCharacter();
	float GetMaxSpeedWhenWalking();
	float GetMaxSpeedWhenSprinting();
	float GetMaxSpeedWhenRunning();
	float GetMaxSpeedAbs();
};

// 0x0 (0x48 - 0x48)
// Class Palia.TeleportScreenStateRequester
class UTeleportScreenStateRequester : public UPaliaScreenStateRequester
{
public:

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("TeleportScreenStateRequester");
		return Clss;
	}

};

// 0x180 (0x220 - 0xA0)
// Class Palia.ValeriaCharacterTeleportComponent
class UValeriaCharacterTeleportComponent : public UActorComponent
{
public:
	FMulticastInlineDelegateProperty_            OnTeleportOutStarted;                              // 0xA0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnTeleportInStarted;                               // 0xB0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnValeriaCharacterEnteredPrivateSpace;             // 0xC0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnValeriaCharacterExitedPrivateSpace;              // 0xD0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnValeriaCharacterTeleportComplete;                // 0xE0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnWorldPartitionTeleportCompleted;                 // 0xF0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnTeleportFlagsChanged;                            // 0x100(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	bool                                         bInitialTeleportComplete;                          // 0x110(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_35C1[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class AS6WorldPartitionStreamer*             WorldPartitionStreamerForPrepareTeleport;          // 0x118(0x8)(ZeroConstructor, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class AS6WorldPartitionStreamer*             WorldPartitionStreamerForSavedPosition;            // 0x120(0x8)(ZeroConstructor, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FTimerHandle                          ClientFadeTimerHandle;                             // 0x128(0x8)(NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FTimerHandle                          ServerFadeTimerHandle;                             // 0x130(0x8)(NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UCharacterStateMachineComponent*       Csm;                                               // 0x138(0x8)(ExportObject, ZeroConstructor, Transient, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class AValeriaCharacter*                     VC;                                                // 0x140(0x8)(ZeroConstructor, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UTeleportScreenStateRequester*         TeleportScreenStateRequester;                      // 0x148(0x8)(ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UDefaultDestinationsConfig*            DefaultDestinations;                               // 0x150(0x8)(ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	FMulticastInlineDelegateProperty_            OnTeleportDestinationReady;                        // 0x158(0x10)(ZeroConstructor, InstancedReference, NativeAccessSpecifierPrivate)
	struct FTravelPayload                        LockedInDestination;                               // 0x168(0xA0)(NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	FMulticastInlineDelegateProperty_            TeleportResult;                                    // 0x208(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                        Pad_35C2[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("ValeriaCharacterTeleportComponent");
		return Clss;
	}

	void VAL_TeleportResult__DelegateSignature(bool InbTeleportResult);
	void TryClientTeleport_Home();
	void TeleportToWorldPartitionLocationReady();
	void TeleportToWorldPartitionLocation(const struct FVector& InInPosition, const struct FRotator& InInRotation);
	void TeleportDestinationReady();
	bool ServerTeleportToHousePlotByPlayerId(const struct FGuid& InPlayerId);
	bool ServerTeleportToHousePlotByAccountID(struct FGuid& InAccountId, struct FGuid& InCharacterId);
	bool ServerTeleport_Internal(struct FTeleportActorTo_ServerContext& InTeleportContext);
	bool ServerTeleport_Home();
	bool ServerTeleport(struct FTeleportActorTo_ServerContext& InTeleportContext);
	bool ServerExecuteTeleport(class UTeleportTravelConfigAsset* InTravelConfigAsset, class AActor* InSeamlessAnchor);
	void RpcServerTeleport_Home();
	void RpcServer_VisitPlotByPlayerId(const struct FGuid& InPlayerId);
	void RpcServer_VisitPlotByAccountID(struct FGuid& InAccountId, struct FGuid& InCharacterId);
	void RpcServer_ValidateMatchmakingLocation(struct FTravelPayload& InTravelPayload);
	void RpcServer_ValidateAbleToSpawnPrivateSpace(struct FTravelPayload& InTravelPayload);
	void RpcServer_TeleportToPrivateSpace(const struct FTransform& InTeleportTransform, class UPrivateSpaceConfig* InPrivateSpaceConfig);
	void RpcServer_TeleportPrivateSpace(struct FTravelPayload& InTravelPayload);
	void RpcServer_TeleportDestinationReady(bool InbTrustServer);
	void RpcServer_SendTeleportResult(bool InbTeleportResult);
	void RpcServer_QueueTeleport(class UTeleportActorToConfigAsset* InTeleportAsset);
	void RpcServer_QueueSeamlessTeleport(class UTeleportActorToConfigAsset* InTeleportAsset, const struct FVector& InReftLocation, const struct FRotator& InRefRotation);
	void RpcServer_LocalTeleport(struct FTravelPayload& InTravelPayload);
	void RpcServer_LocalPrivateSpace(struct FTravelPayload& InTravelPayload, class UPrivateSpaceConfig* InPrivateSpaceConfig);
	void RpcServer_ExitPrivateSpace(struct FTravelPayload& InTravelPayload);
	void RpcClient_TeleportStart(struct FTeleportActorTo_ClientContext& InClientSettings);
	void RpcClient_TeleportPrivateSpace(struct FTravelPayload& InTravelPayload);
	void RpcClient_TeleportMatchmaking(struct FTravelPayload& InTravelPayload);
	void RpcClient_Teleport(struct FTeleportActorTo_ClientContext& InTeleportContext);
	void RpcClient_SpawnPrivateSpace(struct FTravelPayload& InTravelPayload);
	void RpcClient_SendTeleportResult(bool InbTeleportResult);
	void RpcClient_PostTeleport(struct FTravelPayload& InTravelPayload, const struct FVector& InTeleportLocation, const struct FRotator& InTeleportRotation, bool InbSeamless, bool InbTrustServer);
	void RpcClient_NotifyReadyForPrivateSpace(class UPrivateSpaceConfig* InPrivateSpaceConfig, const class FString& InHandleID, int32 InSlotId, const struct FTransform& InLevelSpawnTransform);
	void RpcClient_NotifyLeftPrivateSpace(class UPrivateSpaceConfig* InPrivateSpaceConfig);
	void RpcClient_NotifyInitialTeleportComplete();
	void RpcClient_EnsureClientReadyForTeleport(struct FTravelPayload& InTravelPayload);
	void RemoveTeleportFlag(enum class EVAL_TeleportCompFlags InFlag);
	void OnTeleportFlagsChanged__DelegateSignature(enum class EVAL_TeleportCompFlags InTeleportFlags);
	bool HasTeleportFlag(enum class EVAL_TeleportCompFlags InFlag);
	enum class EVAL_TeleportCompFlags GetTeleportFlags();
	bool ExecuteSpecificLocationTeleport(const struct FVector& InLocation, const struct FRotator& InRotation);
	bool ClientTrySeamlessTeleport(class UTeleportActorToConfigAsset* InTeleportAsset, class USceneComponent* InReferenceComponent);
	bool ClientTeleportToHousePlotByAccountID(const struct FGuid& InAccountId, const struct FGuid& InCharacterId);
	bool ClientTeleport(class UTeleportActorToConfigAsset* InTeleportAsset);
	bool ClientExecuteTeleport(class UTeleportTravelConfigAsset* InTravelConfigAsset, class AActor* InSeamlessAnchor);
	void Client_OnTravelOrNetworkFailureObtained(const class FString& InErrorMsg);
	void Client_OnTeleportFailure(class FName InSessionName);
	void Client_OnMatchmakingResultObtained(struct FOSSVAL_MatchmakingResult& InResult);
	void Client_OnMatchmakingDeleteResultObtained(struct FOSSVAL_MatchmakingResult& InResult);
	void Client_OnEnsureClientReadyForTeleport(struct FTravelPayload& InTravelPayload);
	void AddTeleportFlag(enum class EVAL_TeleportCompFlags InFlag);
};

// 0xC8 (0xC10 - 0xB48)
// Class Palia.ValeriaCineCameraComponent
class UValeriaCineCameraComponent : public UCineCameraComponent
{
public:
	struct FValeriaCineCamLookatParams           LookatTracking;                                    // 0xB48(0xB8)(Edit, BlueprintVisible, ContainsInstancedReference, NativeAccessSpecifierPublic)
	uint8                                        Pad_35C6[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("ValeriaCineCameraComponent");
		return Clss;
	}

	void SwitchTrackingToWorldLocation(const struct FVector& InWorldLocation);
	void SwitchTrackingToSkelMesh(class USkeletalMeshComponent* InSkelToTrack, class FName InSkelBoneToTrack, const struct FVector& InRelativeOffset);
	void SwitchTrackingToActor(class AActor* InActorToTrack, const struct FVector& InRelativeOffset);
	void SnapToTracking(bool InbImmediate);
};

// 0x8 (0x370 - 0x368)
// Class Palia.ValeriaCreatureAnimInstance
class UValeriaCreatureAnimInstance : public UValeriaAnimInstance
{
public:
	class ACreatureCharacter*                    CreatureOwner;                                     // 0x368(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("ValeriaCreatureAnimInstance");
		return Clss;
	}

	void OnProjectileHitReact(class AActor* InInstigator, class UVAL_ItemTypeDefinitionAsset* InAmmoType);
	void OnMeleeHitReact(class AActor* InInstigator);
};

// 0x28 (0x58 - 0x30)
// Class Palia.ValeriaCreatureManager
class UValeriaCreatureManager : public UGameInstanceSubsystem
{
public:
	float                                        DiveGridSize;                                      // 0x30(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_35C7[0x24];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("ValeriaCreatureManager");
		return Clss;
	}

	TArray<class UValeriaWaterBodyComponent*> GetWaterBodies();
	TArray<class USpawnerComponent*> GetTreeSpawners();
};

// 0xE8 (0x188 - 0xA0)
// Class Palia.ValeriaEmoteComponent
class UValeriaEmoteComponent : public UActorComponent
{
public:
	uint8                                        Pad_35EB[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	FMulticastInlineDelegateProperty_            OnEquippedEmotesChanged;                           // 0xA8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FVALDATA_EmotePersistBlock            EmotePersistBlock;                                 // 0xB8(0x50)(Net, Protected, NativeAccessSpecifierProtected)
	FMulticastInlineDelegateProperty_            EmotePlaybackStarted;                              // 0x108(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            EmotePlaybackEnded;                                // 0x118(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	int32                                        CanPlayEmotesOfType;                               // 0x128(0x4)(Edit, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        EmoteCooldownTimeAmount;                           // 0x12C(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int32                                        MaxEmotePoints;                                    // 0x130(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_35EE[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class UEmoteDataAsset*>               EquippedEmotes;                                    // 0x138(0x10)(Edit, Net, ZeroConstructor, RepNotify, NativeAccessSpecifierPrivate)
	TArray<class UEmoteDataAsset*>               DefaultEquippedEmotes;                             // 0x148(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPrivate)
	int64                                        CooldownExpirationTimestampMs;                     // 0x158(0x8)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int32                                        CurrentEmotePoints;                                // 0x160(0x4)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_35F1[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FActiveEmotePlaybackLog               CurrentEmotePlaying;                               // 0x168(0x10)(Net, Transient, RepNotify, NoDestructor, NativeAccessSpecifierPrivate)
	TArray<struct FTimerHandle>                  PendingCooldownHandles;                            // 0x178(0x10)(ZeroConstructor, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("ValeriaEmoteComponent");
		return Clss;
	}

	void StopCurrentEmote();
	void SetEmotePointsToValue(int32 InNewValue);
	void RequestPlaybackOfEmote(class UEmoteDataAsset* InEmoteToPlay);
	void RefillAllEmotePointsCheat();
	void PrepareNetworkEmoteData(class UEmoteDataAsset* InEmoteData);
	bool PlayEmoteByAsset(class UEmoteDataAsset* InEmoteDataAssetToPlay, const struct FPlayEmoteOptionalParams& InOptionalParams);
	void OnRep_SimulatedEmotePlaying();
	void OnRep_EquippedEmotes();
	bool IsPlayingEmote();
	bool IsEmoteEquippedById(struct FGuid& InEmoteId);
	bool IsEmoteEquipped(class UEmoteDataAsset* InEmote);
	bool HasEmotePoints();
	void HandleEquipmentChanged(class UEquipmentComponent* InEquipmentComponent, const struct FEquipmentItem& InItem);
	void HandleEmotePlaybackInternal(class UEmoteDataAsset* InEmoteData);
	class UEmoteDataAsset* GetPlayingEmoteDataAsset();
	int32 GetMaxEmotePoints();
	TArray<class UEmoteDataAsset*> GetEquippedEmotes();
	int32 GetCurrentEmotePoints();
	float GetCooldownTimeRemaining();
	float GetCooldownTimeMaximum();
	void EmptyAllEmotePointsCheat();
	bool DoesCharacterHaveEmoteCooldowns();
	bool Client_ResetAssignedEmotes();
	bool Client_ClearAssignedEmotes();
	bool Client_ClearAssignedEmote(int32 InWheelIndex);
	bool Client_AssignEmoteToWheel(int32 InWheelIndex, struct FGuid& InEmoteId);
	bool CanPlayOutEmote(class UEmoteDataAsset* InEmoteData);
};

// 0x158 (0x188 - 0x30)
// Class Palia.EmoteDataAsset
class UEmoteDataAsset : public UDataAsset
{
public:
	struct FGuid                                 EmoteId;                                           // 0x30(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, AssetRegistrySearchable, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                EmoteName;                                         // 0x40(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, AssetRegistrySearchable, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FText                                  DisplayName;                                       // 0x50(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FVAL_ChatCommandInfo                  ChatCommandInfo;                                   // 0x68(0x90)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	int32                                        CanBeUsedOn;                                       // 0xF8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_35FA[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UAnimMontage*                          EmoteAnimationMontage;                             // 0x100(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimMontage*                          FacialAnimationMontage;                            // 0x108(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TMap<enum class ECharacterAttachPoint, TSoftClassPtr<class AEquipViewActor>> Props;                                             // 0x110(0x50)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, UObjectWrapper, NativeAccessSpecifierPublic)
	class UTexture2D*                            EmoteSprite;                                       // 0x160(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTexture2D*                            EmoteIcon;                                         // 0x168(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bLooping;                                          // 0x170(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_35FD[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        MaxPlayoutTime;                                    // 0x174(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AnimationPlayRate;                                 // 0x178(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bUsesEmoteCooldown;                                // 0x17C(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bNeedsUnlock;                                      // 0x17D(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bBlocksPlayerMovement;                             // 0x17E(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bInterruptedByPlayerMovement;                      // 0x17F(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIsCollectable;                                    // 0x180(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, AssetRegistrySearchable, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_35FE[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("EmoteDataAsset");
		return Clss;
	}

	class FString ToString();
	bool IsLooping();
	float GetEmoteDuration();
	float GetAnimationDuration();
	bool DoesEmoteHave3D();
	bool DoesEmoteHave2D();
	bool CanEmoteBeUsedOnTargets(int32 InTargetFlags);
	bool CanEmoteBeUsedOnTarget(enum class EEmoteTargetType InTargetType);
};

// 0x188 (0x418 - 0x290)
// Class Palia.ValEnvironmentManager
class AValEnvironmentManager : public AActor
{
public:
	FMulticastInlineDelegateProperty_            OnTimeOfDayChanged;                                // 0x290(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            DayNightChanged;                                   // 0x2A0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TSubclassOf<class UPaliaTimeOfDaySequence>   TimeOfDaySequenceBlueprint;                        // 0x2B0(0x8)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UMaterialParameterCollection*          EnvCollection;                                     // 0x2B8(0x8)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FName                                  VarHorizonHeight;                                  // 0x2C0(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FName                                  VarHorizonHardness;                                // 0x2C8(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FName                                  VarZenithHeight;                                   // 0x2D0(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FName                                  VarZenithHardness;                                 // 0x2D8(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FName                                  VarHorizonColor;                                   // 0x2E0(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FName                                  VarZenithColor;                                    // 0x2E8(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FName                                  VarZenithColor2;                                   // 0x2F0(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FName                                  VarLowerHemisphereColor;                           // 0x2F8(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UPaliaTimeOfDaySequence*               TimeOfDaySequence;                                 // 0x300(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<struct FVector2D>                     BlendTimes;                                        // 0x308(0x10)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	class UValeriaTimeManager*                   TimeManager;                                       // 0x318(0x8)(ZeroConstructor, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        CurrentTime;                                       // 0x320(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bTimeIsFrozen;                                     // 0x324(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_3612[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UDirectionalLightComponent*            EnvDirectionalLight;                               // 0x328(0x8)(ExportObject, ZeroConstructor, Transient, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class USkyLightComponent*                    EnvSkyLight;                                       // 0x330(0x8)(ExportObject, ZeroConstructor, Transient, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UExponentialHeightFogComponent*        EnvHeightFog;                                      // 0x338(0x8)(ExportObject, ZeroConstructor, Transient, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UPostProcessComponent*                 EnvPostProcess;                                    // 0x340(0x8)(ExportObject, ZeroConstructor, Transient, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_3613[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class ULightingBaseState*                    BlendedLightingState;                              // 0x350(0x8)(ZeroConstructor, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class ULightingBaseState*                    TODLightingState;                                  // 0x358(0x8)(ZeroConstructor, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_3614[0xB0];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	enum class ETimeOfDayPeriod                  CurrentTimeOfDayState;                             // 0x410(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bIsNightTime;                                      // 0x411(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_3615[0x6];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("ValEnvironmentManager");
		return Clss;
	}

	void UpdatePlanetRotation(class UArrowComponent* InArrow, const struct FVector& InInitialForward, const struct FVector& InAxis, float InTime, float InRiseTime, float InSetTime);
	void UpdateLightingStateWithCurrentSettings(class ULightingBaseState* InLightingState, class UDirectionalLightComponent* InTempDirectionalLight);
	bool UpdateLightingStateInPool(class FName InOwnerName, float InNewBlendPercent);
	bool UnregisterLightingState(class FName InOwnerName);
	void UnfreezeLighting();
	void SetHeightFogOffset(float InOffset);
	bool RegisterLightingState(class FName InOwnerName, class ULightingBaseState* InToAdd, float InPercent, bool InbIsCompleteOverride);
	void OnNight();
	void OnMorning();
	void OnEvening();
	void OnDay();
	void NotifyTimeOfDayChanged__DelegateSignature(enum class ETimeOfDayPeriod InPeriod);
	void NotifyDayNightChanged__DelegateSignature(bool InbIsNight);
	float GetWindIntensityAtPos(const struct FVector& InPos);
	enum class ETimeOfDayPeriod GetTimeOfDayPeriod();
	bool GetIsTimeFrozen();
	bool GetIsNightTime();
	float GetEnvManagerTimeOfDay();
	float GetCurrentTimeOfDayLerp();
	void FreezeLightingAtTime(float InTime);
	class ULightingBaseState* CreateNewLightingStateFromCurrentSettings(const class FString& InAssetPath, const class FString& InAssetName, class UDirectionalLightComponent* InTempDirectionalLight);
};

// 0xDF0 (0xFB0 - 0x1C0)
// Class Palia.ValeriaGameInstance
class UValeriaGameInstance : public UGameInstance
{
public:
	TSubclassOf<class USpawnOnFoliageManager>    SpawnOnFoliage;                                    // 0x1C0(0x8)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnActiveGameServersUpdated;                        // 0x1C8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnSaveTriggered;                                   // 0x1D8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnActorSpawned;                                    // 0x1E8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnSkipCutsceneConsoleCmdRun;                       // 0x1F8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnScriptStartCinematic;                            // 0x208(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnMapInitBegin;                                    // 0x218(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnMapInitEnd;                                      // 0x228(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnLastInputTypeChanged;                            // 0x238(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TSubclassOf<class UWidgetComponent>          DefaultInteractablePlate;                          // 0x248(0x8)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UMusicManager>             MusicManagerBlueprintClass;                        // 0x250(0x8)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_361A[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         bIsInitializingMap;                                // 0x260(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_361B[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TMap<enum class EValeriaErrorMsgId, class FText> ErrorMessageMap;                                   // 0x268(0x50)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_361C[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FConfigsManager                       Configs;                                           // 0x2C0(0xC90)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	class UValeriaSaveGame*                      SavedData;                                         // 0xF50(0x8)(ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UMusicManager*                         MusicManager;                                      // 0xF58(0x8)(ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UVAL_TimerManager*                     TimerManager;                                      // 0xF60(0x8)(ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FText                                  ActiveDisconnectErrorMessage;                      // 0xF68(0x18)(Transient, NativeAccessSpecifierPrivate)
	struct FTimerHandle                          AutoClearDcErrorMessageTimerHandle;                // 0xF80(0x8)(Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        AutoClearDisconnectErrorMessageTime;               // 0xF88(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_361F[0xC];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UValeriaAkListenerComponent*           AudioListener;                                     // 0xF98(0x8)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_3621[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UExperiencePackageConfig*              ServerExperiencePackage;                           // 0xFA8(0x8)(ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("ValeriaGameInstance");
		return Clss;
	}

	void UpdateCurrentInputType(enum class EInputType InNewInputType);
	void StoreSavedData();
	void PrintDebugInfo();
	bool IsMobileEmulationOn();
	bool IsDebuggingOn();
	bool HasActiveDisconnectErrorMessage();
	class UVAL_TimerManager* GetTimerManager();
	class UValeriaSaveGame* GetSavedData();
	class UMusicManager* GetMusicManager();
	enum class EInputType GetCurrentInputType();
	struct FConfigsManager GetConfigsManager();
	class FText GetActiveDisconnectErrorMessage();
	void ClearDisconnectErrorMessage();
};

// 0x290 (0x608 - 0x378)
// Class Palia.ValeriaGameMode
class AValeriaGameMode : public AGameMode
{
public:
	float                                        MaxTimePerFrameToSpendSpawningPlaceables;          // 0x378(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        MinNumPlaceablesToSpawnPerBurst;                   // 0x37C(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        MinNumPlaceablesToDestroyPerBurst;                 // 0x380(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3627[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	FMulticastInlineDelegateProperty_            OnPlayerCharacterLoaded;                           // 0x388(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                        Pad_3628[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FString                                WorldId;                                           // 0x3A0(0x10)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<struct FPendingHousingPersistActorsQueue> PendingHousingPlotSpawnQueue;                      // 0x3B0(0x10)(ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_3629[0xA0];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TMap<struct FPersistActorId, class AActor*>  PersistedActors;                                   // 0x460(0x50)(NativeAccessSpecifierPrivate)
	TMap<struct FUniqueNetIdRepl, struct FPlayerLoadingData> LoadingPlayers;                                    // 0x4B0(0x50)(NativeAccessSpecifierPrivate)
	class USpawnOnFoliageManager*                SpawnOnFoliageManager;                             // 0x500(0x8)(ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_362A[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TMap<struct FUniqueNetIdRepl, struct FTravelDestination> Destinations;                                      // 0x510(0x50)(NativeAccessSpecifierPrivate)
	struct FPersistActorsToDestroyQueue          PersistActorsToDestroy;                            // 0x560(0x50)(ContainsInstancedReference, NativeAccessSpecifierPrivate)
	bool                                         bStartingLoadoutWasFound;                          // 0x5B0(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_362B[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        TimeTillNextDequeueAndSpawn;                       // 0x5B4(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UVAL_KickPlayerAsyncStream*            KickPlayerAsyncStream;                             // 0x5B8(0x8)(ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_362C[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UTeleportActorFromConfigAsset*         MapIntroPrivateSpaceTeleportConfig;                // 0x5C8(0x8)(ZeroConstructor, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UDefaultDestinationsConfig*            DefaultDestinations;                               // 0x5D0(0x8)(ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_362D[0x30];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("ValeriaGameMode");
		return Clss;
	}

	void SpawnVillagers(class UDataTable* InInVillagerSpawnConfigDataTable, class ULimitedEventDataAsset* InInEventDataAsset);
	void PersistedActorWasDestroyed(class AActor* InActorDestroyed);
	void OnPlayerCharacterLoaded__DelegateSignature(struct FGuid& InCharacterId, struct FUniqueNetIdRepl& InNetId);
	void HandleMqttConnect(bool InbSuccess);
	void HandleLimitedEventStateChange(class ALimitedEventManagerBase* InLimitedEventManager, bool InbIsEventActive);
	void HandleKickPlayerMessage(struct FVAL_AsyncMessageKickPlayer& InKickPlayerMessage);
};

// 0x80 (0xB8 - 0x38)
// Class Palia.VAL_SessionSettings
class UVAL_SessionSettings : public UDeveloperSettings
{
public:
	float                                        ServerStateInterval;                               // 0x38(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ServerReadyDelay;                                  // 0x3C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ServerAcceptedPlayerTimeout;                       // 0x40(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_362F[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FText                                  ServerKickedAllPlayersReasonText;                  // 0x48(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, Config, NativeAccessSpecifierPublic)
	int32                                        NumAgonesConnectionAttemptsAllowed;                // 0x60(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3630[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TMap<class FString, class FText>             ServerRegionTextTable;                             // 0x68(0x50)(Edit, BlueprintVisible, BlueprintReadOnly, Config, NativeAccessSpecifierPublic)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("VAL_SessionSettings");
		return Clss;
	}

};

// 0x178 (0x420 - 0x2A8)
// Class Palia.ValeriaGameSession
class AValeriaGameSession : public AGameSession
{
public:
	uint8                                        Pad_363A[0xC0];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class AOnlineBeaconHost*                     BeaconHost;                                        // 0x368(0x8)(ZeroConstructor, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class AOSSVAL_BeaconHostObject*              BeaconHostObject;                                  // 0x370(0x8)(ZeroConstructor, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_363B[0x68];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UAgonesComponent*                      AgonesComponent;                                   // 0x3E0(0x8)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_363D[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UVAL_ServerReserveRequestAsyncStream*  ServerAllocatedRequestAsyncStream;                 // 0x3F0(0x8)(ZeroConstructor, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UVAL_ServerRegistrationRequestAsyncStream* ServerRegistrationRequestAsyncStream;              // 0x3F8(0x8)(ZeroConstructor, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UVAL_ServerKickAllAsyncStream*         ServerKickAllAsyncStream;                          // 0x400(0x8)(ZeroConstructor, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_363F[0x18];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("ValeriaGameSession");
		return Clss;
	}

	void HandleOnServerSpaceUnregistered(struct FVAL_ServerSpace& InServerSpace);
	void HandleOnServerSpaceRegistered(struct FVAL_ServerSpace& InServerSpace);
	void HandleOnServerAuthTokenReady();
	void HandleOnPlayerCharacterLoaded(struct FGuid& InCharacterId, struct FUniqueNetIdRepl& InNetId);
	void HandleOnAgonesConnectionSucceeded(struct FGameServerResponse& InResponse);
	void HandleOnAgonesConnectionFailed(struct FAgonesError& InError);
	void HandleMqttConnect(bool InbSuccess);
	void HandleAgonesReservedSucceeded(struct FEmptyResponse& InResponse);
	void HandleAgonesReservedFailed(struct FAgonesError& InError);
	void HandleAgonesReadySucceeded(struct FEmptyResponse& InResponse);
	void HandleAgonesReadyFailed(struct FAgonesError& InError);
	void HandleAgonesAllocatedSucceeded(struct FEmptyResponse& InResponse);
	void HandleAgonesAllocatedFailed(struct FAgonesError& InError);
};

// 0x228 (0x528 - 0x300)
// Class Palia.ValeriaGameState
class AValeriaGameState : public AGameState
{
public:
	class UDynamicGiftPrefDataComponent*         DynamicGiftPrefDataComponent;                      // 0x300(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        VillagerTrackingUpdateRate;                        // 0x308(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_3646[0x1C];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	FMulticastInlineDelegateProperty_            OnPlayerStateUpdated;                              // 0x328(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnPlayerLocationContextChanged;                    // 0x338(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnWindowResized;                                   // 0x348(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FTrackedVillagerSerializer            TrackedVillagerList;                               // 0x358(0x120)(Net, NativeAccessSpecifierPublic)
	TArray<class UTrackingComponent*>            TrackingComponents;                                // 0x478(0x10)(ExportObject, ZeroConstructor, Transient, ContainsInstancedReference, NativeAccessSpecifierPublic)
	TArray<struct FChallengeClientInfo>          ChallengeClientInfo;                               // 0x488(0x10)(Net, ZeroConstructor, NativeAccessSpecifierPublic)
	struct FTimerHandle                          VillagerTrackingUpdateHandle;                      // 0x498(0x8)(NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bVillagerTrackingUpdatesActive;                    // 0x4A0(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_3647[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class UTrackingTargetComponent*>      TrackingTargetComponents;                          // 0x4A8(0x10)(ExportObject, ZeroConstructor, Transient, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	struct FValeriaZoneData                      ZoneData;                                          // 0x4B8(0x28)(Net, NoDestructor, NativeAccessSpecifierPrivate)
	int64                                        LastLoggedTimestampMs;                             // 0x4E0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        DebugVillagerSpeedScalar;                          // 0x4E8(0x4)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_3649[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSoftObjectPtr<class AActor>                 RuntimeISMActor;                                   // 0x4F0(0x30)(Transient, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSubclassOf<class AActor>                    RuntimeISMActorClass;                              // 0x520(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("ValeriaGameState");
		return Clss;
	}

	void ServerUpdateVillagerTracking();
	bool IsTimeWarpEnabled();
	class UDynamicGiftPrefDataComponent* GetDynamicGiftPrefDataComponent();
	void ClientUpdateVillagerTracking();
};

// 0x150 (0x298 - 0x148)
// Class Palia.ValeriaGameUserSettings
class UValeriaGameUserSettings : public UGameUserSettings
{
public:
	bool                                         bFirstRunSetupDone;                                // 0x148(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3653[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FValeriaGameplaySettings              GameplaySettings;                                  // 0x14C(0x10)(BlueprintVisible, BlueprintReadOnly, Config, NoDestructor, NativeAccessSpecifierPublic)
	struct FValeriaInputSettings                 InputSettings;                                     // 0x15C(0x8)(BlueprintVisible, BlueprintReadOnly, Config, NoDestructor, NativeAccessSpecifierPublic)
	struct FValeriaAudioSettings                 AudioSettings;                                     // 0x164(0x14)(BlueprintVisible, BlueprintReadOnly, Config, NoDestructor, NativeAccessSpecifierPublic)
	struct FValeriaGraphicSettings               GraphicSettings;                                   // 0x178(0x4)(BlueprintVisible, BlueprintReadOnly, Config, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                        Pad_3654[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FValeriaMenuSettings                  MenuSettings;                                      // 0x180(0x58)(BlueprintVisible, BlueprintReadOnly, Config, NativeAccessSpecifierPublic)
	struct FValeriaPrivacySettings               PrivacySettings;                                   // 0x1D8(0x2)(BlueprintVisible, BlueprintReadOnly, Config, NoDestructor, NativeAccessSpecifierPublic)
	bool                                         OnlyShowNewAnnouncements;                          // 0x1DA(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3655[0x5];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FDateTime                             LastAnnouncementTimestamp;                         // 0x1E0(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            InventorySettingsChanged;                          // 0x1E8(0x10)(ZeroConstructor, Transient, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            GraphicSettingsChanged;                            // 0x1F8(0x10)(ZeroConstructor, Transient, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            AudioSettingsChanged;                              // 0x208(0x10)(ZeroConstructor, Transient, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            ChatSettingsChanged;                               // 0x218(0x10)(ZeroConstructor, Transient, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            InputSettingsChanged;                              // 0x228(0x10)(ZeroConstructor, Transient, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            CameraSettingsChanged;                             // 0x238(0x10)(ZeroConstructor, Transient, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            ReticleSettingsChanged;                            // 0x248(0x10)(ZeroConstructor, Transient, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            MovementSettingsChanged;                           // 0x258(0x10)(ZeroConstructor, Transient, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            DebugSettingsChanged;                              // 0x268(0x10)(ZeroConstructor, Transient, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            MenuSettingsChanged;                               // 0x278(0x10)(ZeroConstructor, Transient, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            ServerSettingsChanged;                             // 0x288(0x10)(ZeroConstructor, Transient, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("ValeriaGameUserSettings");
		return Clss;
	}

	void SetSprintType(enum class ESprintType InSprintType);
	void SetSoundVolume(float InValue);
	void SetShowServerPing(bool InShowServerPing);
	void SetRepairAll(bool InRepairAll);
	void SetQuestCategoryExpanded(enum class EVAL_QuestCategory InInQuestCategory, bool InbExpanded);
	void SetPanningRule(enum class EPanningRule InPanningRule);
	void SetOverallVolume(float InValue);
	void SetOnlyShowOnce(bool InOnlyShowOnce);
	void SetNumStorageBagsInActionBar(int32 InNumStorageBags);
	void SetMuteFocus(bool InMuteNotInFocus);
	void SetMusicVolume(float InValue);
	void SetMouseSensitivity(float InSensitivity);
	void SetMixProfile(enum class EAudioMixProfiles InAudioMixProfile);
	void SetMaxToolkitRepairSlider(bool InMaxSlider);
	void SetMaxGoldRepairSlider(bool InMaxSlider);
	void SetLastSelectedQuestId(int32 InInLastSelectedQuestId);
	void SetLastAnnouncementTimestamp(const struct FDateTime& InAnnouncementTimestamp);
	void SetInvertYAxis(bool InEnable);
	void SetInvertXAxis(bool InEnable);
	void SetHideChatTimestamp(bool InEnable);
	void SetFOV(float InValue);
	void SetEnableReticle(bool InEnable);
	void SetEnableActionBarWrapping(bool InEnableActionBarWrapping);
	void SetDialogueVolume(float InValue);
	void SetCompletedQuestCategoryExpanded(bool InbExpanded);
	void SetAllowEatingWhenFull(bool InAllowEating);
	void SetAllowCameraShake(bool InEnable);
	void Privacy_SetHideSocialInformation(bool InHidden);
	void Privacy_SetDefaultChannelsToOff(bool InOff);
	class UValeriaGameUserSettings* GetValeriaGameUserSettings();
	bool GetQuestCategoryExpanded(enum class EVAL_QuestCategory InInQuestCategory);
	int32 GetLastSelectedQuestId();
	bool GetCompletedQuestCategoryExpanded();
	float ConvertMouseSensitivitySettingValueToConfigValue(float InSettingValue);
	float ConvertMouseSensitivityConfigValueToSettingValue(float InConfigValue);
};

// 0x70 (0xA0 - 0x30)
// Class Palia.ValeriaGASAttributeSet
class UValeriaGASAttributeSet : public UAttributeSet
{
public:
	struct FGameplayAttributeData                Health;                                            // 0x30(0x10)(BlueprintVisible, BlueprintReadOnly, Net, RepNotify, NativeAccessSpecifierPublic)
	struct FGameplayAttributeData                MaxHealth;                                         // 0x40(0x10)(BlueprintVisible, BlueprintReadOnly, Net, RepNotify, NativeAccessSpecifierPublic)
	struct FGameplayAttributeData                Stamina;                                           // 0x50(0x10)(BlueprintVisible, BlueprintReadOnly, Net, RepNotify, NativeAccessSpecifierPublic)
	struct FGameplayAttributeData                MaxStamina;                                        // 0x60(0x10)(BlueprintVisible, BlueprintReadOnly, Net, RepNotify, NativeAccessSpecifierPublic)
	struct FGameplayAttributeData                MovementSpeed;                                     // 0x70(0x10)(BlueprintVisible, BlueprintReadOnly, Net, RepNotify, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnHealthChanged;                                   // 0x80(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	class UVitalsComponent*                      OwnerVitals;                                       // 0x90(0x8)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bOverrideImmunity;                                 // 0x98(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_365E[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("ValeriaGASAttributeSet");
		return Clss;
	}

	void OnRep_Stamina(struct FGameplayAttributeData& InOldValue);
	void OnRep_MovementSpeed(struct FGameplayAttributeData& InOldValue);
	void OnRep_MaxStamina(struct FGameplayAttributeData& InOldValue);
	void OnRep_MaxHealth(struct FGameplayAttributeData& InOldValue);
	void OnRep_Health(struct FGameplayAttributeData& InOldValue);
};

// 0x10 (0x90 - 0x80)
// Class Palia.ValeriaGASAT_RepeatEveryFrame
class UValeriaGASAT_RepeatEveryFrame : public UAbilityTask
{
public:
	FMulticastInlineDelegateProperty_            OnTicked;                                          // 0x80(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("ValeriaGASAT_RepeatEveryFrame");
		return Clss;
	}

	class UValeriaGASAT_RepeatEveryFrame* RepeatEveryFrame(class UGameplayAbility* InOwningAbility);
};

// 0x0 (0x80 - 0x80)
// Class Palia.ValeriaGASAT_ToggleCollision
class UValeriaGASAT_ToggleCollision : public UAbilityTask
{
public:

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("ValeriaGASAT_ToggleCollision");
		return Clss;
	}

	class UValeriaGASAT_ToggleCollision* CreateToggleCollisionProxy(class UGameplayAbility* InOwningAbility, class FName InTaskInstanceName, bool InEnableCollision, class FName InColliderTag);
};

// 0x20 (0xA0 - 0x80)
// Class Palia.ValeriaGASAT_WaitOverlap
class UValeriaGASAT_WaitOverlap : public UAbilityTask
{
public:
	FMulticastInlineDelegateProperty_            OnOverlap;                                         // 0x80(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                        Pad_366A[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("ValeriaGASAT_WaitOverlap");
		return Clss;
	}

	class UValeriaGASAT_WaitOverlap* ValeriaWaitForOverlap(class UGameplayAbility* InOwningAbility, class FName InColliderTag, class AActor* InActorToTest);
	void OnOverlapCallback(class UPrimitiveComponent* InOverlappedComp, class AActor* InOther, class UPrimitiveComponent* InOtherComp, int32 InOtherBodyIndex, bool InbFromSweep, struct FHitResult& InSweepResult);
};

// 0xD8 (0x1478 - 0x13A0)
// Class Palia.ValeriaGASComponent
class UValeriaGASComponent : public UAbilitySystemComponent
{
public:
	uint8                                        Pad_3674[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<TSubclassOf<class UValeriaGASGameplayAbility>> GameplayAbilities;                                 // 0x13A8(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnNotEnoughStamina;                                // 0x13B8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	float                                        TimeInputStaysQueued;                              // 0x13C8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        TimeForInputToBeConsideredHold;                    // 0x13CC(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FGameplayAbilitySpecEventData> AbilityEventDataPendingAdds;                       // 0x13D0(0x10)(ZeroConstructor, NativeAccessSpecifierPrivate)
	bool                                         ShouldTick;                                        // 0x13E0(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         EnableOnlyWhenInteractedWith;                      // 0x13E1(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_3676[0x6];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FGameplayAbilitySpecHandle>    RuntimeAbilityHandles;                             // 0x13E8(0x10)(ZeroConstructor, NativeAccessSpecifierPrivate)
	struct FGameplayAbilitySpecHandle            CurrentLMBAbilityHandle;                           // 0x13F8(0x4)(Net, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FGameplayAbilitySpecHandle            CurrentRMBAbilityHandle;                           // 0x13FC(0x4)(Net, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FGameplayAbilitySpecHandle            CurrentSpacebarAbilityHandle;                      // 0x1400(0x4)(Net, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_3677[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FGameplayAbilitySpecHandle>    AdditionalAbilityHandles;                          // 0x1408(0x10)(Net, ZeroConstructor, NativeAccessSpecifierPrivate)
	bool                                         SendAltInputsToLMBAbility;                         // 0x1418(0x1)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         CancelAbilityOnSprint;                             // 0x1419(0x1)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         ShouldQueueSprintToggle;                           // 0x141A(0x1)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         EnterSprintOnAbilityEnd;                           // 0x141B(0x1)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FBagSlotLocation                      CurrentlyEquippedLocation;                         // 0x141C(0x8)(Net, NoDestructor, NativeAccessSpecifierPrivate)
	uint8                                        Pad_3678[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSoftObjectPtr<class UVAL_ItemTypeDefinitionAsset> CurrentItemType;                                   // 0x1428(0x30)(UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_3679[0x20];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("ValeriaGASComponent");
		return Clss;
	}

	void UnmarkAbilityLockedIn();
	bool TryActivateAbilitiesByTagWithGameplayEvent(struct FGameplayTagContainer& InGameplayTagContainer, struct FGameplayEventData& InPayload);
	void RpcServer_EndActiveAbility();
	void RemoveMovementBlocker();
	struct FSelfUseEventResult OnClientUseEquippedOutward(class AValeriaPlayerController* InPlayer, const struct FUseEventParams& InParams);
	struct FSelfUseEventResult OnClientUseEquippedInward(class AValeriaPlayerController* InPlayer, const struct FUseEventParams& InParams);
	void MarkAbilityLockedIn();
	bool IsMovementBlocked();
	bool IsAbilityMarkedLockedIn();
	void HandleGameplayEffectApplied(class UAbilitySystemComponent* InTarget, struct FGameplayEffectSpec& InSpecApplied, const struct FActiveGameplayEffectHandle& InActiveHandle);
	bool CanCurrentlyMove();
	void AddMovementBlocker();
};

// 0x80 (0xB0 - 0x30)
// Class Palia.ValeriaGASFishingAttributeSet
class UValeriaGASFishingAttributeSet : public UAttributeSet
{
public:
	struct FGameplayAttributeData                RodHealthPercentIncrease;                          // 0x30(0x10)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	struct FGameplayAttributeData                AdditionalFlatRodHealth;                           // 0x40(0x10)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	struct FGameplayAttributeData                SafeZoneSpeedPercentIncrease;                      // 0x50(0x10)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	struct FGameplayAttributeData                SafeZoneAccelerationPercentIncrease;               // 0x60(0x10)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	struct FGameplayAttributeData                AdditionalFlatSafeZoneSize;                        // 0x70(0x10)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	struct FGameplayAttributeData                SafeZonePercentIncrease;                           // 0x80(0x10)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	struct FGameplayAttributeData                RodDamageRecoveryPercentChange;                    // 0x90(0x10)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	struct FGameplayAttributeData                HookTimeReductionPercent;                          // 0xA0(0x10)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("ValeriaGASFishingAttributeSet");
		return Clss;
	}

};

// 0x80 (0x438 - 0x3B8)
// Class Palia.ValeriaGASGameplayAbility
class UValeriaGASGameplayAbility : public UGameplayAbility
{
public:
	FMulticastInlineDelegateProperty_            InputPressedDelegate;                              // 0x3B8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            InputReleasedDelegate;                             // 0x3C8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            AltInputPressedDelegate;                           // 0x3D8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            AltInputReleasedDelegate;                          // 0x3E8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	bool                                         bShouldBlockActionBarWhenActive;                   // 0x3F8(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_367D[0x37];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	struct FBagSlotLocation                      EquipLocationAtActivation;                         // 0x430(0x8)(NoDestructor, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("ValeriaGASGameplayAbility");
		return Clss;
	}

	void OnInputReleasedCallback();
	void OnInputPressedCallback();
	void OnAltInputReleasedCallback();
	void OnAltInputPressedCallback();
	void LoadAbilityAssets(class AValeriaCharacter* InValeriaCharacter);
	bool IsInputQueued();
	void InterruptAbility();
	class AValeriaPlayerController* GetValeriaPlayerControllerFromActorInfo();
	class AValeriaCharacter* GetValeriaCharacterFromActorInfo();
	struct FBagSlotLocation GetEquipLocationOfAbility();
	void ConsumeInput();
};

// 0x10 (0x40 - 0x30)
// Class Palia.ValeriaGASSprintingAttributeSet
class UValeriaGASSprintingAttributeSet : public UAttributeSet
{
public:
	struct FGameplayAttributeData                SprintStaminaUsePercentReduction;                  // 0x30(0x10)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("ValeriaGASSprintingAttributeSet");
		return Clss;
	}

};

// 0x78 (0x310 - 0x298)
// Class Palia.ValeriaLocalPlayer
class UValeriaLocalPlayer : public ULocalPlayer
{
public:
	class FString                                GameLoginOptions;                                  // 0x298(0x10)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnSelectedCharacterChanged;                        // 0x2A8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnPawnChanged;                                     // 0x2B8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FOSSVAL_SelectedCharacter             SelectedCharacter;                                 // 0x2C8(0x40)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_3681[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("ValeriaLocalPlayer");
		return Clss;
	}

	void OnSelectedCharacterChanged__DelegateSignature(struct FOSSVAL_SelectedCharacter& InSelectedCharacter);
	void OnPawnChanged__DelegateSignature(class APawn* InPawn);
	class APawn* GetCurrentPawn();
};

// 0x0 (0x48 - 0x48)
// Class Palia.ValeriaNavFilter
class UValeriaNavFilter : public UNavFilter_AIControllerDefault
{
public:

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("ValeriaNavFilter");
		return Clss;
	}

};

// 0x60 (0x3B0 - 0x350)
// Class Palia.ValeriaOutfitPostAnimInstance
class UValeriaOutfitPostAnimInstance : public UAnimInstance
{
public:
	class AValeriaMoveablePawn*                  PawnOwner;                                         // 0x348(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, NoDestructor, AdvancedDisplay, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector                               ExternalForce;                                     // 0x350(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FName                                  DynamicsAlphaCurve;                                // 0x368(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector                               PendingExternalForce;                              // 0x370(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, IsPlainOldData, NoDestructor, AdvancedDisplay, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector                               LastFrameRightVector;                              // 0x388(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, IsPlainOldData, NoDestructor, AdvancedDisplay, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        CharacterLinearForceMultiplier;                    // 0x3A0(0x4)(Edit, BlueprintVisible, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        CharacterAngularForceMultiplier;                   // 0x3A4(0x4)(Edit, BlueprintVisible, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3685[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("ValeriaOutfitPostAnimInstance");
		return Clss;
	}

	void UpdateLastFrameRightVector();
	void ConsumePendingExternalForce();
	void ClearExternalForce();
	void AddExternalForce(const struct FVector& InInForce);
};

// 0x50 (0x80 - 0x30)
// Class Palia.ValeriaPerfManager
class UValeriaPerfManager : public UGameInstanceSubsystem
{
public:
	bool                                         bPreventUpload;                                    // 0x30(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3687[0x17];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         bIsCurrentlyProcessing;                            // 0x48(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_3688[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        TimeToProfileForSecs;                              // 0x4C(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FString                                PerfSessionId;                                     // 0x50(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FString                                CurrentCommandList;                                // 0x60(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int32                                        CurrentCommandIndex;                               // 0x70(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        TimeLastProfiledAt;                                // 0x74(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        AutomatedPerfTestCooldown;                         // 0x78(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int32                                        AutomatedPerfNumOfConnectionsRequired;             // 0x7C(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("ValeriaPerfManager");
		return Clss;
	}

	void TickAutomatedProfiler();
};

// 0x0 (0x460 - 0x460)
// Class Palia.ValeriaPetCharacter
class AValeriaPetCharacter : public AValeriaMoveablePawn
{
public:

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("ValeriaPetCharacter");
		return Clss;
	}

};

// 0x180 (0x9D0 - 0x850)
// Class Palia.VAL_PlayerControllerBase
class AVAL_PlayerControllerBase : public APlayerController
{
public:
	TSubclassOf<class AHUD>                      HUDClass;                                          // 0x850(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnClientPreTravel;                                 // 0x858(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                        Pad_369C[0x18];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class FString                                PlatformEnvironment;                               // 0x880(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, EditConst, RepNotify, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnPlatformEnvUpdated;                              // 0x890(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                        Pad_369D[0x60];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	FMulticastInlineDelegateProperty_            OnMatchmakingStarted;                              // 0x900(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnMatchmakingResultObtained;                       // 0x910(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnServerIdUpdated;                                 // 0x920(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnServerRegionUpdated;                             // 0x930(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	class FString                                ServerId;                                          // 0x940(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, EditConst, RepNotify, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                ServerRegion;                                      // 0x950(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, EditConst, RepNotify, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnNotificationEvent;                               // 0x960(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnNotificationDismissEvent;                        // 0x970(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	bool                                         bTrackPlayerInactivity;                            // 0x980(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_369E[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        InactivityTimeAccumulator;                         // 0x984(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        InactivityHeartbeatTimeSeconds;                    // 0x988(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        InactiveTimeToDisconnectSeconds;                   // 0x98C(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_369F[0x18];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	FMulticastInlineDelegateProperty_            OnRunningExpPkgChanged;                            // 0x9A8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                        Pad_36A0[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UExperiencePackageConfig*              RunningExpPkg;                                     // 0x9C8(0x8)(Net, ZeroConstructor, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("VAL_PlayerControllerBase");
		return Clss;
	}

	void SetExperiencePackage(class UExperiencePackageConfig* InInExpPkg);
	void Server_InactivityHeartbeat();
	void SendNotification(const struct FNotification& InNotification);
	void RpcServer_RequestMatchmakingTravelTicket(struct FGuid& InRequestId, struct FOSSVAL_MatchmakingRequestContext& InRequestContext);
	void RpcServer_RequestMatchmakingJoinOrTravelStatus(struct FGuid& InRequestId, struct FOSSVAL_MatchmakingRequestContext& InRequestContext);
	void RpcServer_RequestMatchmakingDeleteRequest(struct FGuid& InRequestId, struct FOSSVAL_MatchmakingRequestContext& InRequestContext);
	void RpcServer_RequestMatchmakingCreateJoinOrTravelRequest(struct FGuid& InRequestId, struct FOSSVAL_MatchmakingRequestContext& InRequestContext);
	void RpcServer_NotifyInactivityInterrupted();
	void RpcClient_StoreKickReason(class FText& InReason);
	void RpcClient_SendNotification(const struct FNotification& InNotification);
	void RpcClient_RequestMatchmakingTravelTicket_Internal(struct FGuid& InRequestId, struct FOSSVAL_MatchmakingRequestContext& InRequestContext);
	void RpcClient_RequestMatchmakingJoinTicket_Internal(struct FGuid& InRequestId, struct FOSSVAL_MatchmakingRequestContext& InRequestContext);
	void RpcClient_RequestMatchmakingJoinStatus_Internal(struct FGuid& InRequestId, struct FOSSVAL_MatchmakingRequestContext& InRequestContext);
	void RpcClient_RequestMatchmakingDeleteJoin_Internal(struct FGuid& InRequestId, struct FOSSVAL_MatchmakingRequestContext& InRequestContext);
	void RpcClient_OnMatchmakingTravelTicketRequestCompleted(struct FGuid& InRequestId, struct FOSSVAL_MatchmakingJoinStatusResult& InResult);
	void RpcClient_OnMatchmakingJoinOrTravelStatusReceived(struct FGuid& InRequestId, struct FOSSVAL_MatchmakingJoinStatusResult& InResult);
	void RpcClient_OnMatchmakingDeleteRequestReceived(struct FGuid& InRequestId, struct FOSSVAL_MatchmakingResult& InRequestContext);
	void RpcClient_OnMatchmakingCreateJoinOrTravelResultReceived(struct FGuid& InRequestId, struct FOSSVAL_MatchmakingJoinStatusResult& InResult);
	void RpcClient_Logout();
	void RpcClient_DismissNotification(const struct FNotification& InNotification);
	void OnServerRegionUpdated__DelegateSignature(const class FString& InRegion);
	void OnServerIdUpdated__DelegateSignature(const class FString& InID);
	void OnRunningExpPkgChanged__DelegateSignature(class UExperiencePackageConfig* InExpPkg);
	void OnRep_RunningExpPkgChanged();
	void OnRep_PlatformEnvironment();
	void OnRep_OnServerRegionUpdated();
	void OnRep_OnServerIdUpdated();
	void OnPlatformEnvUpdated__DelegateSignature(const class FString& InEnvironment);
	void OnMatchmakingStarted__DelegateSignature();
	void OnMatchmakingResultObtained__DelegateSignature(struct FOSSVAL_MatchmakingResult& InResult);
	void OnClientPreTravel__DelegateSignature(const class FString& InPendingURL, enum class ETravelType InTravelType, bool InbIsSeamlessTravel);
	bool IsRunningExpPkg();
	class UExperiencePackageConfig* GetExperiencePackage();
	void DismissNotification(const struct FNotification& InNotification);
	void Client_InactivityHeartbeat();
};

// 0x528 (0xEF8 - 0x9D0)
// Class Palia.ValeriaPlayerController
class AValeriaPlayerController : public AVAL_PlayerControllerBase
{
public:
	FMulticastInlineDelegateProperty_            OnErrorMessageReceived;                            // 0x9D0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnErrorMessageTextReceived;                        // 0x9E0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnErrorModalReceived;                              // 0x9F0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnPremiumStoreEntitlementsChanged;                 // 0xA00(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnPossessionChanged;                               // 0xA10(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnCharacterWasSpawnedEvent;                        // 0xA20(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnFocusUpgradedEvent;                              // 0xA30(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnHousingPlotVisited;                              // 0xA40(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnSimpleFadeRequested;                             // 0xA50(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnCharacterTeleported;                             // 0xA60(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	float                                        SyncTimeInterval;                                  // 0xA70(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        PlayerSnapshotInterval;                            // 0xA74(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        PlayerTraversalSnapshotInterval;                   // 0xA78(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        GameTelemetrySnapshotInterval;                     // 0xA7C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FTimerHandle                          DisconnectWithMessageTimeoutHandle;                // 0xA80(0x8)(NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTeleportTravelConfigAsset*            ExitDialogueTeleportTravelConfigAsset;             // 0xA88(0x8)(ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class ULevelSequence>         ExitDialogueLevelSequence;                         // 0xA90(0x30)(UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FTimerHandle                          UnstuckCooldownTimerHandle;                        // 0xAC0(0x8)(NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int64                                        UnstuckLastUsageTime;                              // 0xAC8(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        UnstuckCooldownSeconds;                            // 0xAD0(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        UnstuckUseFactorIncrease;                          // 0xAD4(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FText                                  UnstuckOnCooldownText;                             // 0xAD8(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, Config, NativeAccessSpecifierPublic)
	struct FTimerHandle                          ReturnHomeCooldownTimerHandle;                     // 0xAF0(0x8)(NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int64                                        ReturnHomeLastUsageTime;                           // 0xAF8(0x8)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ReturnHomeCooldownSeconds;                         // 0xB00(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_374F[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UTeleportTravelConfigAsset*            ReturnHomeDestinationAddress;                      // 0xB08(0x8)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3750[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FVAL_PostDialogueChainSupplementaryInfo PostDialogueChainSupplementaryInfo;                // 0xB18(0x10)(Transient, ContainsInstancedReference, NativeAccessSpecifierPublic)
	float                                        InteractableSearchRadius;                          // 0xB28(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        InteractableSearchDistanceAhead;                   // 0xB2C(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<int32>                                CurrentSubgameInputBindingHandles;                 // 0xB30(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnClientLeaveHousingPlot;                          // 0xB40(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnClientArriveOnHousingPlot;                       // 0xB50(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnClientVisitorListUpdated;                        // 0xB60(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FPlotPresence                         PlotPresence;                                      // 0xB70(0x10)(Net, RepNotify, NoDestructor, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_3751[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	FMulticastInlineDelegateProperty_            OnReticleNeedsUpdate;                              // 0xB88(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, Protected, NativeAccessSpecifierProtected)
	struct FVALDATA_PremiumStoreEntitlements     PremiumStoreEntitlements;                          // 0xB98(0x50)(Net, RepNotify, Protected, NativeAccessSpecifierProtected)
	class AValeriaCharacter*                     ValeriaCharacter;                                  // 0xBE8(0x8)(ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class AValeriaVillagerCharacter*             InteractingVillager;                               // 0xBF0(0x8)(ZeroConstructor, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UBurstNetSpeedComponent*               BurstNetSpeed;                                     // 0xBF8(0x8)(Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UDebugCheatComponent*                  Cheater;                                           // 0xC00(0x8)(Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UTrackingComponent*                    TrackingComponent;                                 // 0xC08(0x8)(Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UDebugServerActorsComponent*           DebugServerActors;                                 // 0xC10(0x8)(Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UReplicationTrackingComponent*         ReplicationTracking;                               // 0xC18(0x8)(Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UVAL_BingoBoardgamePlayerComponent*    BingoBoardgamePlayerComponent;                     // 0xC20(0x8)(Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UVAL_RewardsPlayerComponent*           RewardsPlayerComponent;                            // 0xC28(0x8)(Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UVAL_EncyclopediaManagerComponent*     EncyclopediaManagerComponent;                      // 0xC30(0x8)(Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UVAL_DialogueRoomManagerComponent*     DialogueRoomManagerComponent;                      // 0xC38(0x8)(Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UDebugSpawningComponent*               DebugSpawning;                                     // 0xC40(0x8)(Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_3754[0x1B0];                                   // Fixing Size After Last Property  [ Dumper-7 ]
	class UValeriaGameInstance*                  GameInst;                                          // 0xDF8(0x8)(ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FMusicState                           MusicState;                                        // 0xE00(0x18)(BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	uint8                                        Pad_3755[0x58];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class USpawnOnFoliageManager*                SpawnOnFoliageManager;                             // 0xE70(0x8)(ZeroConstructor, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	FMulticastInlineDelegateProperty_            OnCinematicModeSet;                                // 0xE78(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                        Pad_3756[0x18];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	FMulticastInlineDelegateProperty_            OnItemPurcahsedFrom3DStore;                        // 0xEA0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnRecipeCrafted;                                   // 0xEB0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                        Pad_3757[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UTeleportTravelConfigAsset*            InitialTeleportAsset;                              // 0xEC8(0x8)(ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FGuid                                 InitialTeleportTargetAccountID;                    // 0xED0(0x10)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UExperiencePackageConfig*              ServerExpPkg;                                      // 0xEE0(0x8)(ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UVAL_NewsInboxComponent*               NewsInbox;                                         // 0xEE8(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3758[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("ValeriaPlayerController");
		return Clss;
	}

	bool WasPremiumStoreEntitlementSeen(struct FGuid& InID);
	bool UseOrSelectItem(const struct FBagSlotLocation& InLocation);
	void UpgradeOrPurchaseHouse(int32 InHouseConfigId);
	void UpdatePlayerStateMeshRelevancy();
	void UpdateAlterationOnPlaceable(class AActor* InActor, int32 InPersistId);
	void UnstuckPlayerCharacter();
	void UnlockPawnInput(const struct FGuid& InIDRequestingUnlock);
	void UnlockHousingPlot(int32 InPersistId);
	void UnKickHousingVisitor(class AHousingOwnershipActor* InHousingOwnershipActor, struct FGuid& InVisitorPlayerId);
	void TriggerFocusUpgradedEvent(enum class EVAL_ShrineType InShrineType, float InUpgradeAmount);
	void TravelToMap(const class FString& InDestination);
	void TeleportToLookAt();
	void StartPerfCapture();
	void StartMatchmaking(struct FOSSVAL_MatchmakingRequestContext& InContext);
	void SplitStackOfItemSlot(const struct FBagSlotLocation& InLocation);
	void SetShowVillagerDebugInfo(bool InShow);
	void SetIgnoreGiftTimer(bool InIgnore);
	void SetIgnoreFriendLvlReqsForDynamicGiftPrefs(bool InIgnore);
	void SetIgnoreDialogueDailyLimit(bool InIgnore);
	void SetHousingPermission(class AHousingOwnershipActor* InHousingOwnershipActor, struct FHouseOwnershipTitle& InPermission);
	void ServerOnly_DisconnectWithMessage(class FText& InMessage);
	void ServerNetworkProfile(bool InState);
	void Server_VAkEventLocation(class AActor* InActorHit, bool InWasDamaged, int32 InSearchRadius, TSoftObjectPtr<class UVAL_ItemTypeDefinitionAsset>& InHeldItemType, const struct FVector& InLocation, class APlayerController* InExceptionController, class AActor* InExtInstigator);
	void Server_HousingOwnerProgressTransitiveDecor(class AHousingOwnershipActor* InHOA, struct FSessionActorId& InID);
	void SendGraphicsSettingsTelemetryEvent(bool InbNotChangedByUser);
	void SendGameSettingsTelemetryEvent();
	void SendErrorModal(class FName InError);
	void SendErrorMessageText(class FText& InError);
	void SendErrorMessageComplex(const struct FErrorMessage& InError);
	void SendErrorMessage(class FName InErrorCode);
	void SellItem(const struct FBagSlotLocation& InInventoryLocation, int32 InAmount);
	void SelectRecipeForCrafter(class UCrafterComponent* InCrafter, int32 InRecipeConfigId, struct FRecipePlayerOptions& InRecipeOptions);
	void RpcServerTeleportToPlayerHouse(const struct FUniqueNetIdRepl& InUserId);
	void RpcServer_UpgradeOrPurchaseHouse(int32 InHouseConfigId);
	void RpcServer_UpdateAlterationOnPlaceable(class AActor* InActor, int32 InPersistId);
	void RpcServer_UnlockHousingPlot(class AHousingOwnershipActor* InHousingOwnershipActor, int32 InPersistId);
	void RpcServer_ToggleReturnHomeCooldownEnabled();
	void RpcServer_TeleportToPlayerHouseKiosk();
	void RpcServer_StartLocalLogin(const struct FUniqueNetIdRepl& InUniqueId, const class FString& InFakePIELogin);
	void RpcServer_SprayCosmetic(TSoftObjectPtr<class UVAL_SprayDataAsset>& InSpray);
	void RpcServer_SplitStackOfItemSlot(const struct FBagSlotLocation& InLocation);
	void RpcServer_SetShowVillagerDebugInfo(bool InShow);
	void RpcServer_SetPartyState(enum class EVAL_PartyManagerState InNewState);
	void RpcServer_SetNetworkProfiling(bool InStatus);
	void RpcServer_SetIgnoreGiftTimer(bool InIgnore);
	void RpcServer_SetIgnoreDialogueDailyLimit(bool InIgnore);
	void RpcServer_SetAllowEatingWhenFull(bool InAllowEatingWhenFull);
	void RpcServer_SelectRecipeForCrafter(class UCrafterComponent* InCrafter, int32 InRecipeConfigId, struct FRecipePlayerOptions& InRecipeOptions);
	void RpcServer_ResetAssignedEmotes();
	void RpcServer_RequestUnstuck();
	void RpcServer_RequestUnKickHousingVisitor(class AHousingOwnershipActor* InHousingOwnershipActor, struct FGuid& InVisitorPlayerId);
	void RpcServer_RequestReturnHome();
	void RpcServer_RequestKickHousingVisitor(class AHousingOwnershipActor* InHousingOwnershipActor, struct FGuid& InVisitorPlayerId);
	void RpcServer_RequestHousingSlotAction(class AHousingOwnershipActor* InHousingOwnershipActor, struct FHousingSlotActionParams& InActionParams);
	void RpcServer_RequestHousingPermissionChange(class AHousingOwnershipActor* InHousingOwnershipActor, struct FHouseOwnershipTitle& InPermission);
	void RpcServer_RemoveWallpaper(const struct FWallpaperItem& InItem, class UWallpaperComponent* InWall);
	void RpcServer_ReliableServerUpdateCamera(const struct FVector_NetQuantize& InCamLoc, int32 InCamPitchAndYaw);
	void RpcServer_RecordSessionStart(const class FString& InOsVersion, const class FString& InCpuVersion, const class FString& InGpuVersion);
	void RpcServer_RecordMapTravelTelemetry(struct FTelemetryClientDataForMapTravelLoadTime& InTravelInfo);
	void RpcServer_PingServer(int64 InClientTimestampMs);
	void RpcServer_PerformGardenAction_Unreliable(class UGardenComponent* InGarden, const struct FGardenActionParams& InParams);
	void RpcServer_PerformGardenAction(class UGardenComponent* InGarden, const struct FGardenActionParams& InParams);
	void RpcServer_PerformClientAuthoritativeHit(int32 InProjectileId, class AActor* InHitActor, TArray<class AActor*>& InAOEHitActors);
	void RpcServer_OnCharacterSpawned();
	void RpcServer_MoveToNewStoragePool(struct FValeriaItem& InItem, enum class EStoragePoolType InOriginalStoragePoolType, enum class EStoragePoolType InNewStoragePoolType);
	void RpcServer_MoveStorageToItemSlot(struct FValeriaItem& InItem, const struct FBagSlotLocation& InSlotLocation, enum class EStoragePoolType InStoragePool);
	void RpcServer_MoveItemSlotToStorage(const struct FBagSlotLocation& InSlotLocation, int32 InAmount, enum class EStoragePoolType InStoragePool);
	void RpcServer_MoveItemSlotToInventory_FallbackToStorage(class UInventoryComponent* InOldInventory, const struct FBagSlotLocation& InOldSlotLocation, class UInventoryComponent* InNewInventory, const struct FBagSlotLocation& InNewSlotLocation, int32 InAmount, enum class EStoragePoolType InStoragePool);
	void RpcServer_MoveItemSlotToInventory(class UInventoryComponent* InOldInventory, const struct FBagSlotLocation& InOldSlotLocation, class UInventoryComponent* InNewInventory, const struct FBagSlotLocation& InNewSlotLocation, int32 InAmount);
	void RpcServer_MoveFromPlayerStorageToInventory(struct FValeriaItem& InItem, class UInventoryComponent* InNewInventory, struct FBagSlotLocation& InNewSlotLocation, enum class EStoragePoolType InStoragePool);
	void RpcServer_MoveFromInventoryToPlayerStorage(class UInventoryComponent* InOldInventory, struct FBagSlotLocation& InOldSlotLocation, int32 InAmount, enum class EStoragePoolType InStoragePool);
	void RpcServer_MarkPremiumItemIdSeen(bool InbSeen, struct FGuid& InPremiumItemId);
	void RpcServer_MarkPageAsRead(int32 InbookConfigId, int32 InHighestPageRead);
	void RpcServer_InstrumentInput(int32 InPitch, bool InbPressed);
	void RpcServer_IgnoreFriendLvlReqsForDynamicGiftPrefs(bool InIgnore);
	void RpcServer_HousingPlaceablesBulkDataRequest(class AHousingOwnershipActor* InHome, int32 InIndex);
	void RpcServer_HandleInitialTeleport();
	void RpcServer_GiveGiftTo(class UVillagerGiftReceiverComponent* InGiftReceiver, const struct FBagSlotLocation& InLocation);
	void RpcServer_GatherActors(TArray<class AActor*>& InActorsToGather);
	void RpcServer_GatherActorOrPlaceables(const struct FSessionActorId& InActorId, class AHousingOwnershipActor* InHousingOwner, bool InGatherAllChildren);
	void RpcServer_GatherActor(class AActor* InActor);
	void RpcServer_DiscardItem(const struct FBagSlotLocation& InLocation, int32 InAmountToDiscard);
	void RpcServer_DebugRequestDialogue(class AValeriaVillagerCharacter* InVillager, class FName& InDialogueRowName);
	void RpcServer_DebugDeliverMailEarly();
	void RpcServer_CustomizeItemVariant(class UItemVariantCustomizerComponent* InCustomizer, const struct FBagSlotLocation& InSlot, int32 InTintPersistID, const struct FValeriaItem& InItemFromStorage);
	void RpcServer_ConsumeItem(const struct FBagSlotLocation& InLocation);
	void RpcServer_ConsiderDisconnectCrafterEngagement();
	void RpcServer_CompleteDialogue(class UDialogueComponent* InDialogue, bool InReengage, int32 InDialogueCompleted, bool InExited);
	void RpcServer_CollectItemSlotFrom(class UInventoryComponent* InFromInventory, const struct FBagSlotLocation& InFromSlotLocation, int32 InAmount, class UInventoryComponent* InToInventory);
	void RpcServer_ClearReturnHomeCooldown();
	void RpcServer_ClearAssignedEmotes();
	void RpcServer_ClearAssignedEmote(int32 InWheelIndex);
	void RpcServer_ChangeItemSlot(class UInventoryComponent* InOldInventory, const struct FBagSlotLocation& InOldSlotLocation, class UInventoryComponent* InNewInventory, const struct FBagSlotLocation& InNewSlotLocation, enum class EInventoryAmount InAmountOption);
	void RpcServer_BrowsingRecipe(class UCrafterComponent* InCrafter, int32 InRecipeConfigId);
	void RpcServer_AttemptHousingLevelUp(class ULevelerComponent* InLeveler, bool InIgnoreCost, TArray<struct FValeriaItem>& InItems);
	void RpcServer_AssignEmoteToWheel(int32 InWheelIndex, struct FGuid& InEmoteId);
	void RpcServer_AddItemToQuestGiver(class UQuestGiverComponent* InQuestGiver, const struct FBagSlotLocation& InLocation, int32 InAmount);
	void RpcClient_TriggerFocusUpgradedEvent(enum class EVAL_ShrineType InShrineType, float InUpgradeAmount);
	void RpcClient_TeleportComplete(bool InbHousingPlot, bool InbAtHome);
	void RpcClient_StartDialogue(class UDialogueComponent* InDialogue, const struct FDialogueListToShow& InDialogueToShow, class UVillagerGiftReceiverComponent* InGiftReceiver);
	void RpcClient_ShowIgnoreDialogue(class UDialogueComponent* InDialogue);
	void RpcClient_SendErrorModal(const struct FErrorMessage& InError);
	void RpcClient_SendErrorMessageText(class FText& InError);
	void RpcClient_SendErrorMessage(const struct FErrorMessage& InError);
	void RpcClient_RequestSimpleFade(bool InbFadeIn);
	void RpcClient_RejectUnstuck(float InCooldownSeconds);
	void RpcClient_RejectGardenAction(class UGardenComponent* InGarden, struct FGardenActionParams& InParams, class FName& InRejectReason_ErrorCode);
	void RpcClient_PongClient(int64 InClientTimestampMs, int64 InServerValeriaTimeMs);
	void RpcClient_NotifyOnHousingPlotVisited(const struct FUniqueNetIdRepl& InVisitorID);
	void RpcClient_NotifyLoadingComplete();
	void RpcClient_HousingPlaceablesBulkDataChunkSend(class AHousingOwnershipActor* InHome, TArray<struct FSimpleDecorPlaceable>& InItems);
	void RpcClient_ForceEndDialogue(class UDialogueComponent* InDialogue);
	void RpcClient_CheckDataLayerStatusForTeleport(struct FPrimaryAssetId& InExpPkgId);
	void RpcClient_BroadcastRecipeCrafted(int32 InRecipeIdCrafted);
	void RpcClient_BroadcastItemPurchasedFrom3DStore(struct FValeriaItem& InItemPurchased);
	void RpcClient_AssignExitDialogueTeleportTravelConfigAsset(class UTeleportTravelConfigAsset* InInExitDialogueTeleportTravelConfigAsset);
	void RpcClient_AssignExitDialogueLevelSequence(TSoftObjectPtr<class ULevelSequence>& InInExitDialogueLevelSequence);
	void ReturnHomeStatus(bool InbStatus);
	void ReturnHome();
	void ResetAssignedEmotes();
	void RedeemAchievement(const class FString& InAchievementID);
	void RedeemAccomplishment(const class FString& InAccomplishmentName);
	bool ReadBook(const struct FBagSlotLocation& InLocation);
	void PushLocalStatUpdate(const class FString& InStatName, const class FString& InStatValue);
	void PushBatchedPlayerStats(struct FUniqueNetIdRepl& InUniqueId, TArray<class FString>& InStatNames, TArray<class FString>& InStatValues);
	void PerformHousingSlotAction(class AHousingOwnershipActor* InHousingOwnershipActor, struct FHousingSlotActionParams& InActionParams);
	void PerformGardenAction_Unreliable(class UGardenComponent* InGarden, const struct FGardenActionParams& InParams);
	void PerformGardenAction(class UGardenComponent* InGarden, const struct FGardenActionParams& InParams);
	void OpenSesame();
	void OnServerSettingsChanged();
	void OnReticleNeedsUpdate__DelegateSignature();
	void OnRep_PremiumStoreEntitlements();
	void OnRep_PlotPresence(struct FPlotPresence& InOldPlotPresence);
	void OnPremiumStoreEntitlementsChanged__DelegateSignature(class AValeriaPlayerController* InPC);
	void OnInputSettingsChanged(struct FValeriaInputSettings& InInputSettings);
	void OnHousingPlotVisitorListUpdated__DelegateSignature();
	void OnHousingPlotChanged__DelegateSignature(class AHousingPlotActor* InPlot);
	void OnErrorMessageTextReceived__DelegateSignature(class AValeriaPlayerController* InPC, class FText& InError);
	void OnErrorMessageReceived__DelegateSignature(class AValeriaPlayerController* InPC, struct FErrorMessage& InError);
	void OnCharacterWasSpawned();
	void OnCharacterTeleported__DelegateSignature(class AValeriaPlayerController* InPC);
	void NotifyReticleNeedsUpdate();
	void MoveToNewStoragePool(struct FValeriaItem& InItem, enum class EStoragePoolType InOriginalStoragePoolType, enum class EStoragePoolType InNewStoragePoolType);
	void MoveStorageToItemSlot(struct FValeriaItem& InItem, const struct FBagSlotLocation& InSlotLocation, enum class EStoragePoolType InStoragePool);
	void MoveItemSlotToStorage(const struct FBagSlotLocation& InSlotLocation, int32 InAmount, enum class EStoragePoolType InStoragePoolType);
	void MoveItemSlotToInventory_FallbackToStorage(class UInventoryComponent* InOldInventory, const struct FBagSlotLocation& InOldSlotLocation, class UInventoryComponent* InNewInventory, const struct FBagSlotLocation& InNewSlotLocation, int32 InAmount, enum class EStoragePoolType InStoragePool);
	void MoveItemSlotToInventory(class UInventoryComponent* InOldInventory, const struct FBagSlotLocation& InOldSlotLocation, class UInventoryComponent* InNewInventory, const struct FBagSlotLocation& InNewSlotLocation, int32 InAmount);
	void MoveFromPlayerStorageToInventory(struct FValeriaItem& InItem, class UInventoryComponent* InNewInventory, struct FBagSlotLocation& InNewSlotLocation, enum class EStoragePoolType InStoragePool);
	void MoveFromInventoryToPlayerStorage(class UInventoryComponent* InOldInventory, struct FBagSlotLocation& InOldSlotLocation, int32 InAmount, enum class EStoragePoolType InStoragePool);
	void MasterKeyEnable();
	void MasterKeyDisable();
	void MarkPageAsRead(int32 InbookConfigId, int32 InHighestPageRead);
	void MarkAchievementUnlocked(const class FString& InAchievementID);
	void MarkAchievementRedeemed(const class FString& InAchievementID, bool InbWasSuccessful);
	struct FGuid LockPawnInput(class UObject* InObjectRequestingLock);
	void KickHousingVisitor(class AHousingOwnershipActor* InHousingOwnershipActor, struct FGuid& InVisitorPlayerId);
	bool IsPawnInputLocked();
	bool IsOnHousingPlot();
	bool IsInCinematicMode();
	bool IsAtHome();
	void HidePlayersInCinematicModeEvent(bool InbHidePlayers);
	void HidePlayersInCinematicMode(bool InbHidePlayers);
	void HandleOnPartyStateChanged(enum class EVAL_PartyManagerState InState);
	void HandleGenericDisconnect(class UWorld* InInWorld, class UNetDriver* InNetDriver);
	void GotoPerfLocation(int32 InIndex);
	void GodModeEnable();
	void GodModeDisable();
	void GiveGiftTo(class UVillagerGiftReceiverComponent* InGiftReceiver, const struct FBagSlotLocation& InLocation);
	struct FGuid GetValeriaPlayerId();
	class AValeriaCharacter* GetValeriaCharacter();
	class UTrackingComponent* GetTrackingComponent();
	float GetSecondsUntilReturnHomeIsAvailable();
	class UVAL_RewardsPlayerComponent* GetRewardsPlayerComponent();
	int64 GetReturnHomeCooldownEndTime();
	class UReplicationTrackingComponent* GetReplicationTracking();
	class AHousingPlotActor* GetOccupiedHousingPlot();
	double GetNetLastReceivedDeltaSeconds();
	class AValeriaVillagerCharacter* GetInteractingVillager();
	class UVAL_EncyclopediaManagerComponent* GetEncyclopediaManagerComponent();
	class UVAL_DialogueRoomManagerComponent* GetDialogueRoomManagerComponent();
	class UDebugCheatComponent* GetDebugCheat();
	class AHousingPlotActor* GetCurrentHousingPlot();
	class FString GetConnectedServerAddressWithPort();
	class UVAL_BingoBoardgamePlayerComponent* GetBingoBoardgamePlayerComponent();
	void GatherPlaceableActor(class AActor* InActor, bool InGatherAllChildren);
	void GatherActors(TArray<class AActor*>& InActorsToGather);
	bool GatherActorHasChildrenAnchored(class AActor* InActor);
	void GatherActor(class AActor* InActor);
	class UInteractableComponent* FindBestInteractable();
	void EmoteCheat(const class FString& InCommand);
	void DumpPlayerTags();
	void DiscardItem(const struct FBagSlotLocation& InLocation, int32 InAmountToDiscard);
	void DebugRequestDialogue(class FName& InDialogueName);
	void DebugCheat(const struct FDebugCheat& InCheat);
	void CustomizeItemVariant(class UItemVariantCustomizerComponent* InCustomizer, const struct FBagSlotLocation& InSlot, int32 InTintPersistID, const struct FValeriaItem& InItemFromStorage);
	bool ConsumeItem(const struct FBagSlotLocation& InLocation);
	void CompleteDialogue(class UDialogueComponent* InDialogue, bool InReengage, int32 InDialogueCompleted, bool InExited);
	void CollectItemSlotFrom(class UInventoryComponent* InFromInventory, const struct FBagSlotLocation& InFromSlotLocation, int32 InAmount, class UInventoryComponent* InToInventory);
	void Client_RouteVAkEvent(class AActor* InActorHit, bool InWasDamaged, TSoftObjectPtr<class UVAL_ItemTypeDefinitionAsset>& InHeldItemType, const struct FVector& InLocation, class AActor* InExtInstigator);
	void Client_HousingOwnerProgressTransitiveDecor(class AHousingOwnershipActor* InHOA, struct FSessionActorId& InID);
	void Client_Camera_TickInspoState(float InDeltaTime);
	void Client_Camera_AdvanceInspoSubState();
	void ClearAssignedEmotes();
	void ClearAssignedEmote(int32 InWheelIndex);
	void ChangePlayerStateToSpectator();
	void ChangePlayerStateToPlayer();
	void ChangeItemSlot(class UInventoryComponent* InOldInventory, const struct FBagSlotLocation& InOldSlotLocation, class UInventoryComponent* InNewInventory, const struct FBagSlotLocation& InNewSlotLocation, enum class EInventoryAmount InAmountOption);
	void ChangeCoinsCheat(int32 InAmount);
	bool CanActorBeGathered(class AActor* InActor, class FText* InError);
	void BrowsingRecipe(class UCrafterComponent* InCrafter, int32 InRecipeConfigId);
	void AssignEmoteToWheel(int32 InWheelIndex, struct FGuid& InEmoteId);
	void AddItemToQuestGiver(class UQuestGiverComponent* InQuestGiver, const struct FBagSlotLocation& InLocation, int32 InAmount);
};

// 0x28 (0xC8 - 0xA0)
// Class Palia.ValeriaPlotItemRepComponent
class UValeriaPlotItemRepComponent : public UActorComponent
{
public:
	uint8                                        Pad_3765[0x20];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UValeriaReplicationGraph*              RepGraph;                                          // 0xC0(0x8)(ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("ValeriaPlotItemRepComponent");
		return Clss;
	}

};

// 0xD0 (0x360 - 0x290)
// Class Palia.ValeriaProjectile
class AValeriaProjectile : public AActor
{
public:
	class USphereComponent*                      CollisionComponent;                                // 0x290(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UProjectileMovementComponent*          ProjectileMovementComponent;                       // 0x298(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, EditConst, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ProjectileLifetime;                                // 0x2A0(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ProjectilePhysicsImpulsePower;                     // 0x2A4(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        TimeBeforeGravityKicksIn;                          // 0x2A8(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        GravityScaleWhenItKicksIn;                         // 0x2AC(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                NameForAnalytics;                                  // 0x2B0(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bInstantCatchTrappedInsects;                       // 0x2C0(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3769[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	FMulticastInlineDelegateProperty_            OnHitValidTargetClientSide;                        // 0x2C8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnHitValidTargetServerSide;                        // 0x2D8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	class UValeriaGASComponent*                  ValeriaGAS;                                        // 0x2E8(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, EditConst, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UGameplayEffect>           EffectOnHit;                                       // 0x2F0(0x8)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        ProjectileId;                                      // 0x2F8(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_376A[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UVAL_ItemTypeDefinitionAsset*          ToolFiredBy;                                       // 0x300(0x8)(ZeroConstructor, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UVAL_ItemTypeDefinitionAsset> AmmoItemType;                                      // 0x308(0x30)(Transient, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bHasProjectileHitAnything;                         // 0x338(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_376B[0x17];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class AActor*                                HitActorAccordingToServer;                         // 0x350(0x8)(ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_376C[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("ValeriaProjectile");
		return Clss;
	}

	bool ShouldIgnoreProjectile();
	void Server_PerformClientAuthoritativeHit(class AActor* InHitActor, TArray<class AActor*>& InAOEHitActors);
	void RpcClient_DisplayHit(class AActor* InHitActor, const struct FVector& InHitLocation);
	void PauseProjectile();
	void NotifyOverlappedParticipationBox();
	void Client_PerformClientAuthoritativeHit(class AActor* InHitActor, TArray<class AActor*>& InAOEHitActors);
};

// 0x18 (0x68 - 0x50)
// Class Palia.ValeriaReplicationGraphNode_TrackingNode_ForConnection
class UValeriaReplicationGraphNode_TrackingNode_ForConnection : public UReplicationGraphNode
{
public:
	class AValeriaPlayerController*              Player;                                            // 0x50(0x8)(ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class AActor*>                        TrackedActorsForConnection;                        // 0x58(0x10)(ZeroConstructor, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("ValeriaReplicationGraphNode_TrackingNode_ForConnection");
		return Clss;
	}

};

// 0x0 (0x50 - 0x50)
// Class Palia.ValeriaReplicationGraphNode_HousingPlot
class UValeriaReplicationGraphNode_HousingPlot : public UReplicationGraphNode
{
public:

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("ValeriaReplicationGraphNode_HousingPlot");
		return Clss;
	}

};

// 0x0 (0xD0 - 0xD0)
// Class Palia.ValeriaReplicationGraphNode_AlwaysRelevantForConnection
class UValeriaReplicationGraphNode_AlwaysRelevantForConnection : public UReplicationGraphNode_ActorList
{
public:

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("ValeriaReplicationGraphNode_AlwaysRelevantForConnection");
		return Clss;
	}

};

// 0x240 (0x7B0 - 0x570)
// Class Palia.ValeriaReplicationGraph
class UValeriaReplicationGraph : public UReplicationGraph
{
public:
	class UReplicationGraphNode_GridSpatialization2D* GridNode;                                          // 0x570(0x8)(ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UValeriaReplicationGraphNode_HousingPlot* HousingPlotNode;                                   // 0x578(0x8)(ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UReplicationGraphNode_ActorList*       AlwaysRelNode;                                     // 0x580(0x8)(ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_376F[0x128];                                   // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class AActor*>                        AllTrackableActors;                                // 0x6B0(0x10)(ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	TArray<class AActor*>                        DelayedConnectionRelevantActors;                   // 0x6C0(0x10)(ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	TArray<class AActor*>                        PositionUpdatedHousingPlotItems;                   // 0x6D0(0x10)(ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	TMap<uint32, struct FValeriaPlotReplicationData> HousingPlotActors;                                 // 0x6E0(0x50)(Protected, NativeAccessSpecifierProtected)
	TArray<class AHousingPlotActor*>             AllHousingPlots;                                   // 0x730(0x10)(ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	TMap<class AActor*, class AHousingPlotActor*> ActorToHousingPlotMapping;                         // 0x740(0x50)(Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_3771[0x20];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("ValeriaReplicationGraph");
		return Clss;
	}

};

// 0x30 (0x58 - 0x28)
// Class Palia.ValeriaSaveGame
class UValeriaSaveGame : public USaveGame
{
public:
	class FString                                LoginName;                                         // 0x28(0x10)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                LobbyUsername;                                     // 0x38(0x10)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                LobbyPassword;                                     // 0x48(0x10)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("ValeriaSaveGame");
		return Clss;
	}

};

// 0x40 (0x320 - 0x2E0)
// Class Palia.ValeriaSpatialAudioVolume
class AValeriaSpatialAudioVolume : public AAkSpatialAudioVolume
{
public:
	enum class ESpatialVolumeType                VolumeType;                                        // 0x2E0(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ESpatialVolumePriority            EPriority;                                         // 0x2E1(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_377E[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        Priority;                                          // 0x2E4(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        TransmissionLoss;                                  // 0x2E8(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_377F[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UAkAudioEvent*                         AkAudioEvent;                                      // 0x2F0(0x8)(Edit, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAkAuxBus*                             AuxBus;                                            // 0x2F8(0x8)(Edit, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        VerbSendLeveldB;                                   // 0x300(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3780[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class AValeriaSpatialAudioVolume*            VolumeToOverride;                                  // 0x308(0x8)(Edit, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAkAuxBus*                             OriginalAuxBus;                                    // 0x310(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        OriginalSendLevel;                                 // 0x318(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3781[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("ValeriaSpatialAudioVolume");
		return Clss;
	}

	void UpdateRoom();
	void SwitchVerb();
	void ResetVerb();
	bool IsPawnRelevant(class APawn* InPawn);
	void HandleEndOverlap(class UPrimitiveComponent* InOverlappedComponent, class AActor* InOtherActor, class UPrimitiveComponent* InOtherComp, int32 InOtherBodyIndex);
	void HandleBeginOverlap(class UPrimitiveComponent* InOverlappedComponent, class AActor* InOtherActor, class UPrimitiveComponent* InOtherComp, int32 InOtherBodyIndex, bool InbFromSweep, struct FHitResult& InSweepResult);
	float GetPriority();
	bool DoesEncompassPoint(const struct FVector& InPoint, float InSphereRadius);
	void CheckVerb();
};

// 0x18 (0x2A8 - 0x290)
// Class Palia.ValeriaSplineBatchGenerator
class AValeriaSplineBatchGenerator : public AActor
{
public:
	class USplineComponent*                      Spline;                                            // 0x290(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class AActor*>                        GeneratedActors;                                   // 0x298(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, DuplicateTransient, NativeAccessSpecifierPublic)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("ValeriaSplineBatchGenerator");
		return Clss;
	}

};

// 0x60 (0x400 - 0x3A0)
// Class Palia.ValeriaSpringArmComponent
class UValeriaSpringArmComponent : public USpringArmComponent
{
public:
	bool                                         bOverrideDefaultCollisionTest;                     // 0x3A0(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3784[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        CameraZBlendRate;                                  // 0x3A4(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector2D                             CameraZBlendMaxDiscrepancy;                        // 0x3A8(0x10)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bCameraZBlendMatchDirectionOfVelocity;             // 0x3B8(0x1)(Edit, BlueprintVisible, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIsClientOnly;                                     // 0x3B9(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIsClientViewTargetOnly;                           // 0x3BA(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3785[0x45];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("ValeriaSpringArmComponent");
		return Clss;
	}

	void RestoreTargetOffset(float InBlendTime);
	void BlendToTargetOffset(struct FVector& InNewTargetOffset, float InBlendTime);
};

// 0x10 (0x2A0 - 0x290)
// Class Palia.ValeriaTargetPoint
class AValeriaTargetPoint : public ATargetPoint
{
public:
	bool                                         bOverrideTargetPointLabelName;                     // 0x290(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3786[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FName                                  TargetPointLabelName;                              // 0x294(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3787[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("ValeriaTargetPoint");
		return Clss;
	}

	class FName GetTargetPointLabelName();
};

// 0x38 (0x68 - 0x30)
// Class Palia.ValeriaTimeManager
class UValeriaTimeManager : public UGameInstanceSubsystem
{
public:
	FMulticastInlineDelegateProperty_            OnServerDailyReset;                                // 0x30(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnServerWeeklyReset;                               // 0x40(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FTimerHandle                          PostVALTimerManagerInitializedTimerHandle;         // 0x50(0x8)(NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVAL_TimerHandle                      DailyResetTimerHandle;                             // 0x58(0x8)(NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVAL_TimerHandle                      WeeklyResetTimerHandle;                            // 0x60(0x8)(NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("ValeriaTimeManager");
		return Clss;
	}

	void TryInitializePostVALTimerManagerInitialized();
	bool IsWithinTimeOfDayFilter(const struct FTimeOfDayFilter& InFilter);
	bool IsValeriaTimeValid();
	void HandleServerWeeklyReset();
	void HandleServerDailyReset();
	void HandlePreServerWeeklyReset(struct FVAL_TimerHandle* InTimerHandle);
	void HandlePreServerDailyReset(struct FVAL_TimerHandle* InTimerHandle);
	struct FWeeklyEventConfig GetWeeklyResetTime();
	int32 GetTotalSecondsInADay();
	int64 GetTimeWarpSecs();
	float GetTimeOfDayLerpAt(int64 InCurrTimestampMs);
	float GetTimeOfDayLerp();
	int32 GetSecondsSinceTodayStarted();
	int32 GetRealTimeSecondsInOneGameHour();
	int64 GetGlobalTimestampMs();
	int32 GetDailyResetHour();
	int32 GetCurrentDay();
	struct FClockTimeInValeria GetClockTimeOfDay();
	struct FClockTimeInValeria GetClockTime();
	float ConvertValeriaTimeDurationToRealSeconds(float InValeriaHours);
	int64 ConvertToGlobalTimestampMs(const struct FClockTimeInValeria& InClockTime);
	struct FClockTimeInValeria ConvertToClockTime(const struct FInt64Split& InTimestampMs);
	struct FDateTime ConvertTimestampMsToRealDateTime(int64 InTimestampMs);
	int32 CalcHoursFromFilterStart(const struct FTimeOfDayFilter& InFilter);
};

// 0x1D0 (0x630 - 0x460)
// Class Palia.ValeriaVillagerCharacter
class AValeriaVillagerCharacter : public AValeriaMoveablePawn
{
public:
	FMulticastInlineDelegateProperty_            OnHiddenChanged;                                   // 0x460(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnEngagedChanged;                                  // 0x470(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnVillagerActionChangedDel;                        // 0x480(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnVillagerConfigIdChangedDel;                      // 0x490(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnVillagerAbsentStateChanged;                      // 0x4A0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FVillagerActionInfo                   CurrentActionInfo;                                 // 0x4B0(0x80)(BlueprintVisible, BlueprintReadOnly, Net, RepNotify, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_37AD[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         bQueuedForDespawn;                                 // 0x540(0x1)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	enum class EVillagerState                    CurrentState;                                      // 0x541(0x1)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_37AE[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FGuid                                 VillagerGuid;                                      // 0x544(0x10)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bIsEngaged;                                        // 0x554(0x1)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bAbsent;                                           // 0x555(0x1)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_37AF[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class AValeriaTargetPoint*                   OriginalSpawnPoint;                                // 0x558(0x8)(Net, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bAllowChangeOfFocusDuringDialogue;                 // 0x560(0x1)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_37B0[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        VillagerConfigId;                                  // 0x564(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UVillagerCostumeDataAsset*             Costume;                                           // 0x568(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, DisableEditOnInstance, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bCinematicsOnly;                                   // 0x570(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	enum class EWorldLocationContext             SpawnContext;                                      // 0x571(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_37B2[0x6];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class ULimitedEventDataAsset*                SpawnContextEvent;                                 // 0x578(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        WalkOutDuration;                                   // 0x580(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_37B3[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UDataTable*                            AnimMappings;                                      // 0x588(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TMap<class FName, class UDataTable*>         ExtraAnimMappings;                                 // 0x590(0x50)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	class FName                                  LastUsedAnimMappingName;                           // 0x5E0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bLastUsedAnimWasBlendSpace;                        // 0x5E8(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_37B4[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UDataTable*                            AudioMappings;                                     // 0x5F0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UPersistComponent*                     Persist;                                           // 0x5F8(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UDialogueComponent*                    Dialogue;                                          // 0x600(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UVillagerStoreInteractableComponent*   VillagerStore;                                     // 0x608(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UEquipmentComponent*                   EquipmentComponent;                                // 0x610(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UVillagerGiftReceiverComponent*        GiftReceiver;                                      // 0x618(0x8)(Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UAICombatStateComponent*               CombatState;                                       // 0x620(0x8)(Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UActorTagComponent*                    TagComponent;                                      // 0x628(0x8)(Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("ValeriaVillagerCharacter");
		return Clss;
	}

	bool WantsMapIndicator();
	void TryDespawnOnRepeat();
	bool ShouldAllowChangeOfFocusWhenEngaged();
	void SetVillagerConfigId(int32 InInVillagerConfigId);
	void Server_SetCurrentAction(const struct FVillagerActionInfo& InInActionInfo);
	void RpcMulticast_NotifyLongDespawnQueued(float InInWalkOutDuration);
	void PlayAudioByMapping(class FName& InMappingName);
	void OnRep_VillagerConfigId();
	void OnRep_CurrentActionInfo();
	void OnRep_Costume();
	void OnRep_bAbsent();
	void NotifyVillagerConfigIdChanged();
	void NotifyAbsentStateChanged();
	bool IsEngaged();
	bool IsAbsent();
	void HandlePropMontageFinish(class UAnimMontage* InMontage, bool InbInterrupted);
	class UVillagerStoreInteractableComponent* GetVillagerStore();
	class UVillagerGiftReceiverComponent* GetVillagerGiftReceiver();
	int32 GetVillagerConfigId();
	class UActorTagComponent* GetTagComponent();
	class UEquipmentComponent* GetEquipment();
	class UDialogueComponent* GetDialogue();
	struct FVillagerActionInfo GetCurrentActionInfo();
	class UAICombatStateComponent* GetCombatState();
	class UDataTable* GetAnimMappings(class FName& InMappingQualifier);
	void ForceStartDialogueWithPlayer(class AValeriaCharacter* InCharacter, bool InbSkipFade);
	void BPIE_ReceivedLongDespawnInfo(float InWalkOutDuration);
	void BPIE_PostCurrentActionInfoChanged(struct FVillagerActionInfo& InInActionInfo);
	void BPIE_ApplyVillagerCostume(class UVillagerCostumeDataAsset* InCostumeDA);
	void AudioPlayRequested(struct FAudioMappingConfig& InAudioConfig);
};

// 0x220 (0x5D8 - 0x3B8)
// Class Palia.ValeriaVillagerController
class AValeriaVillagerController : public AAIController
{
public:
	class UBlackboardData*                       BlackboardData;                                    // 0x3B8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	FMulticastInlineDelegateProperty_            OnCurrentActivityChanged;                          // 0x3C0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnVillagerActivityStatusChanged;                   // 0x3D0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	class FString                                CachedLevelName;                                   // 0x3E0(0x10)(ZeroConstructor, Transient, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<struct FEngagedPlayer>                EngagedPlayers;                                    // 0x3F0(0x10)(ZeroConstructor, Transient, NativeAccessSpecifierPrivate)
	struct FTimerHandle                          UpdateActivityTickTimerHandle;                     // 0x400(0x8)(Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class AValeriaVillagerCharacter*             CachedVillagerCharacter;                           // 0x408(0x8)(ZeroConstructor, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UBehaviorTree*                         DefaultBehaviorTree;                               // 0x410(0x8)(ZeroConstructor, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UVillagerMasterScheduleConfig*         MasterScheduleConfig;                              // 0x418(0x8)(ZeroConstructor, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UVillagerScheduleConfig*               OverrideScheduleConfig;                            // 0x420(0x8)(ZeroConstructor, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FVillagerActiveActivity               ActiveActivity;                                    // 0x428(0x190)(Transient, NativeAccessSpecifierPrivate)
	enum class EVillagerActivityStatus           CurrentActivityStatus;                             // 0x5B8(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bHasMadeActivityChange;                            // 0x5B9(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_37C1[0x6];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FRotator                              PreFocusRotation;                                  // 0x5C0(0x18)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("ValeriaVillagerController");
		return Clss;
	}

	bool UpdateActivity();
	bool StartNewActivity(struct FVillagerScheduleActivity& InInScheduleActivity);
	void SetCurrentActivityStatus(enum class EVillagerActivityStatus InNewActivityStatus);
	void OnUpdateActivityTimerTicked();
	bool HasValidScheduleActivity();
	class AValeriaVillagerCharacter* GetVillagerCharacter();
	struct FVillagerScheduleActivity GetCurrentScheduleActivity();
	enum class EVillagerActivityStatus GetCurrentActivityStatus();
	struct FVillagerActionInfo GetCurrentActionInfo();
	bool GetCurrentActionAnimationMappingConfig(struct FAnimationMappingConfig* InOutAnimationMappingConfig);
	bool GetBestScheduleActivity(struct FVillagerScheduleActivity* InOutScheduleActivity);
	struct FVillagerActiveActivity GetActiveActivity();
	bool DoesNeedToChangeActivity();
	void AssignVillagerMasterScheduleConfig(class UVillagerMasterScheduleConfig* InInVillagerMasterScheduleConfig);
	void AssignOverrideScheduleConfig(class UVillagerScheduleConfig* InInOverrideScheduleConfig);
	void AssignDefaultBehaviorTree(class UBehaviorTree* InInBehaviorTree);
};

// 0xA8 (0x148 - 0xA0)
// Class Palia.ValeriaWaterBodyComponent
class UValeriaWaterBodyComponent : public UActorComponent
{
public:
	FMulticastInlineDelegateProperty_            OnDespawnedForLocalPlayer;                         // 0xA0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	class FName                                  WaterType;                                         // 0xB0(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         CanRefillWaterOn;                                  // 0xB8(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_37C3[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	FMulticastInlineDelegateProperty_            OnFishingFinished;                                 // 0xC0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	float                                        SecondsToDestroyAfterFirstCatch;                   // 0xD0(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bCoopSpawningEnabled;                              // 0xD4(0x1)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_37C4[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FTimerHandle                          DestroyAfterSecsTimerHandle;                       // 0xD8(0x8)(NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSet<struct FGuid>                           PlayerIdsThatFishedHere;                           // 0xE0(0x50)(Transient, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_37C5[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	struct FTimerHandle                          WaitForWorldPartitionToLoadTimerHandle;            // 0x140(0x8)(Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("ValeriaWaterBodyComponent");
		return Clss;
	}

	void DestroyWaterBody();
};

// 0x28 (0x60 - 0x38)
// Class Palia.WeatherConfigsManager
class UWeatherConfigsManager : public UDeveloperSettings
{
public:
	struct FSoftObjectPath                       WeatherDataTable;                                  // 0x38(0x20)(Edit, ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIsWeatherDisabled;                                // 0x58(0x1)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_37C6[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("WeatherConfigsManager");
		return Clss;
	}

};

// 0x1B0 (0x1F0 - 0x40)
// Class Palia.ValeriaWeather
class UValeriaWeather : public UTickableWorldSubsystem
{
public:
	FMulticastInlineDelegateProperty_            WeatherChanged;                                    // 0x40(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            WeatherPendingChange;                              // 0x50(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                        Pad_37CF[0x188];                                   // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         bIsWeatherEnabled;                                 // 0x1E8(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_37D0[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("ValeriaWeather");
		return Clss;
	}

	void SetWorldOverrideName(class FName InWorldName);
	void SetWeatherStateOverride(class FName InState);
	void NotifyWorldWeatherPendingChange__DelegateSignature(const struct FWeatherStateProperties& InPendingState, int32 InCountdownTime);
	void NotifyWorldWeatherChanged__DelegateSignature(const struct FWeatherStateProperties& InState);
	struct FWeatherStateProperties LookupWorldWeatherStateAtTimeAndPlace(class FName InPlace, int64 InTime);
	struct FWeatherStateProperties LookupWorldWeatherStateAtTime(int64 InTime);
	bool IsWeatherEnabled();
	class FName GetWorldOverrideName();
	class FName GetWeatherStateOverride();
	TArray<struct FWeatherStateDateTime> GetWeatherStateForecast(struct FWeatherPatternConfig& InConfig, int64 InStartTime, int64 InEndTime);
	TArray<int32> GetValerianDayPeriodWeatherDuration();
	float GetRandomFromCurrentWeatherStateSequence(int32 InSeed, int32 InSequenceIndex);
	float GetRandomFromCurrentWeatherState(int32 InSeed);
	struct FWeatherStateProperties GetCurrentWorldWeatherState(bool InPeekPending);
	struct FWeatherPatternConfig GetCurrentWeatherData();
	class AValEnvironmentManager* GetCurrentEnvManager();
	void ClearWeatherStateOverride();
};

// 0x978 (0x9A8 - 0x30)
// Class Palia.VAL_ApplyCustomizationsToActorProxy
class UVAL_ApplyCustomizationsToActorProxy : public UBlueprintAsyncActionBase
{
public:
	FMulticastInlineDelegateProperty_            Completed;                                         // 0x30(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            Failed;                                            // 0x40(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            Interrupted;                                       // 0x50(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            Stubbed;                                           // 0x60(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                        Pad_37D8[0x938];                                   // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("VAL_ApplyCustomizationsToActorProxy");
		return Clss;
	}

	void OnApplyCustomizationsToActorStubbed__DelegateSignature();
	void OnApplyCustomizationsToActorInterrupted__DelegateSignature();
	void OnApplyCustomizationsToActorFailed__DelegateSignature();
	void OnApplyCustomizationsToActorCompleted__DelegateSignature();
	class UVAL_ApplyCustomizationsToActorProxy* ApplyCustomizationsToActor(class UVAL_CharacterCustomizationComponent* InCharacterCustomizationComponent, bool InValidateLoadout, const struct FVAL_CharacterCustomizationLoadout& InNewLoadout, enum class EVAL_ApplyCustomizationToActorContext InContext);
};

// 0xF0 (0x5D8 - 0x4E8)
// Class Palia.VAL_AssetManager
class UVAL_AssetManager : public UAssetManager
{
public:
	uint8                                        Pad_37D9[0xF0];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("VAL_AssetManager");
		return Clss;
	}

};

// 0x68 (0x98 - 0x30)
// Class Palia.VAL_AsyncActionCreateRandomLoadoutFromItems
class UVAL_AsyncActionCreateRandomLoadoutFromItems : public UBlueprintAsyncActionBase
{
public:
	FMulticastInlineDelegateProperty_            Completed;                                         // 0x30(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                        Pad_37DD[0x58];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("VAL_AsyncActionCreateRandomLoadoutFromItems");
		return Clss;
	}

	void OnCreateRandomLoadoutFromItemsCompleted__DelegateSignature(const struct FVAL_CharacterCustomizationLoadout& InLoadout);
	class UVAL_AsyncActionCreateRandomLoadoutFromItems* CreateRandomLoadoutFromItems(TSet<TSoftObjectPtr<class UVAL_CharacterCustomizationItemBase>>& InItems, enum class EVAL_CharacterBodyType InBodyType);
};

// 0x70 (0xA0 - 0x30)
// Class Palia.VAL_AsyncAction_LoadCharacterCustomizationItems
class UVAL_AsyncAction_LoadCharacterCustomizationItems : public UBlueprintAsyncActionBase
{
public:
	FMulticastInlineDelegateProperty_            Completed;                                         // 0x30(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                        Pad_37E0[0x60];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("VAL_AsyncAction_LoadCharacterCustomizationItems");
		return Clss;
	}

	void OnLoadCharacterCustomizationItems__DelegateSignature(TSet<class UVAL_CharacterCustomizationItemBase*> InLoadedItems);
	class UVAL_AsyncAction_LoadCharacterCustomizationItems* LoadCharacterCustomizationItems(TSet<TSoftObjectPtr<class UVAL_CharacterCustomizationItemBase>>& InItems);
};

// 0x750 (0x780 - 0x30)
// Class Palia.VAL_AsyncActionRegisterCharacterAndCacheRequest
class UVAL_AsyncActionRegisterCharacterAndCacheRequest : public UBlueprintAsyncActionBase
{
public:
	FMulticastInlineDelegateProperty_            Successful;                                        // 0x30(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            Failure;                                           // 0x40(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            InFlight;                                          // 0x50(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                        Pad_37E3[0x720];                                   // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("VAL_AsyncActionRegisterCharacterAndCacheRequest");
		return Clss;
	}

	class UVAL_AsyncActionRegisterCharacterAndCacheRequest* RegisterCharacterAndCacheRequest(class ULocalPlayer* InLP, struct FVALDTOS_MetaCharacterFormat& InCharacterData);
	void OnCharacterRegisteredSuccess__DelegateSignature(const struct FOSSVAL_RegisterCharacterResponse& InResponse);
	void OnCharacterRegisteredInFlight__DelegateSignature(const struct FOSSVAL_RegisterCharacterResponse& InResponse);
	void OnCharacterRegisteredFailure__DelegateSignature(const struct FOSSVAL_RegisterCharacterResponse& InResponse);
};

// 0x28 (0x58 - 0x30)
// Class Palia.VAL_AsyncActionRequestEntitlements
class UVAL_AsyncActionRequestEntitlements : public UBlueprintAsyncActionBase
{
public:
	FMulticastInlineDelegateProperty_            Success;                                           // 0x30(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            Failure;                                           // 0x40(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                        Pad_37E5[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("VAL_AsyncActionRequestEntitlements");
		return Clss;
	}

	class UVAL_AsyncActionRequestEntitlements* RequestEntitlements(class ULocalPlayer* InLP);
	void OnRequestEntitlementSuccess__DelegateSignature();
	void OnRequestEntitlementFailure__DelegateSignature();
};

// 0x38 (0x68 - 0x30)
// Class Palia.VAL_BpAsyncAction_GetMetaCharacterData
class UVAL_BpAsyncAction_GetMetaCharacterData : public UBlueprintAsyncActionBase
{
public:
	FMulticastInlineDelegateProperty_            OnSuccess;                                         // 0x30(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnFailed;                                          // 0x40(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                        Pad_37E8[0x18];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("VAL_BpAsyncAction_GetMetaCharacterData");
		return Clss;
	}

	void OnGetCharactersObtained__DelegateSignature(TArray<struct FVALDTOS_MetaCharacterFormat>& InCharactersFound);
	void OnGetCharactersFailed__DelegateSignature();
	class UVAL_BpAsyncAction_GetMetaCharacterData* GetMetaCharacterData(class ULocalPlayer* InLocalPlayer, struct FGuid& InAccountId);
};

// 0x60 (0x90 - 0x30)
// Class Palia.VAL_BpAsyncAction_Login
class UVAL_BpAsyncAction_Login : public UBlueprintAsyncActionBase
{
public:
	uint8                                        Pad_37EC[0x38];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UObject*                               WorldContextObject;                                // 0x68(0x8)(ZeroConstructor, Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	FMulticastInlineDelegateProperty_            OnSuccess;                                         // 0x70(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, Protected, NativeAccessSpecifierProtected)
	FMulticastInlineDelegateProperty_            OnFailed;                                          // 0x80(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, Protected, NativeAccessSpecifierProtected)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("VAL_BpAsyncAction_Login");
		return Clss;
	}

	void OnLoginCompleted__DelegateSignature();
	class UVAL_BpAsyncAction_Login* Login(class UObject* InInWorldContextObject, int32 InInLocalUserNum, const class FString& InInUsername, const class FString& InInPassword);
};

// 0x58 (0x88 - 0x30)
// Class Palia.VAL_BpAsyncAction_PlayClientLevelSequence
class UVAL_BpAsyncAction_PlayClientLevelSequence : public UBlueprintAsyncActionBase
{
public:
	uint8                                        Pad_37EF[0x18];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	FMulticastInlineDelegateProperty_            OnPlay;                                            // 0x48(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPrivate)
	FMulticastInlineDelegateProperty_            OnPause;                                           // 0x58(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPrivate)
	FMulticastInlineDelegateProperty_            OnStop;                                            // 0x68(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPrivate)
	FMulticastInlineDelegateProperty_            OnFinish;                                          // 0x78(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("VAL_BpAsyncAction_PlayClientLevelSequence");
		return Clss;
	}

	class UVAL_BpAsyncAction_PlayClientLevelSequence* PlayClientLevelSequence(class ALevelSequenceActor* InLevelSequenceActor, float InPlayRate, class FName InPlayerBindingTag, bool InbHideUI);
	void HandleStop();
	void HandlePlay();
	void HandlePause();
	void HandleFinish();
};

// 0x90 (0xC0 - 0x30)
// Class Palia.VAL_BpAsyncAction_PlayLevelSequenceWithLoop
class UVAL_BpAsyncAction_PlayLevelSequenceWithLoop : public UBlueprintAsyncActionBase
{
public:
	uint8                                        Pad_37F3[0x60];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	FMulticastInlineDelegateProperty_            OnPlay;                                            // 0x90(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPrivate)
	FMulticastInlineDelegateProperty_            OnLoop;                                            // 0xA0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPrivate)
	FMulticastInlineDelegateProperty_            OnStop;                                            // 0xB0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("VAL_BpAsyncAction_PlayLevelSequenceWithLoop");
		return Clss;
	}

	class UVAL_BpAsyncAction_PlayLevelSequenceWithLoop* PlayLevelSequenceWithLoop(class ALevelSequenceActor* InLevelSequenceActor, struct FMovieSceneSequencePlaybackParams& InLoopStartParam, struct FMovieSceneSequencePlaybackParams& InLoopEndParam, float InPlayRate);
	void HandleStop();
	void HandlePlay();
	void HandlePause();
	void HandleFinish();
};

// 0x16C8 (0x1768 - 0xA0)
// Class Palia.VAL_CharacterCustomizationComponent
class UVAL_CharacterCustomizationComponent : public UActorComponent
{
public:
	uint8                                        Pad_3805[0x68];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	struct FVAL_CharacterCustomizationLoadout_ReplDTO ReplicatedLoadoutDTO;                              // 0x108(0x244)(Net, RepNotify, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                        Pad_3807[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSoftObjectPtr<class USkeletalMesh>          MeshReplacementWhenCulled;                         // 0x350(0x30)(Edit, BlueprintVisible, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftClassPtr<class UAnimInstance>           AnimInstanceClassReplacementWhenCulled;            // 0x380(0x30)(Edit, BlueprintVisible, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnCustomizationLoadoutApplied;                     // 0x3B0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                        Pad_3808[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	FMulticastInlineDelegateProperty_            OnGliderPropOverridden;                            // 0x3D0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnPetChanged;                                      // 0x3E0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnValidateLoadoutErrorDuringApply;                 // 0x3F0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	class AValeriaMoveablePawn*                  CurrentlyActivePet;                                // 0x400(0x8)(Edit, BlueprintVisible, Net, ZeroConstructor, Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TMap<enum class EVAL_CharacterBodyType, TSoftObjectPtr<class USkeletalMesh>> BodyTypeToSkeletonMap;                             // 0x408(0x50)(UObjectWrapper, NativeAccessSpecifierPrivate)
	uint8                                        Pad_3809[0x18];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TMap<class FName, class UVAL_CharacterCustomization_ScriptObject*> ScriptObjectMap;                                   // 0x470(0x50)(Transient, NativeAccessSpecifierPrivate)
	uint8                                        Pad_380A[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class UObject*>                       LoadedAssets;                                      // 0x4D0(0x10)(ZeroConstructor, Transient, NativeAccessSpecifierPrivate)
	uint8                                        Pad_380B[0x91C];                                   // Fixing Size After Last Property  [ Dumper-7 ]
	class FName                                  MorphTargetName_GenderExpression;                  // 0xDFC(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FName                                  MorphTargetName_MuscularExpression_TypeA;          // 0xE04(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FName                                  MorphTargetName_MuscularExpression_TypeB;          // 0xE0C(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FName                                  MorphTargetName_Thickness_TypeA;                   // 0xE14(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FName                                  MorphTargetName_Thickness_TypeB;                   // 0xE1C(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_380C[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FVAL_CharacterCustomizationLoadout    Loadout;                                           // 0xE28(0x918)(Edit, BlueprintVisible, Protected, NativeAccessSpecifierProtected)
	class UVAL_VoiceSet*                         VoiceSet;                                          // 0x1740(0x8)(ZeroConstructor, Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<class UAkRtpc*>                       ActiveAudioProcessingRtpcs;                        // 0x1748(0x10)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, Protected, NativeAccessSpecifierProtected)
	float                                        MinimumTransitionTime;                             // 0x1758(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_380D[0xC];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("VAL_CharacterCustomizationComponent");
		return Clss;
	}

	void UpdateSpawnedPet(struct FVAL_UpdateSpawnedPetPayload& InPayload);
	void UpdatePetFromLoadoutOnServer(enum class EVAL_UpdateSpawnedPetContext& InContext);
	void SimpleCustomizationEvent__DelegateSignature(class UVAL_CharacterCustomizationComponent* InCustomizationComp);
	bool ShouldPlayTransition(enum class EVAL_ApplyCustomizationToActorContext& InContext, struct FVAL_CharacterCustomizationLoadout& InOldLoadout, struct FVAL_CharacterCustomizationLoadout& InNewLoadout);
	void SetPetVisibility(bool InbIsVisible);
	void Server_UpdatePetFromLoadout(enum class EVAL_UpdateSpawnedPetContext& InContext);
	void Server_CommitLoadout(const struct FVAL_CharacterCustomizationLoadout_ReplDTO& InNewReplicatedLoadout);
	void SanitizeLoadoutByEntitlements();
	void OnRep_LoadoutDTO();
	void OnPetChanged__DelegateSignature(class UVAL_CharacterCustomizationItem_Pet* InNewPet);
	void OnLoadoutTransitionStarted(enum class EVAL_ApplyCustomizationToActorContext& InContext, struct FVAL_CharacterCustomizationLoadout& InOldLoadout, struct FVAL_CharacterCustomizationLoadout& InNewLoadout);
	void OnLoadoutTransitionEnded(enum class EVAL_ApplyCustomizationToActorContext& InContext, struct FVAL_CharacterCustomizationLoadout& InOldLoadout, struct FVAL_CharacterCustomizationLoadout& InNewLoadout);
	void OnGliderPropOverridden__DelegateSignature(TSoftClassPtr<class AEquipViewActor>& InGliderPropOverride);
	bool IsPendingLoadoutApplication();
	bool HasValidLoadoutApplied();
	bool HasRecievedReplicatedLoadout();
	void HandleOnMeshRelevancyToLocalPlayerUpdated(bool InbNewRelevancy);
	void HandleClearIdleAnimwidthFromAnimInstance();
	void HandleApplyIdleAnimWidthToAnimInstance(float InWidthScaler);
	void HandleApplyBodyDataToAnimInstance(float InHeightScalar, float InThicknessScalar, float InGenderScalar, float InFitnessScalar);
	class UVAL_VoiceSet* GetVoiceSet();
	struct FVAL_CharacterCustomizationLoadout GetLoadout();
	TArray<class FName> GetDifferencesBetweenLoadouts(struct FVAL_CharacterCustomizationLoadout& InLoadoutA, struct FVAL_CharacterCustomizationLoadout& InLoadoutB);
	void CommitLoadoutToServer();
	void ApplyCustomizationsToActorSync(struct FVAL_CharacterCustomizationLoadout& InNewLoadout, bool InbValidateLoadout, enum class EVAL_ApplyCustomizationToActorContext InContext);
	void ApplyBodyData();
};

// 0x140 (0x170 - 0x30)
// Class Palia.VAL_CharacterCustomizationItemBase
class UVAL_CharacterCustomizationItemBase : public UPrimaryDataAsset
{
public:
	class FText                                  DisplayName;                                       // 0x30(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, AssetRegistrySearchable, NativeAccessSpecifierPublic)
	struct FGuid                                 ItemId;                                            // 0x48(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, AssetRegistrySearchable, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EVAL_CharacterCustomizationItemType ItemType;                                          // 0x58(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, AssetRegistrySearchable, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3828[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSet<struct FVAL_CharacterCustomization_CosmeticTagSelector> CosmeticTags;                                      // 0x60(0x50)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	class UAkRtpc*                               AudioProcessingRtpc;                               // 0xB0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UTexture2D>             PrerenderedThumbnailImage_Female;                  // 0xB8(0x30)(Edit, BlueprintVisible, BlueprintReadOnly, AssetRegistrySearchable, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UTexture2D>             PrerenderedThumbnailImage_Male;                    // 0xE8(0x30)(Edit, BlueprintVisible, BlueprintReadOnly, AssetRegistrySearchable, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UScriptStruct*                         BodyTypeSpecificStruct;                            // 0x118(0x8)(ZeroConstructor, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_382A[0x50];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("VAL_CharacterCustomizationItemBase");
		return Clss;
	}

	bool TryGetVariantOptionById(enum class EVAL_CharacterBodyType InBodyType, class FName InVariantChannelName, struct FGuid& InID, struct FVAL_CharacterCustomizationVariantOptionBase* InOutVariantOption);
	bool TryGetVariantChannelByName(enum class EVAL_CharacterBodyType InBodyType, class FName InVariantChannelName, struct FVAL_CharacterCustomizationVariantChannel* InOutVariantChannel);
	bool TryGetBodyTypeSpecificConfig(enum class EVAL_CharacterBodyType InBodyType, struct FVAL_CharacterCustomization_PerBodyTypeConfig_Base* InOutBodyTypeSpecificConfig);
	bool TryGetAllVariantOptionIds(enum class EVAL_CharacterBodyType InBodyType, class FName InVariantChannelName, TSet<struct FGuid>* InOutVariantOptionIds);
	bool TryGetAllVariantChannelNames(enum class EVAL_CharacterBodyType InBodyType, TSet<class FName>* InOutVariantChannelNames);
	bool IsValid();
	TSoftObjectPtr<class UTexture2D> GetPrerenderedThumbnailImage(enum class EVAL_CharacterBodyType InBodyType);
	bool CanItemBeUsedOnBodyType(enum class EVAL_CharacterBodyType InBodyType);
	void ApplyAdditionalCustomizations(class UVAL_CharacterCustomizationComponent* InCustomizer, TMap<class FName, struct FGuid>& InSelectedVariantOptions, struct FVAL_CharacterCustomization_SkinMaterialSet& InSkinMaterials);
};

// 0x0 (0x170 - 0x170)
// Class Palia.VAL_CharacterCustomizationItem_AnimSet
class UVAL_CharacterCustomizationItem_AnimSet : public UVAL_CharacterCustomizationItemBase
{
public:

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("VAL_CharacterCustomizationItem_AnimSet");
		return Clss;
	}

	bool TryGetBodyTypeSpecificConfig_AnimSet(enum class EVAL_CharacterBodyType InBodyType, struct FVAL_CharacterCustomizationItem_AnimSet_PerBodyTypeConfig* InOutBodyTypeSpecificConfig);
};

// 0x0 (0x170 - 0x170)
// Class Palia.VAL_CharacterCustomizationItem_Eyes
class UVAL_CharacterCustomizationItem_Eyes : public UVAL_CharacterCustomizationItemBase
{
public:

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("VAL_CharacterCustomizationItem_Eyes");
		return Clss;
	}

	bool TryGetBodyTypeSpecificConfig_Eyes(enum class EVAL_CharacterBodyType InBodyType, struct FVAL_CharacterCustomizationItem_Eyes_PerBodyTypeConfig* InOutBodyTypeSpecificConfig);
};

// 0x0 (0x170 - 0x170)
// Class Palia.VAL_CharacterCustomizationItem_FaceMask
class UVAL_CharacterCustomizationItem_FaceMask : public UVAL_CharacterCustomizationItemBase
{
public:

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("VAL_CharacterCustomizationItem_FaceMask");
		return Clss;
	}

	bool TryGetBodyTypeSpecificConfig_FaceMask(enum class EVAL_CharacterBodyType InBodyType, struct FVAL_CharacterCustomizationItem_FaceMask_PerBodyTypeConfig* InOutBodyTypeSpecificConfig);
};

// 0x0 (0x170 - 0x170)
// Class Palia.VAL_CharacterCustomizationItem_FacialHairStyle
class UVAL_CharacterCustomizationItem_FacialHairStyle : public UVAL_CharacterCustomizationItemBase
{
public:

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("VAL_CharacterCustomizationItem_FacialHairStyle");
		return Clss;
	}

	bool TryGetBodyTypeSpecificConfig_FacialHairStyle(enum class EVAL_CharacterBodyType InBodyType, struct FVAL_CharacterCustomizationItem_FacialHairStyle_PerBodyTypeConfig* InOutBodyTypeSpecificConfig);
};

// 0x0 (0x170 - 0x170)
// Class Palia.VAL_CharacterCustomizationItem_Glider
class UVAL_CharacterCustomizationItem_Glider : public UVAL_CharacterCustomizationItemBase
{
public:

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("VAL_CharacterCustomizationItem_Glider");
		return Clss;
	}

	bool TryGetBodyTypeSpecificConfig_Glider(enum class EVAL_CharacterBodyType InBodyType, struct FVAL_CharacterCustomizationItem_Glider_PerBodyTypeConfig* InOutBodyTypeSpecificConfig);
};

// 0x0 (0x170 - 0x170)
// Class Palia.VAL_CharacterCustomizationItem_HairStyle
class UVAL_CharacterCustomizationItem_HairStyle : public UVAL_CharacterCustomizationItemBase
{
public:

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("VAL_CharacterCustomizationItem_HairStyle");
		return Clss;
	}

	bool TryGetBodyTypeSpecificConfig_HairStyle(enum class EVAL_CharacterBodyType InBodyType, struct FVAL_CharacterCustomizationItem_HairStyle_PerBodyTypeConfig* InOutBodyTypeSpecificConfig);
};

// 0x30 (0x60 - 0x30)
// Class Palia.VAL_CharacterCustomization_HatTypePreset
class UVAL_CharacterCustomization_HatTypePreset : public UDataAsset
{
public:
	class FName                                  AttachmentSocketName;                              // 0x30(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  HatAttachSocketName;                               // 0x38(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTagContainer                 HairSquishMorphTargets;                            // 0x40(0x20)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("VAL_CharacterCustomization_HatTypePreset");
		return Clss;
	}

};

// 0x0 (0x170 - 0x170)
// Class Palia.VAL_CharacterCustomizationItem_Hat
class UVAL_CharacterCustomizationItem_Hat : public UVAL_CharacterCustomizationItemBase
{
public:

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("VAL_CharacterCustomizationItem_Hat");
		return Clss;
	}

	bool TryGetBodyTypeSpecificConfig_Hat(enum class EVAL_CharacterBodyType InBodyType, struct FVAL_CharacterCustomizationItem_Hat_PerBodyTypeConfig* InOutBodyTypeSpecificConfig);
};

// 0x0 (0x170 - 0x170)
// Class Palia.VAL_CharacterCustomizationItem_Head
class UVAL_CharacterCustomizationItem_Head : public UVAL_CharacterCustomizationItemBase
{
public:

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("VAL_CharacterCustomizationItem_Head");
		return Clss;
	}

	bool TryGetBodyTypeSpecificConfig_Head(enum class EVAL_CharacterBodyType InBodyType, struct FVAL_CharacterCustomizationItem_Head_PerBodyTypeConfig* InOutBodyTypeSpecificConfig);
};

// 0x0 (0x170 - 0x170)
// Class Palia.VAL_CharacterCustomizationItem_Legs
class UVAL_CharacterCustomizationItem_Legs : public UVAL_CharacterCustomizationItemBase
{
public:

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("VAL_CharacterCustomizationItem_Legs");
		return Clss;
	}

	bool TryGetBodyTypeSpecificConfig_Legs(enum class EVAL_CharacterBodyType InBodyType, struct FVAL_CharacterCustomizationItem_Legs_PerBodyTypeConfig* InOutBodyTypeSpecificConfig);
};

// 0x0 (0x170 - 0x170)
// Class Palia.VAL_CharacterCustomizationItem_Makeup
class UVAL_CharacterCustomizationItem_Makeup : public UVAL_CharacterCustomizationItemBase
{
public:

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("VAL_CharacterCustomizationItem_Makeup");
		return Clss;
	}

	bool TryGetBodyTypeSpecificConfig_Makeup(enum class EVAL_CharacterBodyType InBodyType, struct FVAL_CharacterCustomizationItem_Makeup_PerBodyTypeConfig* InOutBodyTypeSpecificConfig);
};

// 0x0 (0x170 - 0x170)
// Class Palia.VAL_CharacterCustomizationItem_Pet
class UVAL_CharacterCustomizationItem_Pet : public UVAL_CharacterCustomizationItemBase
{
public:

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("VAL_CharacterCustomizationItem_Pet");
		return Clss;
	}

	TSoftObjectPtr<class UTexture2D> TryGetPetUIDisplayIcon(enum class EVAL_CharacterBodyType& InBodyType);
	bool TryGetBodyTypeSpecificConfig_Pet(enum class EVAL_CharacterBodyType InBodyType, struct FVAL_CharacterCustomizationItem_Pet_PerBodyTypeConfig* InOutBodyTypeSpecificConfig);
};

// 0x0 (0x170 - 0x170)
// Class Palia.VAL_CharacterCustomizationItem_FaceComplexion
class UVAL_CharacterCustomizationItem_FaceComplexion : public UVAL_CharacterCustomizationItemBase
{
public:

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("VAL_CharacterCustomizationItem_FaceComplexion");
		return Clss;
	}

	bool TryGetBodyTypeSpecificConfig_FaceComplexion(enum class EVAL_CharacterBodyType InBodyType, struct FVAL_CharacterCustomizationItem_FaceComplexion_PerBodyTypeConfig* InOutBodyTypeSpecificConfig);
};

// 0x0 (0x170 - 0x170)
// Class Palia.VAL_CharacterCustomizationItem_BodyComplexion
class UVAL_CharacterCustomizationItem_BodyComplexion : public UVAL_CharacterCustomizationItemBase
{
public:

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("VAL_CharacterCustomizationItem_BodyComplexion");
		return Clss;
	}

	bool TryGetBodyTypeSpecificConfig_BodyComplexion(enum class EVAL_CharacterBodyType InBodyType, struct FVAL_CharacterCustomizationItem_BodyComplexion_PerBodyTypeConfig* InOutBodyTypeSpecificConfig);
};

// 0x0 (0x170 - 0x170)
// Class Palia.VAL_CharacterCustomizationItem_SkinTone
class UVAL_CharacterCustomizationItem_SkinTone : public UVAL_CharacterCustomizationItemBase
{
public:

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("VAL_CharacterCustomizationItem_SkinTone");
		return Clss;
	}

	bool TrySetBodyTypeSpecificConfig_SkinTone(enum class EVAL_CharacterBodyType InBodyType, struct FVAL_CharacterCustomizationItem_SkinTone_PerBodyTypeConfig& InInBodyTypeSpecificConfig);
	bool TryGetBodyTypeSpecificConfig_SkinTone(enum class EVAL_CharacterBodyType InBodyType, struct FVAL_CharacterCustomizationItem_SkinTone_PerBodyTypeConfig* InOutBodyTypeSpecificConfig);
};

// 0x0 (0x170 - 0x170)
// Class Palia.VAL_CharacterCustomizationItem_FaceTattoo
class UVAL_CharacterCustomizationItem_FaceTattoo : public UVAL_CharacterCustomizationItemBase
{
public:

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("VAL_CharacterCustomizationItem_FaceTattoo");
		return Clss;
	}

	bool TryGetBodyTypeSpecificConfig_FaceTattoo(enum class EVAL_CharacterBodyType InBodyType, struct FVAL_CharacterCustomizationItem_FaceTattoo_PerBodyTypeConfig* InOutBodyTypeSpecificConfig);
};

// 0x0 (0x170 - 0x170)
// Class Palia.VAL_CharacterCustomizationItem_BodyTattoo
class UVAL_CharacterCustomizationItem_BodyTattoo : public UVAL_CharacterCustomizationItemBase
{
public:

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("VAL_CharacterCustomizationItem_BodyTattoo");
		return Clss;
	}

	bool TryGetBodyTypeSpecificConfig_BodyTattoo(enum class EVAL_CharacterBodyType InBodyType, struct FVAL_CharacterCustomizationItem_BodyTattoo_PerBodyTypeConfig* InOutBodyTypeSpecificConfig);
};

// 0x0 (0x170 - 0x170)
// Class Palia.VAL_CharacterCustomizationItem_Torso
class UVAL_CharacterCustomizationItem_Torso : public UVAL_CharacterCustomizationItemBase
{
public:

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("VAL_CharacterCustomizationItem_Torso");
		return Clss;
	}

	bool TryGetBodyTypeSpecificConfig_Torso(enum class EVAL_CharacterBodyType InBodyType, struct FVAL_CharacterCustomizationItem_Torso_PerBodyTypeConfig* InOutBodyTypeSpecificConfig);
};

// 0x0 (0x170 - 0x170)
// Class Palia.VAL_CharacterCustomizationItem_Voice
class UVAL_CharacterCustomizationItem_Voice : public UVAL_CharacterCustomizationItemBase
{
public:

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("VAL_CharacterCustomizationItem_Voice");
		return Clss;
	}

	bool TryGetBodyTypeSpecificConfig_Voice(enum class EVAL_CharacterBodyType InBodyType, struct FVAL_CharacterCustomizationItem_Voice_PerBodyTypeConfig* InOutBodyTypeSpecificConfig);
};

// 0xA0 (0xD0 - 0x30)
// Class Palia.VAL_CharacterCreationCollectionDataAsset
class UVAL_CharacterCreationCollectionDataAsset : public UDataAsset
{
public:
	TSet<TSoftObjectPtr<class UVAL_CharacterCustomizationItemBase>> Assets;                                            // 0x30(0x50)(Edit, BlueprintVisible, UObjectWrapper, NativeAccessSpecifierPublic)
	TMap<enum class EVAL_CharacterBodyType, TSoftObjectPtr<class USkeletalMesh>> BodyTypeToSkeletonMap;                             // 0x80(0x50)(Edit, BlueprintVisible, UObjectWrapper, NativeAccessSpecifierPublic)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("VAL_CharacterCreationCollectionDataAsset");
		return Clss;
	}

};

// 0x60 (0x90 - 0x30)
// Class Palia.VAL_CharacterCustomization_ColorsDataAsset
class UVAL_CharacterCustomization_ColorsDataAsset : public UDataAsset
{
public:
	TMap<class FName, struct FVAL_CharacterCustomization_ColorList> Palettes;                                          // 0x30(0x50)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	TArray<struct FVAL_CharacterCustomization_Color> HairColors;                                        // 0x80(0x10)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("VAL_CharacterCustomization_ColorsDataAsset");
		return Clss;
	}

};

// 0x78 (0xB0 - 0x38)
// Class Palia.VAL_CharacterCreationSettings
class UVAL_CharacterCreationSettings : public UDeveloperSettings
{
public:
	class FText                                  CharacterRegisterDefaultErrorText;                 // 0x38(0x18)(Edit, BlueprintVisible, Config, NativeAccessSpecifierPublic)
	class FText                                  CharacterRegisterNameValidation_NameTakenErrorText; // 0x50(0x18)(Edit, BlueprintVisible, Config, NativeAccessSpecifierPublic)
	class FText                                  CharacterRegisterNameValidation_ProfanityErrorText; // 0x68(0x18)(Edit, BlueprintVisible, Config, NativeAccessSpecifierPublic)
	class FText                                  CharacterRegisterNameValidation_S6ErrorText;       // 0x80(0x18)(Edit, BlueprintVisible, Config, NativeAccessSpecifierPublic)
	class FText                                  CharacterRegisterInFlightText;                     // 0x98(0x18)(Edit, BlueprintVisible, Config, NativeAccessSpecifierPublic)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("VAL_CharacterCreationSettings");
		return Clss;
	}

};

// 0x308 (0x340 - 0x38)
// Class Palia.VAL_CharacterCustomizationSettings
class UVAL_CharacterCustomizationSettings : public UDeveloperSettings
{
public:
	TMap<class FName, struct FVAL_CharacterCustomization_LoadoutSlotSettings> LoadoutSlotSettingsTable;                          // 0x38(0x50)(Edit, BlueprintVisible, EditFixedSize, Config, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UVAL_CharacterCreationCollectionDataAsset> CharacterCreationCollectionDataAsset;              // 0x88(0x30)(Edit, BlueprintVisible, BlueprintReadOnly, Config, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TMap<enum class EVAL_CharacterBodyType, TSoftObjectPtr<class UVAL_CharacterCustomizationLoadoutPreset>> DefaultLoadoutPresets;                             // 0xB8(0x50)(Edit, BlueprintVisible, BlueprintReadOnly, Config, UObjectWrapper, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UVAL_CharacterCustomization_ColorsDataAsset> ColorsDataAsset;                                   // 0x108(0x30)(Edit, BlueprintVisible, BlueprintReadOnly, Config, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TMap<class FName, struct FVAL_VariantChannelSettings> VariantChannelSettingsTable;                       // 0x138(0x50)(Edit, BlueprintVisible, BlueprintReadOnly, Config, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UAnimationAsset>        DefaultCustomizationAnimation;                     // 0x188(0x30)(Edit, BlueprintVisible, BlueprintReadOnly, Config, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSet<enum class EVAL_CharacterCustomization_CosmeticTagType> AllowedFilterPanelTags;                            // 0x1B8(0x50)(Edit, BlueprintVisible, BlueprintReadOnly, Config, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UDataTable>             DefaultCosmeticTagsDataTable;                      // 0x208(0x30)(Edit, BlueprintVisible, BlueprintReadOnly, Config, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TMap<enum class EVAL_CharacterCustomizationHideSlotFlags, struct FVAL_CharacterCustomization_SkeletalMeshComponentConfig> HideSlotToSkeletalMeshConfig;                      // 0x238(0x50)(Edit, BlueprintVisible, BlueprintReadOnly, Config, NativeAccessSpecifierPublic)
	TSoftClassPtr<class AVAL_Spray>              SprayActorClass;                                   // 0x288(0x30)(Edit, BlueprintVisible, BlueprintReadOnly, Config, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SprayDistance;                                     // 0x2B8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3860[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSoftObjectPtr<class UCurveLinearColorAtlas> CosmeticColorCurveAtlas;                           // 0x2C0(0x30)(Edit, BlueprintVisible, BlueprintReadOnly, Config, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVAL_VariantOptions_ColorCurveNameBackups DynamicVariantUINameBackups;                       // 0x2F0(0x20)(Edit, BlueprintVisible, BlueprintReadOnly, Config, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UDataTable>             EnabledCharacterCustomizationItemsTable;           // 0x310(0x30)(Edit, BlueprintVisible, BlueprintReadOnly, Config, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("VAL_CharacterCustomizationSettings");
		return Clss;
	}

};

// 0x918 (0x948 - 0x30)
// Class Palia.VAL_CharacterCustomizationLoadoutPreset
class UVAL_CharacterCustomizationLoadoutPreset : public UDataAsset
{
public:
	struct FVAL_CharacterCustomizationLoadout    Loadout;                                           // 0x30(0x918)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("VAL_CharacterCustomizationLoadoutPreset");
		return Clss;
	}

};

// 0x0 (0x28 - 0x28)
// Class Palia.VAL_CharacterCustomzationFunctionLibrary
class UVAL_CharacterCustomzationFunctionLibrary : public UBlueprintFunctionLibrary
{
public:

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("VAL_CharacterCustomzationFunctionLibrary");
		return Clss;
	}

	struct FVAL_CharacterCustomizationLoadout ValidateLoadout(struct FVAL_CharacterCustomizationLoadout& InLoadout, struct FVAL_ValidateLoadoutErrorPayload* InOutErrorPayload, bool InbCheckEnabled);
	struct FVAL_CharacterCustomizationLoadout TrySynchronizeVariantIndexSelectionsInLoadout(struct FVAL_CharacterCustomizationLoadout& InOldLoadout, struct FVAL_CharacterCustomizationLoadout& InNewLoadout);
	bool TryGetVariantSelectionInLoadout(struct FVAL_CharacterCustomizationLoadout& InLoadout, class FName& InLoadoutSlotName, class FName& InVariantChannelName, struct FGuid* InOutVariantOptionId);
	bool TryGetSoftItemByGuid(struct FGuid& InItemGuid, TSoftObjectPtr<class UVAL_CharacterCustomizationItemBase>* InOutItem);
	bool TryGetItemInLoadout(struct FVAL_CharacterCustomizationLoadout& InLoadout, class FName& InLoadoutSlotName, class UVAL_CharacterCustomizationItemBase** InOutItem, bool InbLoadSync);
	bool TryGetItemByGuid(struct FGuid& InItemGuid, class UVAL_CharacterCustomizationItemBase** InOutItem);
	void SortItemsByPremium(TSet<struct FGuid>& InCurrentEntitlements, bool InbDescending, TArray<struct FAssetData>& InOutItems);
	TArray<class FName> SortCosmeticTagRowNamesByDisplayName(TArray<class FName>& InCosmeticTagRowNames);
	void SetVariantSelectionInLoadout(struct FVAL_CharacterCustomizationLoadout& InInLoadout, class FName& InLoadoutSlotName, class FName& InVariantChannelName, struct FGuid& InVariantOptionId);
	void SetItemsInLoadout(struct FVAL_CharacterCustomizationLoadout& InInLoadout, TMap<class FName, TSoftObjectPtr<class UVAL_CharacterCustomizationItemBase>>& InLoadoutSlotToAssetMap);
	void SetItemInLoadout(struct FVAL_CharacterCustomizationLoadout& InInLoadout, class FName& InLoadoutSlotName, TSoftObjectPtr<class UVAL_CharacterCustomizationItemBase>& InTargetAsset);
	void PopulateEnabledCharacterCustomizationItemsConfig();
	struct FVAL_CharacterCustomizationLoadout PersistenceDTOsToLoadout(struct FVALDTOS_CharacterCustomizationLoadout_PersistDTO_Stable& InPersistDTO_Stable, struct FVALDTOS_CharacterCustomizationLoadout_PersistDTO_Volatile& InPersistDTO_Volatile);
	void MatchLoadoutVariantIndicesForItem(struct FVAL_CharacterCustomizationLoadout& InLoadout, class UVAL_CharacterCustomizationItemBase* InSourceItem, TArray<class UVAL_CharacterCustomizationItemBase*>& InTargetItems);
	struct FVALDTOS_CharacterCustomizationLoadout_PersistDTO_Volatile LoadoutToPersistenceDTO_Volatile(struct FVAL_CharacterCustomizationLoadout& InLoadout);
	struct FVALDTOS_CharacterCustomizationLoadout_PersistDTO_Stable LoadoutToPersistenceDTO_Stable(struct FVAL_CharacterCustomizationLoadout& InLoadout);
	bool IsLoadoutEmpty(struct FVAL_CharacterCustomizationLoadout& InLoadout);
	bool IsItemValidClassForLoadoutSlot(class FName& InLoadoutSlotName, TSoftObjectPtr<class UVAL_CharacterCustomizationItemBase>& InTargetAsset);
	struct FVAL_CharacterCustomizationLoadout GetRandomLoadoutFromCustomizationItems(enum class EVAL_CharacterBodyType& InBodyType, TArray<TSoftObjectPtr<class UVAL_CharacterCustomizationItemBase>>& InItems);
	class USkeletalMeshComponent* GetMeshComponentFromType(enum class EVAL_CharacterCustomization_MeshType InMeshType, class AActor* InActor);
	void GetLoadoutSlotSettings(class FName& InLoadoutSlotName, struct FVAL_CharacterCustomization_LoadoutSlotSettings* InSettings, bool* InbSuccess);
	class FName GetLoadoutSlotNameForItemClass(TSubclassOf<class UVAL_CharacterCustomizationItemBase>& InItemClass);
	bool GetItemIdFromItem(TSoftObjectPtr<class UVAL_CharacterCustomizationItemBase>& InSoftItem, struct FGuid* InOutId);
	TSet<TSoftObjectPtr<class UVAL_CharacterCustomizationItemBase>> GetFilteredCharacterCustomizationItems(const struct FVAL_CharCustomization_FilteringSettings& InFilteringSettings);
	TArray<class FName> GetDifferencesBetweenLoadouts(struct FVAL_CharacterCustomizationLoadout& InLoadoutA, struct FVAL_CharacterCustomizationLoadout& InLoadoutB);
	struct FVAL_CharacterCustomizationLoadout GetDefaultLoadout(enum class EVAL_CharacterBodyType InBodyType);
	bool GetCosmeticTagDataFromTagSelector(struct FVAL_CharacterCustomization_CosmeticTagSelector& InTagSelector, struct FVAL_CharCustomization_CosmeticTagData* InOutTagData);
	struct FLinearColor GetColorFromColorCurveAtlas(class UCurveLinearColorAtlas* InColorCurveAtlas, float InCurveIndex, float InColorCurvePoint);
	TSet<TSoftObjectPtr<class UVAL_CharacterCustomizationItemBase>> GetCharacterCustomizationItemsFromIds(TSet<struct FGuid>& InIds, enum class EVAL_CharacterBodyType& InBodyType);
	bool GetAssetDataFromItem(TSoftObjectPtr<class UVAL_CharacterCustomizationItemBase>& InSoftItem, struct FAssetData* InOutAssetData);
	TSet<TSoftObjectPtr<class UVAL_CharacterCustomizationItem_Voice>> GetAllVoiceCharacterCustomizationItems(enum class EVAL_CharacterBodyType InBodyType);
	TSet<TSoftObjectPtr<class UVAL_CharacterCustomizationItem_Torso>> GetAllTorsoCharacterCustomizationItems(enum class EVAL_CharacterBodyType InBodyType);
	TSet<TSoftObjectPtr<class UVAL_CharacterCustomizationItem_SkinTone>> GetAllSkinToneCharacterCustomizationItems(enum class EVAL_CharacterBodyType InBodyType);
	TSet<TSoftObjectPtr<class UVAL_CharacterCustomizationItem_Pet>> GetAllPetCharacterCustomizationItems(enum class EVAL_CharacterBodyType InBodyType);
	TSet<class USkeletalMeshComponent*> GetAllMeshComponents(class AActor* InActor);
	TSet<TSoftObjectPtr<class UVAL_CharacterCustomizationItem_Makeup>> GetAllMakeupCharacterCustomizationItems(enum class EVAL_CharacterBodyType InBodyType);
	TSet<class FName> GetAllLoadoutSlotsForItemSoftObjectPtr(TSoftObjectPtr<class UVAL_CharacterCustomizationItemBase>& InItem);
	TSet<class FName> GetAllLoadoutSlotsForItem(class UVAL_CharacterCustomizationItemBase* InItem);
	TSet<TSoftObjectPtr<class UVAL_CharacterCustomizationItem_Legs>> GetAllLegsCharacterCustomizationItems(enum class EVAL_CharacterBodyType InBodyType);
	TSet<TSoftObjectPtr<class UVAL_CharacterCustomizationItem_Head>> GetAllHeadCharacterCustomizationItems(enum class EVAL_CharacterBodyType InBodyType);
	TSet<TSoftObjectPtr<class UVAL_CharacterCustomizationItem_Hat>> GetAllHatCharacterCustomizationItems(enum class EVAL_CharacterBodyType InBodyType);
	TSet<TSoftObjectPtr<class UVAL_CharacterCustomizationItem_HairStyle>> GetAllHairStyleCharacterCustomizationItems(enum class EVAL_CharacterBodyType InBodyType);
	TSet<TSoftObjectPtr<class UVAL_CharacterCustomizationItem_Glider>> GetAllGliderCharacterCustomizationItems(enum class EVAL_CharacterBodyType InBodyType);
	TSet<TSoftObjectPtr<class UVAL_CharacterCustomizationItem_FacialHairStyle>> GetAllFacialHairStyleCharacterCustomizationItems(enum class EVAL_CharacterBodyType InBodyType);
	TSet<TSoftObjectPtr<class UVAL_CharacterCustomizationItem_FaceTattoo>> GetAllFaceTattooCharacterCustomizationItems(enum class EVAL_CharacterBodyType InBodyType);
	TSet<TSoftObjectPtr<class UVAL_CharacterCustomizationItem_FaceMask>> GetAllFaceMaskCharacterCustomizationItems(enum class EVAL_CharacterBodyType InBodyType);
	TSet<TSoftObjectPtr<class UVAL_CharacterCustomizationItem_FaceComplexion>> GetAllFaceComplexionCharacterCustomizationItems(enum class EVAL_CharacterBodyType InBodyType);
	TSet<TSoftObjectPtr<class UVAL_CharacterCustomizationItem_Eyes>> GetAllEyesCharacterCustomizationItems(enum class EVAL_CharacterBodyType InBodyType);
	TArray<struct FAssetData> GetAllCharacterCustomizationItems(enum class EVAL_CharacterBodyType InBodyType, TSubclassOf<class UVAL_CharacterCustomizationItemBase>& InItemClass);
	TSet<TSoftObjectPtr<class UVAL_CharacterCustomizationItem_BodyTattoo>> GetAllBodyTattooCharacterCustomizationItems(enum class EVAL_CharacterBodyType InBodyType);
	TSet<TSoftObjectPtr<class UVAL_CharacterCustomizationItem_BodyComplexion>> GetAllBodyComplexionCharacterCustomizationItems(enum class EVAL_CharacterBodyType InBodyType);
	TSet<TSoftObjectPtr<class UVAL_CharacterCustomizationItem_AnimSet>> GetAllAnimSetCharacterCustomizationItems(enum class EVAL_CharacterBodyType InBodyType);
	struct FVAL_CharCustomization_AssetData GenerateTileAssetData(struct FAssetData& InAssetData);
	void ForceMipLevelsToBeResidentOnMeshComponents(TArray<class UMeshComponent*>& InMeshComponents);
	struct FVAL_CharacterCustomizationLoadout CreateRandomLoadout();
	void ClearSkeletalMeshConfigFromComponents(class USkeletalMeshComponent* InSkeletalComp, class UAbilityAnimationComponent* InAbilityAnimationComponent);
	bool AreItemsValidClassForLoadoutSlot(class FName& InLoadoutSlotName, TSet<TSoftObjectPtr<class UVAL_CharacterCustomizationItemBase>>& InTargetAssets);
	void ApplySkeletalMeshConfigToComponents(class USkeletalMeshComponent* InSkeletalComp, class UAbilityAnimationComponent* InAbilityAnimationComponent, struct FVAL_CharacterCustomization_SkeletalMeshComponentConfig& InConfig);
	void ApplyMorphTargetsToMeshUsingTags(class USkeletalMeshComponent* InInMeshComponent, struct FGameplayTagContainer& InItemTags, struct FVAL_CharacterCustomization_SkeletalMeshComponentConfig& InInMeshConfig);
	void ApplyMorphTargetsToMeshUsingNameAndWeight(class USkeletalMeshComponent* InInMeshComponent, class FName& InMorphTargetName, float InMorphTargetWeight);
	void ApplyLoadoutThickness(struct FVAL_CharacterCustomizationLoadout& InLoadout, float InValue);
	void ApplyLoadoutMuscularExpression(struct FVAL_CharacterCustomizationLoadout& InLoadout, float InValue);
	void ApplyLoadoutHeight(struct FVAL_CharacterCustomizationLoadout& InLoadout, float InValue);
	void ApplyLoadoutGenderExpression(struct FVAL_CharacterCustomizationLoadout& InLoadout, float InValue);
};

// 0x0 (0x28 - 0x28)
// Class Palia.VAL_CharacterCustomizationVariantFunctionLibrary
class UVAL_CharacterCustomizationVariantFunctionLibrary : public UBlueprintFunctionLibrary
{
public:

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("VAL_CharacterCustomizationVariantFunctionLibrary");
		return Clss;
	}

	bool TryGetVariantOptionSelectedForItem(class FName& InVariantChannelName, struct FVAL_CharacterCustomizationLoadout& InLoadout, class UVAL_CharacterCustomizationItemBase* InItem, struct FVAL_CharacterCustomizationVariantOptionBase* InOptionChosen);
	bool TryGetTypedVariantOptionById(class UVAL_CharacterCustomizationItemBase* InItem, enum class EVAL_CharacterBodyType InBodyType, class FName& InVariantChannelName, struct FGuid& InVariantOptionId, struct FVAL_CharacterCustomizationVariantOptionBase* InOutVariantOption);
	TSoftObjectPtr<class UTexture2D> GetPrerenderedThumbnailFromId(const class FString& InItemId, enum class EVAL_CharacterBodyType InBodyType);
	TSoftObjectPtr<class UMaterialInterface> GetMaterialInstanceFromVariantForDynamicUIColor(class UVAL_CharacterCustomizationItemBase* InItem, class FName& InVariantChannelName, struct FGuid& InVariantOptionId, enum class EVAL_CharacterBodyType& InBodyType);
	TArray<struct FLinearColor> GetDynamicUIColorsFromMaterial(class UMaterialInterface* InMaterial, struct FVAL_VariantOption_UISettings& InUISettings);
	void GetAssetDataFromId(struct FAssetData* InOutData, const class FString& InItemId);
};

// 0x0 (0x28 - 0x28)
// Class Palia.VAL_CharacterCustomization_ScriptObject
class UVAL_CharacterCustomization_ScriptObject : public UObject
{
public:

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("VAL_CharacterCustomization_ScriptObject");
		return Clss;
	}

	void OnRemove(class UVAL_CharacterCustomizationComponent* InComponent);
	void OnApply(class UVAL_CharacterCustomizationComponent* InComponent, class UVAL_CharacterCustomizationItemBase* InItem, TMap<class FName, struct FGuid>& InVariantSelections);
};

// 0x178 (0x408 - 0x290)
// Class Palia.VAL_CharacterPreviewer
class AVAL_CharacterPreviewer : public AActor
{
public:
	struct FRotator                              BaseRotation;                                      // 0x290(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	class UAnimSequence*                         IdlePose;                                          // 0x2A8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FRotator                              CurrentRotationOffset;                             // 0x2B0(0x18)(Edit, BlueprintVisible, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	TMap<enum class EVAL_CharacterBodyType, struct FVAL_RenderPreviewCameraSettings> TorsoRenderPreviewCameraSettingsMap;               // 0x2C8(0x50)(Edit, BlueprintVisible, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	TMap<enum class EVAL_CharacterBodyType, struct FVAL_RenderPreviewCameraSettings> HeadRenderPreviewCameraSettingsMap;                // 0x318(0x50)(Edit, BlueprintVisible, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	TMap<enum class EVAL_CharacterBodyType, struct FVAL_RenderPreviewCameraSettings> LegsRenderPreviewCameraSettingsMap;                // 0x368(0x50)(Edit, BlueprintVisible, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	class USceneCaptureComponent2D*              FullBodyCaptureComponent;                          // 0x3B8(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USceneCaptureComponent2D*              HeadCaptureComponent;                              // 0x3C0(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USceneCaptureComponent2D*              LegsCaptureComponent;                              // 0x3C8(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USceneCaptureComponent2D*              TorsoCaptureComponent;                             // 0x3D0(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UChildActorComponent*                  ChildActorComponent;                               // 0x3D8(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USceneComponent*                       CaptureRootComponent;                              // 0x3E0(0x8)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<class USceneCaptureComponent2D*>      AllCaptureComponents;                              // 0x3E8(0x10)(ExportObject, ZeroConstructor, Transient, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	uint8                                        Pad_390C[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("VAL_CharacterPreviewer");
		return Clss;
	}

	void SetForceMipLevelsToBeResidentOnMeshComponents();
	void RequestRenderTorsoPreview(struct FVAL_RenderTorsoPreviewParameters& InPreviewParameters, struct FGuid& InInRequestId, FDelegateProperty_ InOnRenderPreviewComplete);
	void RequestRenderLegsPreview(struct FVAL_RenderLegsPreviewParameters& InPreviewParameters, struct FGuid& InInRequestId, FDelegateProperty_ InOnRenderPreviewComplete);
	void RequestRenderHeadPreview(struct FVAL_RenderHeadPreviewParameters& InPreviewParameters, struct FGuid& InInRequestId, FDelegateProperty_ InOnRenderPreviewComplete);
	void PrepareSceneForTorsoRender(struct FVAL_RenderTorsoPreviewParameters& InPreviewParameters);
	void PrepareSceneForLegsRender(struct FVAL_RenderLegsPreviewParameters& InPreviewParameters);
	void PrepareSceneForHeadRender(struct FVAL_RenderHeadPreviewParameters& InPreviewParameters);
	struct FVAL_RenderPreviewCameraSettings GetRenderTorsoCameraPreviewSettings(enum class EVAL_CharacterBodyType InBodyType);
	struct FVAL_RenderPreviewCameraSettings GetRenderLegsCameraPreviewSettings(enum class EVAL_CharacterBodyType InBodyType);
	struct FVAL_RenderPreviewCameraSettings GetRenderHeadCameraPreviewSettings(enum class EVAL_CharacterBodyType InBodyType);
	class AActor* GetPreviewCharacter();
	void ClearPendingPreviewRequests();
	class UTextureRenderTarget2D* CaptureTorsoScene(struct FVAL_RenderTorsoPreviewParameters& InPreviewParameters);
	class UTextureRenderTarget2D* CaptureLegsScene(struct FVAL_RenderLegsPreviewParameters& InPreviewParameters);
	class UTextureRenderTarget2D* CaptureHeadScene(struct FVAL_RenderHeadPreviewParameters& InPreviewParameters);
	void CancelRequest(struct FGuid& InRequestId);
};

// 0x0 (0x28 - 0x28)
// Class Palia.VAL_CharacterPreviewLevelInterface
class IVAL_CharacterPreviewLevelInterface : public IInterface
{
public:

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("VAL_CharacterPreviewLevelInterface");
		return Clss;
	}

	struct FVector GetRenderStudioSpawnLocation();
	class AValeriaCharacter* GetLobbyCharacter();
	struct FVector GetItemPreviewerSpawnLocation();
	class AVAL_CharacterRenderStudio* GetCharacterRenderStudio();
	class AVAL_CharacterPreviewer* GetCharacterPreviewer();
	class AVAL_CharacterPreviewer* GetCharacterInventoryPreviewer();
};

// 0x0 (0x28 - 0x28)
// Class Palia.VAL_CharacterPreviewLevelFunctionLibrary
class UVAL_CharacterPreviewLevelFunctionLibrary : public UBlueprintFunctionLibrary
{
public:

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("VAL_CharacterPreviewLevelFunctionLibrary");
		return Clss;
	}

	struct FVector GetRenderStudioSpawnLocation(class UObject* InWorldContextObject);
	struct FVector GetItemPreviewerSpawnLocation(class UObject* InWorldContextObject);
	class AVAL_CharacterRenderStudio* GetCharacterRenderStudio(class UObject* InWorldContextObject);
	class AVAL_CharacterPreviewer* GetCharacterPreviewer(class UObject* InWorldContextObject);
	class AVAL_CharacterPreviewer* GetCharacterInventoryPreviewer(class UObject* InWorldContextObject);
};

// 0x0 (0x28 - 0x28)
// Class Palia.VAL_CharacterRenderLevelInterface
class IVAL_CharacterRenderLevelInterface : public IInterface
{
public:

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("VAL_CharacterRenderLevelInterface");
		return Clss;
	}

	class AActor* GetDefaultCameraActor();
	class AValeriaCharacter* GetCharacter();
	class AActor* GetCameraActorForCosmeticAsset(class UVAL_CharacterCustomizationItemBase* InItem, enum class EVAL_CharacterBodyType InBodyType);
	TSet<class AActor*> GetAllTaggedActors();
	TSet<class AActor*> GetAllCameraActors();
};

// 0x2A0 (0x530 - 0x290)
// Class Palia.VAL_CharacterRenderStudio
class AVAL_CharacterRenderStudio : public AActor
{
public:
	uint8                                        Pad_3927[0x68];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	FMulticastInlineDelegateProperty_            OnStudioStateChanged;                              // 0x2F8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TSet<class UObject*>                         CloseBlockers;                                     // 0x308(0x50)(Transient, NativeAccessSpecifierPrivate)
	struct FVAL_RenderStudioLevelData            CurrentLevelData;                                  // 0x358(0xD8)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, EditConst, Protected, NativeAccessSpecifierProtected)
	TArray<struct FVAL_RenderStudioLevelData>    PreloadedLevelData;                                // 0x430(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, EditConst, Protected, NativeAccessSpecifierProtected)
	TMap<class FName, struct FVAL_RenderStudioLevelData> LevelTable;                                        // 0x440(0x50)(Edit, BlueprintVisible, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	TSoftClassPtr<class AS6WorldPartitionStreamer> WorldPartitionStreamerClass;                       // 0x490(0x30)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class AS6WorldPartitionStreamer*             WorldPartitionStreamer;                            // 0x4C0(0x8)(ZeroConstructor, Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_392B[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TMap<class FName, class AActor*>             CinematicActors;                                   // 0x4D8(0x50)(Transient, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_392C[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("VAL_CharacterRenderStudio");
		return Clss;
	}

	void UnregisterCloseBlocker(class UObject* InBlocker);
	void UnregisterCinematicActor(class FName& InKey);
	bool TryFindLevelDataByName(class FName& InLevelName, struct FVAL_RenderStudioLevelData* InLevelData);
	class AActor* SpawnActorAtActorWithTag(TSubclassOf<class AActor>& InActorClass, class FName& InTagName);
	bool RequestScene(class FName& InLevelName);
	bool RequestCharacterWardrobeScene();
	bool RequestCharacterStoreScene();
	bool RequestCharacterCreationScene();
	void RegisterCloseBlocker(class UObject* InBlocker);
	void RegisterCinematicActor(class FName& InKey, class AActor* InActor);
	bool PreloadScenes(TSet<class FName>& InLevelNames);
	void OnStateChanged__DelegateSignature(class AVAL_CharacterRenderStudio* InStudio, enum class EVAL_CharacterRenderStudioState InState);
	void InitializeValeriaCharacterForRenderStudio(class AValeriaCharacter* InRenderStudioCharacter);
	void HandleOnCharacterRenderStateChanged(enum class EVAL_CharacterRenderStudioState InState);
	enum class EVAL_CharacterRenderStudioState GetRenderStudioState();
	class AActor* GetDefaultCameraActor();
	class AActor* GetCinematicActor(class FName& InKey);
	class AValeriaCharacter* GetCharacter();
	class AActor* GetCameraActorWithTag(class FName& InTag);
	class AActor* GetCameraActorForCosmeticAsset(class UVAL_CharacterCustomizationItemBase* InItem, enum class EVAL_CharacterBodyType InBodyType);
	class AActor* GetActorWithTag(class FName& InTag);
	void ExitStudio();
	bool CenterSubSceneOnTransform(struct FTransform& InNewTransform, class FName& InSubsceneName);
};

// 0xF8 (0x120 - 0x28)
// Class Palia.VAL_ChatCommand_Base
class UVAL_ChatCommand_Base : public UObject
{
public:
	uint8                                        Pad_3931[0x20];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	struct FVAL_ChatCommandInfo                  Info;                                              // 0x48(0x90)(Edit, BlueprintVisible, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_3932[0x48];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("VAL_ChatCommand_Base");
		return Clss;
	}

};

// 0x38 (0x158 - 0x120)
// Class Palia.VAL_ChatCommand_CharacterNameParser
class UVAL_ChatCommand_CharacterNameParser : public UVAL_ChatCommand_Base
{
public:
	uint8                                        Pad_3934[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FText                                  CharacterNameEmptyError;                           // 0x128(0x18)(Edit, BlueprintVisible, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	bool                                         bExecuteCommandImmediatelyOnValidName;             // 0x140(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_3935[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        MaxCharacterNameSuggestionsNum;                    // 0x144(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_3936[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("VAL_ChatCommand_CharacterNameParser");
		return Clss;
	}

};

// 0x0 (0x158 - 0x158)
// Class Palia.VAL_ChatCommand_Whisper
class UVAL_ChatCommand_Whisper : public UVAL_ChatCommand_CharacterNameParser
{
public:

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("VAL_ChatCommand_Whisper");
		return Clss;
	}

};

// 0x18 (0x138 - 0x120)
// Class Palia.VAL_ChatCommand_Reply
class UVAL_ChatCommand_Reply : public UVAL_ChatCommand_Base
{
public:
	class FText                                  NoReplyTargetFoundErrorText;                       // 0x120(0x18)(Edit, BlueprintVisible, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("VAL_ChatCommand_Reply");
		return Clss;
	}

};

// 0x60 (0x180 - 0x120)
// Class Palia.VAL_ChatCommand_Emote
class UVAL_ChatCommand_Emote : public UVAL_ChatCommand_Base
{
public:
	TSoftObjectPtr<class UEmoteDataAsset>        EmoteAsset;                                        // 0x120(0x30)(Edit, BlueprintVisible, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FText                                  EmoteAssetNotFoundErrorText;                       // 0x150(0x18)(Edit, BlueprintVisible, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	class FText                                  EmoteFailedToPlayErrorText;                        // 0x168(0x18)(Edit, BlueprintVisible, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("VAL_ChatCommand_Emote");
		return Clss;
	}

};

// 0x18 (0x170 - 0x158)
// Class Palia.VAL_ChatCommand_Mute
class UVAL_ChatCommand_Mute : public UVAL_ChatCommand_CharacterNameParser
{
public:
	class FText                                  FailedCharacterSearchText;                         // 0x158(0x18)(Edit, BlueprintVisible, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("VAL_ChatCommand_Mute");
		return Clss;
	}

};

// 0x18 (0x170 - 0x158)
// Class Palia.VAL_ChatCommand_Unmute
class UVAL_ChatCommand_Unmute : public UVAL_ChatCommand_CharacterNameParser
{
public:
	class FText                                  FailedCharacterSearchText;                         // 0x158(0x18)(Edit, BlueprintVisible, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("VAL_ChatCommand_Unmute");
		return Clss;
	}

};

// 0x48 (0x168 - 0x120)
// Class Palia.VAL_ChatCommand_SubmitFeedback
class UVAL_ChatCommand_SubmitFeedback : public UVAL_ChatCommand_Base
{
public:
	uint8                                        Pad_3939[0x18];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class FText                                  FeedbackSubmitText;                                // 0x138(0x18)(Edit, BlueprintVisible, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	class FText                                  EmptyFeedbackErrorText;                            // 0x150(0x18)(Edit, BlueprintVisible, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("VAL_ChatCommand_SubmitFeedback");
		return Clss;
	}

};

// 0x0 (0x120 - 0x120)
// Class Palia.VAL_ChatCommand_Unstuck
class UVAL_ChatCommand_Unstuck : public UVAL_ChatCommand_Base
{
public:

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("VAL_ChatCommand_Unstuck");
		return Clss;
	}

};

// 0xB0 (0x208 - 0x158)
// Class Palia.VAL_ChatCommand_Block
class UVAL_ChatCommand_Block : public UVAL_ChatCommand_CharacterNameParser
{
public:
	class FText                                  FailedCharacterSearchText;                         // 0x158(0x18)(Edit, BlueprintVisible, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	class FText                                  AlreadyBlockedText;                                // 0x170(0x18)(Edit, BlueprintVisible, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	class FText                                  NotBlockedText;                                    // 0x188(0x18)(Edit, BlueprintVisible, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	class FText                                  BlockYourselfText;                                 // 0x1A0(0x18)(Edit, BlueprintVisible, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	class FText                                  GenericFailText;                                   // 0x1B8(0x18)(Edit, BlueprintVisible, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	bool                                         bBlock;                                            // 0x1D0(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_393F[0x37];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("VAL_ChatCommand_Block");
		return Clss;
	}

	void OpenCommandModalDialogue(class UUserWidget* InCommandModalDialogue, struct FUniqueNetIdRepl& InUserId);
	void HandleBlockErrorSent(const struct FUniqueNetIdRepl& InUserId, enum class EVAL_SocialBlockError InBlockError);
};

// 0x30 (0x188 - 0x158)
// Class Palia.VAL_ChatCommand_Report
class UVAL_ChatCommand_Report : public UVAL_ChatCommand_CharacterNameParser
{
public:
	uint8                                        Pad_3943[0x30];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("VAL_ChatCommand_Report");
		return Clss;
	}

	void OpenCommandModalDialogue(class UUserWidget* InCommandModalDialogue, struct FUniqueNetIdRepl& InUserId);
};

// 0x120 (0x158 - 0x38)
// Class Palia.VAl_ChatSettings
class UVAl_ChatSettings : public UDeveloperSettings
{
public:
	float                                        RetryLoginIntervalSeconds;                         // 0x38(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        RetryLoginVarianceSeconds;                         // 0x3C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        RetryChannelsIntervalSeconds;                      // 0x40(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        RetryChannelsVarianceSeconds;                      // 0x44(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FText                                  SendingWhisperToMutedText;                         // 0x48(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, Config, NativeAccessSpecifierPublic)
	class FText                                  CharacterMutedText;                                // 0x60(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, Config, NativeAccessSpecifierPublic)
	class FText                                  CharacterUnmutedText;                              // 0x78(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, Config, NativeAccessSpecifierPublic)
	class FText                                  CharacterAlreadyUnmutedText;                       // 0x90(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, Config, NativeAccessSpecifierPublic)
	class FText                                  CharacterAlreadyMutedText;                         // 0xA8(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, Config, NativeAccessSpecifierPublic)
	class FText                                  MutingSelfText;                                    // 0xC0(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, Config, NativeAccessSpecifierPublic)
	class FText                                  UnmutingSelfText;                                  // 0xD8(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, Config, NativeAccessSpecifierPublic)
	class FText                                  CharacterNotFoundText;                             // 0xF0(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, Config, NativeAccessSpecifierPublic)
	class FText                                  ChatRetryingLoginText;                             // 0x108(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, Config, NativeAccessSpecifierPublic)
	class FText                                  ChatSendMessagesNotPermittedText;                  // 0x120(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, Config, NativeAccessSpecifierPublic)
	class FText                                  ChatCensorFailureText;                             // 0x138(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, Config, NativeAccessSpecifierPublic)
	int32                                        NumberOfSurroundingMessagesInReport;               // 0x150(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3944[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("VAl_ChatSettings");
		return Clss;
	}

};

// 0x0 (0x28 - 0x28)
// Class Palia.VAL_ChatLibrary
class UVAL_ChatLibrary : public UBlueprintFunctionLibrary
{
public:

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("VAL_ChatLibrary");
		return Clss;
	}

};

// 0x0 (0x88 - 0x88)
// Class Palia.VAL_CheatManager
class UVAL_CheatManager : public UCheatManager
{
public:

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("VAL_CheatManager");
		return Clss;
	}

	void Valeria_VillagerMail_Spoof(const class FString& InMailId);
	void Valeria_ResetAllShops();
	void Valeria_ReloadAllCustomizationAssets();
	void Valeria_LimitedEventStop(const class FString& InInEventId);
	void Valeria_LimitedEventStatus(const class FString& InInEventId);
	void Valeria_LimitedEventStart(const class FString& InInEventId);
	void Valeria_Housing_UnlockAllHousingWrits();
	void Valeria_Housing_TransferHOAToNewHousingPlot(const class FString& InPlotName);
	void Valeria_Housing_TeleportToHousingPlot(const class FString& InDest);
	void Valeria_Housing_RespawnInitialPlotFences();
	void Valeria_Housing_RemoveAllOnHousingPlot(const class FString& InIncludeFilter);
	void Valeria_Housing_LoadTestingSpawnOnHousingPlot(class FName InItemTypeName, int32 InAmount);
	void Valeria_Housing_ForceLoadHOAToOpenPlot(const class FString& InHoaID);
	void Valeria_Housing_ExportHOA(const class FString& InHoaID, bool InExportAsNewOwner);
	void Valeria_Housing_ChangeHousingPermission(const class FString& InPlayer, const class FString& InPermission);
	void Valeria_EventsChapaaChaseEnable(bool InbEnable);
	void Valeria_Character_Import(const class FString& InPlayerId);
	void Valeria_Character_Export(const class FString& InPlayerId);
	void Server_ForceContributeBingoCell(int32 InBingoCellIndex, int32 InQuantity);
	void ForceContributeBingoCell(int32 InBingoCellIndex, int32 InQuantity);
	void Crafting_EndAllRecipes();
	void Crafting_EndAllComplexRecipes();
	bool AreCheatsEnabled();
};

// 0x18 (0x70 - 0x58)
// Class Palia.VAL_CorrectionDef
class UVAL_CorrectionDef : public UVAL_DataAsset
{
public:
	class UVAL_GameplayConditionDef*             ApplicationCondition;                              // 0x58(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, PersistentInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FQuestRewardConfig>            Correction;                                        // 0x60(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("VAL_CorrectionDef");
		return Clss;
	}

};

// 0x0 (0x28 - 0x28)
// Class Palia.VAL_CrafterStatics
class UVAL_CrafterStatics : public UBlueprintFunctionLibrary
{
public:

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("VAL_CrafterStatics");
		return Clss;
	}

	bool IsRecipeUnlocked(class UObject* InWorldContextObject, int32 InRecipePersistId);
	bool IsRecipeRequireItemItemTypeAMatch(struct FRecipe_RequireItem& InRequireItem, TSoftObjectPtr<class UVAL_ItemTypeDefinitionAsset>& InOtherItemType);
	bool IsRecipeRequireItemAMatch(struct FRecipe_RequireItem& InLhs, struct FRecipe_RequireItem& InRhs);
	TSet<TSoftObjectPtr<class UVAL_ItemTypeDefinitionAsset>> GetItemTypesPlayerHasForItemTag(class AValeriaCharacter* InVC, struct FGameplayTag& InItemTag, bool InUseStarQualityIngredient);
	int32 GetIngredientAmount(class AValeriaCharacter* InVC, struct FRecipe_RequireItem& InIngredient, struct FStarQualityConstraint& InStarQualityConstraint);
	bool GetCrafterRowName(class UDataTable* InCrafterConfigsDataTable, struct FCrafterConfig& InCrafterConfig, class FName* InRowName);
	int32 GetComplexIngredientAmount(class AValeriaCharacter* InVC, struct FRecipe_RequireItem& InIngredient, bool InUseStarQualityIngredient, bool InbAllowIntermixingRegularAndStarQualityIngredients);
	TSet<enum class ESkillType> GetAllowedCrafterSkillTypesFromRecipe(struct FRecipeConfig& InRecipe);
	TSet<struct FCrafterConfig> GetAllowedCrafterConfigsFromRecipe(struct FRecipeConfig& InRecipe);
	TArray<struct FRecipeConfig> FindAllRecipesProducingItem(class UObject* InWorldContextObject, class UVAL_ItemTypeDefinitionAsset* InItem, bool InbOnlySubRecipes);
	bool EqualEqual(struct FCrafterConfig& InA, struct FCrafterConfig& InB);
};

// 0x0 (0x28 - 0x28)
// Class Palia.VAL_CustomizableCharacterInterface
class IVAL_CustomizableCharacterInterface : public IInterface
{
public:

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("VAL_CustomizableCharacterInterface");
		return Clss;
	}

	class USkeletalMeshComponent* GetTorsoMeshComponent();
	class USkeletalMeshComponent* GetRootSkeletonMeshComponent();
	class USkeletalMeshComponent* GetLegsMeshComponent();
	class USkeletalMeshComponent* GetHeadMeshComponent();
	class USkeletalMeshComponent* GetHatMeshComponent();
	class USkeletalMeshComponent* GetHairMeshComponent();
	class USkeletalMeshComponent* GetFacialHairMeshComponent();
	class USkeletalMeshComponent* GetFaceMaskMeshComponent();
	class UAbilityAnimationComponent* GetAbilityAnimationComponent();
};

// 0x0 (0x350 - 0x350)
// Class Palia.VAL_CustomizationItemAnimInstance
class UVAL_CustomizationItemAnimInstance : public UAnimInstance
{
public:
	class UVAL_ValeriaBaseAnimInstance*          ValeriaBaseAnimInstance;                           // 0x348(0x8)(ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("VAL_CustomizationItemAnimInstance");
		return Clss;
	}

};

// 0x58 (0x88 - 0x30)
// Class Palia.VAL_DataTableDirectoryByRowType
class UVAL_DataTableDirectoryByRowType : public UDataAsset
{
public:
	class FName                                  PrimaryDirectoryUsage;                             // 0x30(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TMap<class UScriptStruct*, struct FSoftTableList> Mappings;                                          // 0x38(0x50)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("VAL_DataTableDirectoryByRowType");
		return Clss;
	}

};

// 0x218 (0x270 - 0x58)
// Class Palia.VAL_DialogueAsset
class UVAL_DialogueAsset : public UVAL_DataAsset
{
public:
	enum class EDialogueType                     DialogueType;                                      // 0x58(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_396A[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FDialogueRequirements                 Requirements;                                      // 0x60(0x128)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	struct FDataTableRowHandle                   VillagerConfig;                                    // 0x188(0x10)(Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
	class FName                                  Grouping;                                          // 0x198(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bSkipOncePerDayGroupingRestriction;                // 0x1A0(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_396C[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FDialogueLine>                 Scripts;                                           // 0x1A8(0x10)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FConditionalDialogueScriptConfig> ConditionalScripts;                                // 0x1B8(0x10)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	class FText                                  OptionButtonText;                                  // 0x1C8(0x18)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	TArray<struct FQuestRewardConfig>            Rewards;                                           // 0x1E0(0x10)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	bool                                         bIsStartupDialogue;                                // 0x1F0(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bOnlyShowOnce;                                     // 0x1F1(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bCanCancelDialogue;                                // 0x1F2(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bForceEndConversation;                             // 0x1F3(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bOpenStore;                                        // 0x1F4(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_396D[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UTeleportTravelConfigAsset*            TeleportTravelConfigAsset;                         // 0x1F8(0x8)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class ULevelSequence>         LevelSequenceAsset;                                // 0x200(0x30)(Edit, BlueprintVisible, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bTrackOnCompass;                                   // 0x230(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_396E[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<TSoftObjectPtr<class UVAL_DialogueAsset>> DialogueOptions;                                   // 0x238(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, UObjectWrapper, NativeAccessSpecifierPublic)
	TArray<struct FPersistentTagWriteback>       PlayerTagWriteback;                                // 0x248(0x10)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FVillagerQuestItemReqSubConfig> ItemRemovalOnCompletion;                           // 0x258(0x10)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	enum class EVillagerDialogueIcon             DialogueIcon;                                      // 0x268(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_396F[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("VAL_DialogueAsset");
		return Clss;
	}

	class FName GetVillagerName();
	void GetDialogueOptionButtonTooltipSettings(bool* InbOutShouldShowTooltip, class FText* InOutTooltipText);
	TArray<TSoftObjectPtr<class UVAL_DialogueAsset>> GetAssetsWithTag_Cast(struct FGameplayTag& InGameplayTag);
	TArray<TSoftObjectPtr<class UVAL_DialogueAsset>> GetAssetsOfClass_Cast(bool InbIncludeDerivedClasses);
	TArray<TSoftObjectPtr<class UVAL_DialogueAsset>> GetAssetsByFilter_Cast(struct FARFilter& InFilter);
	TSoftObjectPtr<class UVAL_DialogueAsset> GetAssetByName_Cast(class FName& InAssetName);
};

// 0x40 (0x2D0 - 0x290)
// Class Palia.VAL_DialogueRoom
class AVAL_DialogueRoom : public AActor
{
public:
	class USceneComponent*                       DialogueRoomSceneRootComponent;                    // 0x290(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UStaticMeshComponent*                  FloorMesh;                                         // 0x298(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UStaticMeshComponent*                  BackgroundWallMesh;                                // 0x2A0(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UChildActorComponent*                  TP_SpawnPoint1;                                    // 0x2A8(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UChildActorComponent*                  TP_SpawnPoint2;                                    // 0x2B0(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UChildActorComponent*                  TP_PlayerPoint;                                    // 0x2B8(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<class AValeriaTargetPoint*>           TargetPoints;                                      // 0x2C0(0x10)(ZeroConstructor, Transient, Protected, NativeAccessSpecifierProtected)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("VAL_DialogueRoom");
		return Clss;
	}

	TArray<class AValeriaTargetPoint*> GetTargetPoints();
	class AValeriaTargetPoint* GetTargetPoint(class FName& InInTargetPointName);
};

// 0x38 (0xD8 - 0xA0)
// Class Palia.VAL_DialogueRoomManagerComponent
class UVAL_DialogueRoomManagerComponent : public UActorComponent
{
public:
	TSubclassOf<class AVAL_DialogueRoom>         DialogueRoomClass;                                 // 0xA0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class AS6WorldPartitionStreamer> WorldPartitionStreamerClass;                       // 0xA8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class AValeriaPlayerController*              OwningPlayerController;                            // 0xB0(0x8)(ZeroConstructor, Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class AS6WorldPartitionStreamer*             ActiveWorldPartitionStreamer;                      // 0xB8(0x8)(ZeroConstructor, Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class AVAL_DialogueRoom*                     ActiveDialogueRoom;                                // 0xC0(0x8)(ZeroConstructor, Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<TWeakObjectPtr<class AValeriaVillagerCharacter>> ActiveDialogueRoomVillagers;                       // 0xC8(0x10)(ZeroConstructor, Transient, Protected, UObjectWrapper, NativeAccessSpecifierProtected)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("VAL_DialogueRoomManagerComponent");
		return Clss;
	}

	void RpcServer_TryCreateDialogueRoom(TArray<struct FPrivateSpaceScheduledVillagerDialogueRoomSpawnInfo>& InInDialogueRoomSpawnInfos);
	void RpcClient_DestroyWorldPartitionStreamer();
	void RpcClient_CreateWorldPartitionStreamer(class AValeriaCharacter* InInOwningCharacter);
	void PostDialogueRoomVillagerSpawned(class AValeriaVillagerCharacter* InSpawnedVillager);
	void DialogueRoomVillagerSpawned(class AValeriaVillagerCharacter* InSpawnedVillager, const struct FGuid& InInstigatorGuid);
	void DialogueEnded(class UDialogueComponent* InDialogueComponent, class AValeriaCharacter* InPlayer);
};

// 0x38 (0x70 - 0x38)
// Class Palia.VAL_DialogueRoomSettings
class UVAL_DialogueRoomSettings : public UDeveloperSettings
{
public:
	struct FVector                               BaseSpawnOffset;                                   // 0x38(0x18)(Edit, BlueprintVisible, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               SpawnSeparation;                                   // 0x50(0x18)(Edit, BlueprintVisible, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bInteractionTeleporterCheckQuestValidityForDialogueRoomInteraction; // 0x68(0x1)(Edit, BlueprintVisible, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3978[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("VAL_DialogueRoomSettings");
		return Clss;
	}

};

// 0x0 (0x28 - 0x28)
// Class Palia.VAL_EmoteLibrary
class UVAL_EmoteLibrary : public UBlueprintFunctionLibrary
{
public:

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("VAL_EmoteLibrary");
		return Clss;
	}

	void GetEmoteCollection(TArray<TSoftObjectPtr<class UEmoteDataAsset>>* InEmoteCollection);
	class UEmoteDataAsset* GetEmoteById(struct FGuid& InEmoteId);
	void GetAllEmotesMapped(TMap<struct FGuid, TSoftObjectPtr<class UEmoteDataAsset>>* InAllEmotes);
	void GetAllEmotes(TArray<TSoftObjectPtr<class UEmoteDataAsset>>* InAllEmotes);
};

// 0x0 (0xA0 - 0xA0)
// Class Palia.VAL_EncyclopediaManagerComponent
class UVAL_EncyclopediaManagerComponent : public UActorComponent
{
public:

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("VAL_EncyclopediaManagerComponent");
		return Clss;
	}

	void MarkRecipeItemsAsSeen(struct FRecipeConfig& InRecipe);
	void MarkItemAsSeen(class UVAL_ItemTypeDefinitionAsset* InItemType, bool InbStarQuality);
	void MarkItemAsPurchased(class UVAL_ItemTypeDefinitionAsset* InItemType, bool InbStarQuality);
	void MarkItemAsConsumed(class UVAL_ItemTypeDefinitionAsset* InItemType, bool InbStarQuality);
	void MarkInsectAsSeen(class UVAL_ItemTypeDefinitionAsset* InItemType, bool InbStarQuality);
	void MarkFishAsSeen(struct FFishConfig& InFish, bool InbStarQuality);
	void MarkCreatureAsSeen(struct FCreatureConfig& InCreature);
	bool HasSeenItem(class UVAL_ItemTypeDefinitionAsset* InItemType, bool InbStarQuality);
	bool HasSeenInsect(class UVAL_ItemTypeDefinitionAsset* InItemType, bool InbStarQuality);
	bool HasSeenFish(struct FFishConfig& InFish, bool InbStarQuality);
	bool HasSeenCreature(struct FCreatureConfig& InCreature);
	bool HasPurchasedItem(class UVAL_ItemTypeDefinitionAsset* InItemType, bool InbStarQuality);
	bool HasConsumedItem(class UVAL_ItemTypeDefinitionAsset* InItemType, bool InbStarQuality);
};

// 0x68 (0x98 - 0x30)
// Class Palia.VAL_EntitlementSubsystem
class UVAL_EntitlementSubsystem : public ULocalPlayerSubsystem
{
public:
	FMulticastInlineDelegateProperty_            OnEntitlementsUpdated;                             // 0x30(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                        Pad_3996[0x58];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("VAL_EntitlementSubsystem");
		return Clss;
	}

	void SyncEntitlements();
	void OnEntitlementsUpdated__DelegateSignature(TSet<struct FGuid>& InEntitlements);
	bool IsEntitlementsLoaded();
	bool HasEntitlement(struct FGuid& InEntitlement);
	TSet<struct FGuid> GetEntitlements();
};

// 0x38 (0x68 - 0x30)
// Class Palia.VAL_AsyncAction_ExperienceMapLoaded
class UVAL_AsyncAction_ExperienceMapLoaded : public UBlueprintAsyncActionBase
{
public:
	FMulticastInlineDelegateProperty_            OnExperienceLoaded;                                // 0x30(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnFailed;                                          // 0x40(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	uint8                                        Pad_3998[0x18];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("VAL_AsyncAction_ExperienceMapLoaded");
		return Clss;
	}

	class UVAL_AsyncAction_ExperienceMapLoaded* WaitForExperienceToLoad(const class FString& InExperienceName);
	void OnFailed__DelegateSignature();
	void OnExperienceLoaded__DelegateSignature();
};

// 0xA0 (0xD0 - 0x30)
// Class Palia.VAL_FriendsManager
class UVAL_FriendsManager : public ULocalPlayerSubsystem
{
public:
	FMulticastInlineDelegateProperty_            OnRelationshipsChanged;                            // 0x30(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnFriendRequestReceived;                           // 0x40(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnFriendRequestAccepted;                           // 0x50(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnFriendRequestFailed;                             // 0x60(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnCharacterBlocked;                                // 0x70(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnCharacterBlockListChanged;                       // 0x80(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                        Pad_39B1[0x40];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("VAL_FriendsManager");
		return Clss;
	}

	bool TryGetReciprocalFriendRequests(TSet<struct FUniqueNetIdRepl>* InOutFriendRequests);
	bool TryGetOutgoingFriendRequests(TSet<struct FUniqueNetIdRepl>* InOutFriendRequests);
	bool TryGetIncomingFriendRequests(TSet<struct FUniqueNetIdRepl>* InOutFriendRequests);
	bool RescindFriendshipWithPlayer(struct FUniqueNetIdRepl& InPlayerCharacterId, FDelegateProperty_& InOnSucceeded, FDelegateProperty_& InOnFailed);
	bool RequestFriendshipWithPlayer(struct FUniqueNetIdRepl& InPlayerCharacterId, FDelegateProperty_& InOnSucceeded, FDelegateProperty_& InOnFailed);
	enum class EVAL_SocialBlockError RequestBlockUser(bool InbBlock, struct FUniqueNetIdRepl& InUserId);
	bool RejectInvitation(struct FUniqueNetIdRepl& InPlayerCharacterId);
	void OnRescindFriendshipWithPlayerSucceeded__DelegateSignature(const struct FUniqueNetIdRepl& InRemovedPlayerCharacterId);
	void OnRescindFriendshipWithPlayerFailed__DelegateSignature(const struct FUniqueNetIdRepl& InRemovedPlayerCharacterId);
	void OnRequestFriendshipWithPlayerSucceeded__DelegateSignature(const struct FUniqueNetIdRepl& InAddedPlayerCharacterId);
	void OnRequestFriendshipWithPlayerFailed__DelegateSignature(const struct FUniqueNetIdRepl& InAddedPlayerCharacterId);
	void OnRelationshipsChanged__DelegateSignature(TSet<struct FUniqueNetIdRepl> InPlayerCharacterIds);
	void OnFriendRequestReceived__DelegateSignature(const struct FUniqueNetIdRepl& InOtherUserId);
	void OnFriendRequestFailed__DelegateSignature(const struct FUniqueNetIdRepl& InOtherUserId, const class FString& InErrorMsg);
	void OnFriendRequestAccepted__DelegateSignature(const struct FUniqueNetIdRepl& InOtherUserId);
	void OnCharacterBlockListChanged__DelegateSignature(TSet<struct FUniqueNetIdRepl>& InBlockedUsers);
	void OnCharacterBlocked__DelegateSignature(struct FUniqueNetIdRepl& InBlockedNetId, bool InbBlocked);
	bool IsUserBlockedWithNetIdAsString(const class FString& InUserId);
	bool IsUserBlocked(struct FUniqueNetIdRepl& InUserId);
	bool IsFriend(struct FUniqueNetIdRepl& InPlayerCharacterId);
	bool HasFriendWithCharacterName(const class FString& InPlayerCharacterName);
	TSet<struct FUniqueNetIdRepl> GetBlockedPlayers();
};

// 0x18 (0x50 - 0x38)
// Class Palia.VAL_FTUESettings
class UVAL_FTUESettings : public UDeveloperSettings
{
public:
	struct FGameplayTag                          FTUEFinalStep;                                     // 0x38(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, Config, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class FString>                        FTUEMapAndExperienceNames;                         // 0x40(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, DisableEditOnInstance, NativeAccessSpecifierPublic)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("VAL_FTUESettings");
		return Clss;
	}

};

// 0x138 (0x168 - 0x30)
// Class Palia.VAL_GameConfigSubsystem
class UVAL_GameConfigSubsystem : public UGameInstanceSubsystem
{
public:
	FMulticastInlineDelegateProperty_            OnGameConfigReady;                                 // 0x30(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnGameConfigTableUpdated;                          // 0x40(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FTimerHandle                          FetchManifestTimerHandle;                          // 0x50(0x8)(NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FTimerHandle                          UpdateGameConfigsTimerHandle;                      // 0x58(0x8)(NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UVAL_GameDataTableConfiguration*       GameDataTableConfig;                               // 0x60(0x8)(ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TMap<class FString, int32>                   UpdatedTableVersions;                              // 0x68(0x50)(NativeAccessSpecifierPrivate)
	TArray<class UDataTable*>                    OriginalData;                                      // 0xB8(0x10)(ZeroConstructor, NativeAccessSpecifierPrivate)
	uint8                                        Pad_39B6[0x18];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class FString                                ManifestLastModified;                              // 0xE0(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FString                                ManifestETag;                                      // 0xF0(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSet<class FString>                          ActivelyDownloadingGameConfigs;                    // 0x100(0x50)(NativeAccessSpecifierPrivate)
	class FString                                GameConfigsDownloadUrlRoot;                        // 0x150(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        PollingInterval;                                   // 0x160(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_39B7[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("VAL_GameConfigSubsystem");
		return Clss;
	}

	void UpdateGameConfigs();
	void StartGameConfigService();
	void OnGameConfigTableUpdated__DelegateSignature(class UDataTable* InTable);
	void OnGameConfigReady__DelegateSignature(const class FString& InTableName);
	TArray<TSoftObjectPtr<class UDataTable>> GetConfigTables();
	void FetchManifest();
};

// 0x10 (0x48 - 0x38)
// Class Palia.VAL_GameDataTableConfiguration
class UVAL_GameDataTableConfiguration : public UDeveloperSettings
{
public:
	TArray<TSoftObjectPtr<class UDataTable>>     TablesToExport;                                    // 0x38(0x10)(Edit, ZeroConstructor, Config, UObjectWrapper, NativeAccessSpecifierPublic)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("VAL_GameDataTableConfiguration");
		return Clss;
	}

};

// 0x0 (0x28 - 0x28)
// Class Palia.VAL_GameplayUIBridgeInterface
class IVAL_GameplayUIBridgeInterface : public IInterface
{
public:

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("VAL_GameplayUIBridgeInterface");
		return Clss;
	}

	void ToggleGameplayMenuMode(enum class EVAL_GameplayMenuMode InMode);
	void ToggleCollectionsMenu(enum class EVAL_CollectionsTabState& InTabState);
	void OpenSubgameScreen(class USubgameConfig* InInSubgameConfig);
	void OpenStables(class AActor* InStablesActor);
	void OpenSignTeleporter(class AActor* InTeleporterActor);
	void OpenShippingBin(class UShippingBinComponent* InShippingBinComponent);
	void OpenRequestItem(class FName InTagName);
	void OpenRepairStation(class AActor* InRepairStationActor, bool InbAllowPurchases, bool InbAllowRepairKitsFromStorage);
	void OpenRecipeInspiration();
	void OpenPremiumStore(struct FVAL_OpenStorePayload& InPayload);
	void OpenPlayerStorage();
	void OpenPetBonus(TSet<TSoftObjectPtr<class UVAL_CharacterCustomizationItem_Pet>>& InItems);
	void OpenNewsInbox();
	void OpenMenuHub();
	void OpenMailbox();
	void OpenItemVariantCustomizer(class UItemVariantCustomizerComponent* InCustomizer);
	void OpenInteractStore(class UVillagerStoreConfig* InStoreConfig);
	void OpenHousingEdit(class AHousingPlotActor* InHousingPlot);
	void OpenHouseUpgrade(class ULevelerComponent* InLeveler);
	void OpenHomeTeleporter(class ATeleporterActor* InTeleporter);
	void OpenCVarMenu();
	void OpenCrafter(class UCrafterComponent* InCrafterComponent);
	void OpenCommunityActivities();
	void OpenBundleDropOffMenu(class UBundleShrineConfig* InBundleConfig);
	void OpenBook(int32 InBookId);
	void OpenAmmoMenu(enum class EAmmoType InAmmoType);
	void NavigateToCharacterCustomization(struct FVAL_CharacterCustomizationModeConfig& InConfig);
	bool IsModalWidgetActive();
	bool HasAnyHousingPlotsTeleportOptions(class ATeleporterActor* InTeleporter);
	void HandleGameplayAbilityDeactivated(class UValeriaGASGameplayAbility* InGameplayAbility);
	void HandleGameplayAbilityActivated(class UValeriaGASGameplayAbility* InGameplayAbility);
	void CloseSubgameScreen();
};

// 0x10 (0x40 - 0x30)
// Class Palia.VAL_Subsystem_GameplayUIBridge
class UVAL_Subsystem_GameplayUIBridge : public ULocalPlayerSubsystem
{
public:
	TScriptInterface<class IVAL_GameplayUIBridgeInterface> UIImplementation;                                  // 0x30(0x10)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("VAL_Subsystem_GameplayUIBridge");
		return Clss;
	}

	void SetUIImplementation(TScriptInterface<class IVAL_GameplayUIBridgeInterface>& InUIImplementation);
	TScriptInterface<class IVAL_GameplayUIBridgeInterface> GetUIInterface();
};

// 0x50 (0x80 - 0x30)
// Class Palia.VAL_GameUISubsystem
class UVAL_GameUISubsystem : public ULocalPlayerSubsystem
{
public:
	uint8                                        Pad_39EF[0x50];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("VAL_GameUISubsystem");
		return Clss;
	}

	void SetDraggedItem(const class FString& InHoldWidgetName, class UDragDropOperation* InDraggedItem);
	class UDragDropOperation* GetDraggedItem(const class FString& InHoldWidgetName);
	void ClearDraggedItem(const class FString& InHoldWidgetName);
};

// 0x0 (0x28 - 0x28)
// Class Palia.VAL_GraphicsFunctionLibrary
class UVAL_GraphicsFunctionLibrary : public UBlueprintFunctionLibrary
{
public:

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("VAL_GraphicsFunctionLibrary");
		return Clss;
	}

	void SetDirectXVersion(enum class EVAL_DirectXVersion InDxVersion);
	enum class EVAL_DirectXVersion GetDirectXVersion();
};

// 0x88 (0x318 - 0x290)
// Class Palia.VAL_TeleporterBase
class AVAL_TeleporterBase : public AActor
{
public:
	class USceneComponent*                       TeleporterRoot;                                    // 0x290(0x8)(Edit, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTeleportOriginComponent*              TeleportOrigin;                                    // 0x298(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTeleportDestinationComponent*         TeleportDestination;                               // 0x2A0(0x8)(Edit, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTrackingTargetComponent*              PlayerCompassTarget;                               // 0x2A8(0x8)(Edit, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UTeleportTravelConfigAsset> DefaultTeleportTo;                                 // 0x2B0(0x30)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UTeleportTravelConfigAsset> DefaultAddress;                                    // 0x2E0(0x30)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bShowCrossMapTracking;                             // 0x310(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_39F5[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("VAL_TeleporterBase");
		return Clss;
	}

	void Server_ExecuteTeleport(class AValeriaCharacter* InCharacter);
	void OnCharacterArrival(class AValeriaCharacter* InCharacter);
	void Implementation_OnTeleport_Server(class AValeriaCharacter* InCharacter);
	void Implementation_OnTeleport_Client(class AValeriaCharacter* InCharacter);
	void Implementation_OnCharacterArrival_Server(class AValeriaCharacter* InCharacter);
	void Implementation_OnCharacterArrival_Client(class AValeriaCharacter* InCharacter);
	TSoftObjectPtr<class UPrivateSpaceConfig> GetTeleportToPrivateSpace(class AValeriaCharacter* InCharacter);
	class ULimitedEventDataAsset* GetTeleportToLimitedEvent(class AValeriaCharacter* InCharacter);
	TSoftObjectPtr<class UWorld> GetTeleportToLevel(class AValeriaCharacter* InCharacter);
	int32 GetCrossMapTrackingTypes(class AValeriaCharacter* InCharacter);
	void Client_ExecuteTeleport(class AValeriaCharacter* InCharacter);
};

// 0xB0 (0x3C8 - 0x318)
// Class Palia.VAL_InteractionTeleporter
class AVAL_InteractionTeleporter : public AVAL_TeleporterBase
{
public:
	uint8                                        Pad_39FC[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UInteractableComponent*                InteractableComponent;                             // 0x320(0x8)(Edit, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ReevaluatePrivateSpaceVillagersTime;               // 0x328(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        ReevaluateInteractableVillagersTime;               // 0x32C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        ReevaluateInteractableVillagersRange;              // 0x330(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        TeleporterInteractionCooldown;                     // 0x334(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bCheckQuestValidityForDialogueRoomInteraction;     // 0x338(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_39FF[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UPrivateSpaceManager*                  PrivateSpaceManager;                               // 0x340(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UPrivateSpaceConfig*                   PrivateSpaceConfig;                                // 0x348(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FTimerHandle                          ReevaluatePrivateSpaceVillagersTimerHandle;        // 0x350(0x8)(Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<struct FPrivateSpaceScheduledVillagerDialogueRoomSpawnInfo> PrivateSpaceScheduledVillagerDialogueRoomSpawnInfos; // 0x358(0x10)(Net, ZeroConstructor, Transient, Protected, NativeAccessSpecifierProtected)
	TMap<int32, bool>                            InteractableVillagers;                             // 0x368(0x50)(Transient, Protected, NativeAccessSpecifierProtected)
	struct FTimerHandle                          ReevaluateInteractableVillagersTimerHandle;        // 0x3B8(0x8)(Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bTeleporterInteractionOnCooldown;                  // 0x3C0(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_3A00[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("VAL_InteractionTeleporter");
		return Clss;
	}

	void Server_ReevaluatePrivateSpaceVillagers();
	struct FServerUseEventResult OnServerInteract(class UInteractableComponent* InInteractable, class AValeriaCharacter* InCharacter, const struct FInteractEventParams& InEventParams);
	struct FUseEventResult OnClientInteract(class UInteractableComponent* InInteractable, class AValeriaPlayerController* InPlayer, const struct FInteractEventParams& InParams);
	bool IsInteractable(class AValeriaCharacter* InCharacter, const struct FInteractEventParams& InEventParams);
	int32 InteractPriority();
	void Implementation_OnTeleportBegin_Server(class AValeriaCharacter* InCharacter);
	void Implementation_OnTeleportBegin_Client(class AValeriaCharacter* InCharacter);
	bool GetText(class AValeriaCharacter* InCharacter, enum class EInteractEventIndex InEventIndex, struct FGetTextParams* InParams);
	void Client_ReevaluateInteractableVillagers();
	void Client_EndTeleporterInteractionCooldown();
};

// 0x6F0 (0x748 - 0x58)
// Class Palia.VAL_ItemTypeDefinitionAsset
class UVAL_ItemTypeDefinitionAsset : public UVAL_DataAsset
{
public:
	int32                                        MaxStackSize;                                      // 0x58(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIsUniqueOwned;                                    // 0x5C(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3A14[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FText                                  DisplayName;                                       // 0x60(0x18)(Edit, BlueprintVisible, DisableEditOnInstance, AssetRegistrySearchable, NativeAccessSpecifierPublic)
	class FText                                  Description;                                       // 0x78(0x18)(Edit, BlueprintVisible, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TArray<class FText>                          StarQualityDescription;                            // 0x90(0x10)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UTexture2D>             ItemIcon;                                          // 0xA0(0x30)(Edit, BlueprintVisible, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UTexture2D>             UnconstructedItemIcon;                             // 0xD0(0x30)(Edit, BlueprintVisible, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FPlacementConfig                      Placement;                                         // 0x100(0x160)(Edit, BlueprintVisible, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FStartingItemConfig                   StartsWith;                                        // 0x260(0x1)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                        Pad_3A17[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FSkillPointCost                       SkillPointCost;                                    // 0x264(0x4)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
	TArray<struct FSkillPointRequirement>        SkillPointRequirements;                            // 0x268(0x10)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TArray<class UMaterialInterface*>            Materials;                                         // 0x278(0x10)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TSoftClassPtr<class AActor>                  Shop;                                              // 0x288(0x30)(Edit, BlueprintVisible, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FEquipViewConfig                      EquippedView;                                      // 0x2B8(0x60)(Edit, BlueprintVisible, DisableEditOnInstance, NativeAccessSpecifierPublic)
	bool                                         bCanBeConsumed;                                    // 0x318(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIsSimpleDecor;                                    // 0x319(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3A1A[0x6];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSoftObjectPtr<class UVAL_TransitiveDecorAsset> TransitiveDecorAsset;                              // 0x320(0x30)(Edit, BlueprintVisible, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIsEnabled;                                        // 0x350(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3A1C[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FDataTableRowHandle                   NormalQualityBuffConfig;                           // 0x358(0x10)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
	struct FDataTableRowHandle                   StarQualityBuffConfig;                             // 0x368(0x10)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
	TArray<struct FQuestRewardConfig>            ConsumeRewards;                                    // 0x378(0x10)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	class FText                                  ConsumeText;                                       // 0x388(0x18)(Edit, BlueprintVisible, DisableEditOnInstance, NativeAccessSpecifierPublic)
	enum class ESkillType                        ConsumeSkillLimit;                                 // 0x3A0(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3A1D[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        ConsumeSkillLimitLevel;                            // 0x3A4(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FItemUseConfig                        ItemUseConfig;                                     // 0x3A8(0x18)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
	enum class EItemCategory                     Category;                                          // 0x3C0(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, AssetRegistrySearchable, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EItemRarity                       Rarity;                                            // 0x3C1(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EItemQuality                      Quality;                                           // 0x3C2(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3A1E[0x1];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FName                                  IngredientConfigName;                              // 0x3C4(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3A1F[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UVAL_ItemTypeDefinitionAsset*          IngredientItemType;                                // 0x3D0(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FDataTableRowHandle                   SellValueConfig;                                   // 0x3D8(0x10)(Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
	class FName                                  FishingRodConfigName;                              // 0x3E8(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FDataTableRowHandle                   LauncherConfig;                                    // 0x3F0(0x10)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
	TSoftClassPtr<class AValeriaProjectile>      ProjectileActor;                                   // 0x400(0x30)(Edit, BlueprintVisible, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UStaticMesh>            ProjectileMesh;                                    // 0x430(0x30)(Edit, BlueprintVisible, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UMaterialInterface>     ProjectileMaterial;                                // 0x460(0x30)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UStaticMesh>            ProjectileMeshSecondary;                           // 0x490(0x30)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UMaterialInterface>     ProjectileMaterialSecondary;                       // 0x4C0(0x30)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UNiagaraSystem>         ProjectileVFX;                                     // 0x4F0(0x30)(Edit, BlueprintVisible, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bAllowAutoEquip;                                   // 0x520(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3A20[0x17];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	struct FVector                               ProjectileMeshScale;                               // 0x538(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         PreventGifting;                                    // 0x550(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3A21[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        WormFarmFoodValue;                                 // 0x554(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        StorageStackLimit;                                 // 0x558(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3A22[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<enum class EItemStorageCategory>      CanStore;                                          // 0x560(0x10)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	class FText                                  StorageName;                                       // 0x570(0x18)(Edit, BlueprintVisible, DisableEditOnInstance, NativeAccessSpecifierPublic)
	class FText                                  StorageType;                                       // 0x588(0x18)(Edit, BlueprintVisible, DisableEditOnInstance, NativeAccessSpecifierPublic)
	int32                                        AddedStorageCapacity;                              // 0x5A0(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EStoragePoolType                  StoragePool;                                       // 0x5A4(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3A23[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<int32>                                AddedMaxStoragePerLevel;                           // 0x5A8(0x10)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FDataTableRowHandle                   AbilitiesConfig;                                   // 0x5B8(0x10)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
	class UGardenBuffConfig*                     GardenBuffConfig;                                  // 0x5C8(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        GardenBuffMaxStacks;                               // 0x5D0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3A24[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FSeedConfig                           SeedConfig;                                        // 0x5D8(0xB8)(Edit, BlueprintVisible, DisableEditOnInstance, NativeAccessSpecifierPublic)
	bool                                         bIsWateringCan;                                    // 0x690(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3A25[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FItemPlayerRequestConfig              PlayerRequestConfig;                               // 0x694(0x4)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
	enum class EVitalType                        RequestRewardType;                                 // 0x698(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3A26[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        RequestRewardAmount;                               // 0x69C(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FItemTrackingConfig                   ItemTracking;                                      // 0x6A0(0x1)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                        Pad_3A27[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UItemUpgradeConfig*                    ItemUpgradeConfig;                                 // 0x6A8(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bCanBeDestroyed;                                   // 0x6B0(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3A28[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSoftClassPtr<class UGameplayEffect>         EquipGameplayEffect;                               // 0x6B8(0x30)(Edit, BlueprintVisible, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        HousingPlacementCost;                              // 0x6E8(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bAutoConsumeOnAcquire;                             // 0x6EC(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIsUniqueDrop;                                     // 0x6ED(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bAllowNewUniqueDropIfLeavesPossession;             // 0x6EE(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bAllowGatherIfUniqueDropAlreadyOwned;              // 0x6EF(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FDataTableRowHandle                   AudioConfig;                                       // 0x6F0(0x10)(Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
	float                                        AbsorptionValue;                                   // 0x700(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3A29[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UGearConfig*                           GearConfig;                                        // 0x708(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FItemVariantsConfig                   ItemVariantsConfig;                                // 0x710(0x10)(Edit, BlueprintVisible, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TArray<struct FQuestRewardConfig>            RewardsOnPickup;                                   // 0x720(0x10)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	struct FDataTableRowHandle                   BookConfig;                                        // 0x730(0x10)(Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
	bool                                         bBlockEmotesWhenEquipped;                          // 0x740(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bBlockGlidingWhenEquipped;                         // 0x741(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bBlockClimbWhenEquipped;                           // 0x742(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bCanDisplayNotificationOnAcquisition;              // 0x743(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIsQuestItem;                                      // 0x744(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3A2A[0x3];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("VAL_ItemTypeDefinitionAsset");
		return Clss;
	}

	bool IsTool();
	bool IsTintable();
	bool IsStorage();
	bool IsSeed();
	bool IsRecipe();
	bool IsReadable();
	bool IsQuestStarter();
	bool IsPlaceableHousingBuilding();
	bool IsPlaceable();
	bool IsMoveable();
	bool IsLauncher();
	bool IsKeyQuestItem();
	bool IsGear();
	bool IsFishingRod();
	bool IsFertilizer();
	bool IsBait();
	bool IsAnUpgradeKit();
	bool IsAmmunition();
	struct FLauncherConfig GetLauncherConfig();
	TArray<TSoftObjectPtr<class UVAL_ItemTypeDefinitionAsset>> GetItemTypesOfCategory(enum class EItemCategory& InCategory);
	int32 GetBookConfigId();
	TArray<TSoftObjectPtr<class UVAL_ItemTypeDefinitionAsset>> GetAssetsWithTag_Cast(struct FGameplayTag& InGameplayTag);
	TArray<TSoftObjectPtr<class UVAL_ItemTypeDefinitionAsset>> GetAssetsOfClass_Cast(bool InbIncludeDerivedClasses);
	TSoftObjectPtr<class UVAL_ItemTypeDefinitionAsset> GetAssetByPersistIdSafe_Cast(int32 InPersistIdToGet);
	TSoftObjectPtr<class UVAL_ItemTypeDefinitionAsset> GetAssetByPersistId_Cast(int32 InPersistIdToGet);
	bool CanFireAmmoType(class UVAL_ItemTypeDefinitionAsset* InAmmoItemType);
};

// 0x20 (0x48 - 0x28)
// Class Palia.VAL_KickPlayerAsyncStream
class UVAL_KickPlayerAsyncStream : public UObject
{
public:
	FMulticastInlineDelegateProperty_            OnKickPlayerMessage;                               // 0x28(0x10)(ZeroConstructor, InstancedReference, NativeAccessSpecifierPublic)
	uint8                                        Pad_3A32[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("VAL_KickPlayerAsyncStream");
		return Clss;
	}

	void HandleMessage(const class FString& InTopic, TArray<uint8>& InMessage);
};

// 0x0 (0x28 - 0x28)
// Class Palia.VAL_KismetTextLibrary
class UVAL_KismetTextLibrary : public UBlueprintFunctionLibrary
{
public:

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("VAL_KismetTextLibrary");
		return Clss;
	}

	class FText JoinTextArray(TArray<class FText>& InSourceArray, class FText& InSeparator);
	int32 CompareText(class FText& InA, class FText& InB, enum class EVAL_TextComparisonLevel InTextComparisonLevel);
};

// 0x0 (0x28 - 0x28)
// Class Palia.VAL_LevelScriptFunctionLibrary
class UVAL_LevelScriptFunctionLibrary : public UBlueprintFunctionLibrary
{
public:

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("VAL_LevelScriptFunctionLibrary");
		return Clss;
	}

	class ALevelScriptActor* GetLevelScriptActor(class UObject* InWorldContextObject);
};

// 0x0 (0x308 - 0x308)
// Class Palia.VAL_LevelSequenceActor
class AVAL_LevelSequenceActor : public ALevelSequenceActor
{
public:

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("VAL_LevelSequenceActor");
		return Clss;
	}

};

// 0x0 (0x5B8 - 0x5B8)
// Class Palia.VAL_LevelSequencePlayer
class UVAL_LevelSequencePlayer : public ULevelSequencePlayer
{
public:

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("VAL_LevelSequencePlayer");
		return Clss;
	}

};

// 0x10 (0x2A0 - 0x290)
// Class Palia.VAL_LevelSequenceSublevelLink
class AVAL_LevelSequenceSublevelLink : public AActor
{
public:
	struct FTopLevelAssetPath                    OriginalLevelAssetPath;                            // 0x290(0x10)(Edit, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("VAL_LevelSequenceSublevelLink");
		return Clss;
	}

};

// 0x300 (0x338 - 0x38)
// Class Palia.VAl_MatchmakingSettings
class UVAl_MatchmakingSettings : public UDeveloperSettings
{
public:
	float                                        MatchmakingTimeout;                                // 0x38(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        JoinStatusInitialPingWaitTime;                     // 0x3C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        JoinStatusPingWaitTime;                            // 0x40(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3A40[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSet<int32>                                  JoinStatusValidErrorCodes;                         // 0x48(0x50)(Edit, BlueprintVisible, BlueprintReadOnly, Config, NativeAccessSpecifierPublic)
	class FText                                  ClientNetworkOrTravelFailureText;                  // 0x98(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, Config, NativeAccessSpecifierPublic)
	class FText                                  AlreadyMatchmakingText;                            // 0xB0(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, Config, NativeAccessSpecifierPublic)
	class FText                                  InvalidPlayerText;                                 // 0xC8(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, Config, NativeAccessSpecifierPublic)
	class FText                                  RequestCreationFailedText;                         // 0xE0(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, Config, NativeAccessSpecifierPublic)
	class FText                                  RequestTicketCreationTimedOutText;                 // 0xF8(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, Config, NativeAccessSpecifierPublic)
	class FText                                  TicketCreationFailed;                              // 0x110(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, Config, NativeAccessSpecifierPublic)
	class FText                                  ServerRPCSendFailText;                             // 0x128(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, Config, NativeAccessSpecifierPublic)
	class FText                                  BeaconClientFailSpawnText;                         // 0x140(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, Config, NativeAccessSpecifierPublic)
	class FText                                  BeaconClientFailedToConnectText;                   // 0x158(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, Config, NativeAccessSpecifierPublic)
	class FText                                  TicketValidationTimedOutText;                      // 0x170(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, Config, NativeAccessSpecifierPublic)
	class FText                                  TicketRejectedText;                                // 0x188(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, Config, NativeAccessSpecifierPublic)
	class FText                                  PlayerControllerNotFound;                          // 0x1A0(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, Config, NativeAccessSpecifierPublic)
	class FText                                  KickedDueToNotAcceptedPlayerText;                  // 0x1B8(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, Config, NativeAccessSpecifierPublic)
	class FText                                  LoginQueueFailureText;                             // 0x1D0(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, Config, NativeAccessSpecifierPublic)
	class FText                                  ServerRPCAuthInjectorFailText;                     // 0x1E8(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, Config, NativeAccessSpecifierPublic)
	class FText                                  ExitLoginQueueFailureText;                         // 0x200(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, Config, NativeAccessSpecifierPublic)
	class FText                                  ExitLoginQueueTimeOutText;                         // 0x218(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, Config, NativeAccessSpecifierPublic)
	class FText                                  LoginQueueNumberText;                              // 0x230(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, Config, NativeAccessSpecifierPublic)
	struct FOSSVAL_MatchmakingCustomErrorContainer MatchmakingCustomErrorCodeTextTable;               // 0x248(0x50)(Edit, BlueprintVisible, BlueprintReadOnly, Config, NativeAccessSpecifierPublic)
	struct FOSSVAL_MatchmakingCustomErrorContainer External_MatchmakingCustomErrorCodeTextTable;      // 0x298(0x50)(Edit, BlueprintVisible, BlueprintReadOnly, Config, NativeAccessSpecifierPublic)
	struct FOSSVAL_MatchmakingCustomErrorContainer Internal_MatchmakingCustomErrorCodeTextTable;      // 0x2E8(0x50)(Edit, BlueprintVisible, BlueprintReadOnly, Config, NativeAccessSpecifierPublic)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("VAl_MatchmakingSettings");
		return Clss;
	}

};

// 0x0 (0x28 - 0x28)
// Class Palia.VAL_MatchmakingLibrary
class UVAL_MatchmakingLibrary : public UBlueprintFunctionLibrary
{
public:

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("VAL_MatchmakingLibrary");
		return Clss;
	}

	bool IsCurrentlyJoiningServer(class ULocalPlayer* InLocalPlayer);
	bool IsCurrentlyDeletingJoin(class ULocalPlayer* InLocalPlayer);
	bool IsCurrentlyCreatingTicket(class ULocalPlayer* InLocalPlayer);
	class FText GetErrorTextFromErrorType(enum class EOSSVAL_MatchmakingFailErrorType InErrorType);
	struct FOSSVAL_MatchmakingErrorResult CreateFailedResult(enum class EOSSVAL_MatchmakingFailErrorType InErrorType, int32 InErrorCode);
};

// 0xA0 (0xD0 - 0x30)
// Class Palia.VAL_AsyncAction_Matchmaking
class UVAL_AsyncAction_Matchmaking : public UBlueprintAsyncActionBase
{
public:
	FMulticastInlineDelegateProperty_            OnResultObtained;                                  // 0x30(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                        Pad_3A4F[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FOSSVAL_MatchmakingRequestContext     RequestContext;                                    // 0x48(0x88)(Transient, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("VAL_AsyncAction_Matchmaking");
		return Clss;
	}

	class UVAL_AsyncAction_Matchmaking* StartMatchmaking(class ULocalPlayer* InLocalPlayer, struct FOSSVAL_MatchmakingRequestContext& InContext);
	void OnResultObtained__DelegateSignature(struct FOSSVAL_MatchmakingRequestContext& InRequestContext, struct FOSSVAL_MatchmakingResult& InResult);
};

// 0xC0 (0xF0 - 0x30)
// Class Palia.VAL_AsyncAction_JoinServer
class UVAL_AsyncAction_JoinServer : public UBlueprintAsyncActionBase
{
public:
	FMulticastInlineDelegateProperty_            OnResultObtained;                                  // 0x30(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                        Pad_3A56[0xB0];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("VAL_AsyncAction_JoinServer");
		return Clss;
	}

	void OnResultObtained__DelegateSignature(struct FOSSVAL_MatchmakingTicket& InTicket, struct FOSSVAL_MatchmakingResult& InResult);
	class UVAL_AsyncAction_JoinServer* JoinServer(class ULocalPlayer* InLocalPlayer, struct FOSSVAL_MatchmakingTicketContext& InMatchmakingTicketContext, struct FOSSVAL_MatchmakingTicket& InMatchmakingTicket);
};

// 0xA0 (0xD0 - 0x30)
// Class Palia.VAL_AsyncAction_MatchmakingDeleteRequest
class UVAL_AsyncAction_MatchmakingDeleteRequest : public UBlueprintAsyncActionBase
{
public:
	FMulticastInlineDelegateProperty_            OnResultObtained;                                  // 0x30(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                        Pad_3A58[0x90];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("VAL_AsyncAction_MatchmakingDeleteRequest");
		return Clss;
	}

	void OnResultObtained__DelegateSignature(struct FOSSVAL_MatchmakingResult& InResult);
	class UVAL_AsyncAction_MatchmakingDeleteRequest* DeleteMatchmakingRequest(class ULocalPlayer* InLocalPlayer, bool InbInternal);
};

// 0x20 (0x48 - 0x28)
// Class Palia.VAL_MQTTAsyncStreamBase
class UVAL_MQTTAsyncStreamBase : public UObject
{
public:
	uint8                                        Pad_3A59[0x20];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("VAL_MQTTAsyncStreamBase");
		return Clss;
	}

};

// 0x0 (0x48 - 0x48)
// Class Palia.VAL_MQTTMatchmakerServerAsyncStreamBase
class UVAL_MQTTMatchmakerServerAsyncStreamBase : public UVAL_MQTTAsyncStreamBase
{
public:

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("VAL_MQTTMatchmakerServerAsyncStreamBase");
		return Clss;
	}

};

// 0x0 (0x28 - 0x28)
// Class Palia.VAL_NewsInboxLibrary
class UVAL_NewsInboxLibrary : public UBlueprintFunctionLibrary
{
public:

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("VAL_NewsInboxLibrary");
		return Clss;
	}

};

// 0x88 (0x128 - 0xA0)
// Class Palia.VAL_NewsInboxComponent
class UVAL_NewsInboxComponent : public UActorComponent
{
public:
	struct FTimespan                             HideClaimedRewardsThreshold;                       // 0xA0(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnRefreshRewards;                                  // 0xA8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnRedemptionSuccess;                               // 0xB8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnRedemptionFailure;                               // 0xC8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	struct FVAL_RewardsData                      RewardsData;                                       // 0xD8(0x20)(Net, RepNotify, NativeAccessSpecifierPublic)
	uint8                                        Pad_3A62[0x30];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("VAL_NewsInboxComponent");
		return Clss;
	}

	void TryClaimRewards(TArray<struct FVAL_Reward>& InRewards);
	void TrackRewardGrantedTelemetry(struct FVAL_Reward& InReward);
	void RpcServer_TryClaimRewards(TArray<struct FVAL_Reward>& InRewards);
	void RpcServer_RefreshRewards();
	void RpcClient_OnRedemptionSuccess();
	void RpcClient_OnRedemptionFailure();
	void RefreshRewards();
	void OnRep_RewardsData();
	class AValeriaPlayerController* GetValeriaPlayer();
	class AValeriaCharacter* GetValeriaCharacter();
	bool GetRewardByIndex(int32 InIndex, struct FVAL_Reward* InOutReward, bool InClaimed);
	int32 GetPendingRewardCount();
	TSoftObjectPtr<class UTexture2D> GetEntitlementTexture(struct FVAL_Reward& InReward, enum class EVAL_CharacterBodyType InBodyType);
	int32 GetClaimedRewardCount();
};

// 0x110 (0x140 - 0x30)
// Class Palia.VAL_OnlinePhotoAlbumSubsystem
class UVAL_OnlinePhotoAlbumSubsystem : public ULocalPlayerSubsystem
{
public:
	FMulticastInlineDelegateProperty_            OnOurOnlinePhotosChanged;                          // 0x30(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMap<struct FGuid, class UVAL_OnlinePhotograph*> PhotoIdToCachedOnlinePhotoMap;                     // 0x40(0x50)(NativeAccessSpecifierPrivate)
	uint8                                        Pad_3A66[0xB0];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("VAL_OnlinePhotoAlbumSubsystem");
		return Clss;
	}

	bool UploadPhoto(class UVAL_CapturedPhotograph* InPhotograph, FDelegateProperty_& InOnSucceeded, FDelegateProperty_& InOnFailed);
	void RefreshOurOnlinePhotos();
	void OnUploadPhotoSucceeded__DelegateSignature(class UVAL_OnlinePhotoAlbumSubsystem* InOnlinePhotoAlbumSubsystem, class UVAL_CapturedPhotograph* InOriginalPhotograph, struct FGuid& InPhotoId);
	void OnUploadPhotoFailed__DelegateSignature(class UVAL_OnlinePhotoAlbumSubsystem* InOnlinePhotoAlbumSubsystem, class UVAL_CapturedPhotograph* InOriginalPhotograph, class FText& InError);
	void OnOnlinePhotosChanged__DelegateSignature(class UVAL_OnlinePhotoAlbumSubsystem* InOnlinePhotoAlbumSubsystem, TSet<struct FGuid>& InDeletedPhotoIds, TSet<struct FGuid>& InAddedPhotoIds);
	void OnGetOnlinePhotoSucceeded__DelegateSignature(class UVAL_OnlinePhotoAlbumSubsystem* InOnlinePhotoAlbumSubsystem, struct FGuid& InAccountId, struct FGuid& InPhotoId, class UVAL_OnlinePhotograph* InPhoto);
	void OnGetOnlinePhotoFailed__DelegateSignature(class UVAL_OnlinePhotoAlbumSubsystem* InOnlinePhotoAlbumSubsystem, struct FGuid& InAccountId, struct FGuid& InPhotoId, class FText& InError);
	TSet<class UVAL_CapturedPhotograph*> GetRecentPhotosUploaded();
	TSet<class UVAL_CapturedPhotograph*> GetRecentPhotosBeingUploaded();
	TArray<class UVAL_OnlinePhotograph*> GetOurOnlinePhotos();
	struct FGuid GetOnlinePhotoIdForRecentPhoto(class UVAL_CapturedPhotograph* InRecentPhoto);
	bool GetOnlinePhoto(struct FGuid& InAccountId, struct FGuid& InPhotoId, FDelegateProperty_& InOnSucceeded, FDelegateProperty_& InOnFailed);
	bool DeleteOnlinePhoto(struct FGuid& InPhotoId);
};

// 0x2E8 (0x318 - 0x30)
// Class Palia.VAL_PartyManager
class UVAL_PartyManager : public ULocalPlayerSubsystem
{
public:
	uint8                                        Pad_3A69[0x70];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	FMulticastInlineDelegateProperty_            OnPartyStateChanged;                               // 0xA0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnInviteReceived;                                  // 0xB0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnInviteSent;                                      // 0xC0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnInviteRescinded;                                 // 0xD0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnInviteRejected;                                  // 0xE0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnInviteTimedOut;                                  // 0xF0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnMemberAdded;                                     // 0x100(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnMemberRemoved;                                   // 0x110(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnMemberKicked;                                    // 0x120(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnMemberDisconnected;                              // 0x130(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnLeaderDisconnected;                              // 0x140(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnMemberPromoted;                                  // 0x150(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                        Pad_3A6A[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	struct FVAL_PartyMember                      LocalPartyMember;                                  // 0x170(0x50)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, EditConst, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVAL_Party                            CurrentParty;                                      // 0x1C0(0xB8)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, EditConst, Protected, NativeAccessSpecifierProtected)
	TSet<struct FVAL_PartyInvite>                PendingSentInvites;                                // 0x278(0x50)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, EditConst, Protected, NativeAccessSpecifierProtected)
	TSet<struct FVAL_PartyInvite>                PendingReceivedInvites;                            // 0x2C8(0x50)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, EditConst, Protected, NativeAccessSpecifierProtected)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("VAL_PartyManager");
		return Clss;
	}

	void SendInvite(struct FVAL_PartyMember& InRecipient);
	void RescindInvite(struct FVAL_PartyInvite& InInvite);
	void RejectInvite(struct FVAL_PartyInvite& InInvite);
	void PromoteMember(struct FVAL_PartyMember& InMember);
	void OnPartyStateChanged__DelegateSignature(enum class EVAL_PartyManagerState InState);
	void OnPartyMemberRemoved__DelegateSignature(struct FVAL_PartyMember& InMember);
	void OnPartyMemberPromoted__DelegateSignature(struct FVAL_PartyMember& InMember);
	void OnPartyMemberKicked__DelegateSignature(struct FVAL_PartyMember& InMember);
	void OnPartyMemberDisconnected__DelegateSignature(struct FVAL_PartyMember& InMember);
	void OnPartyMemberAdded__DelegateSignature(struct FVAL_PartyMember& InMember);
	void OnPartyLeaderDisconnected__DelegateSignature(struct FVAL_PartyMember& InLeader);
	void OnPartyInviteTimedOut__DelegateSignature(struct FVAL_PartyInvite& InInvite);
	void OnPartyInviteSent__DelegateSignature(struct FVAL_PartyInvite& InInvite);
	void OnPartyInviteRescinded__DelegateSignature(struct FVAL_PartyInvite& InInvite);
	void OnPartyInviteRejected__DelegateSignature(struct FVAL_PartyInvite& InInvite);
	void OnPartyInviteReceived__DelegateSignature(struct FVAL_PartyInvite& InInvite);
	void KickMember(struct FVAL_PartyMember& InMember);
	bool IsCurrentPartyValid();
	bool HasSentInviteTo(struct FVAL_PartyMember& InMember, struct FVAL_PartyInvite* InOutInvite);
	bool HasReceivedInviteFrom(struct FVAL_PartyMember& InMember, struct FVAL_PartyInvite* InOutInvite);
	void HandleOnSelectedCharacterChanged(struct FOSSVAL_SelectedCharacter& InSelectedCharacter);
	void HandleOnPresenceChanged(const struct FPresence& InOldPresence, const struct FPresence& InNewPresence);
	void HandleNewControlMessage(struct FControlMessage& InControlMessage);
	int32 GetMaximumPartySize();
	enum class EVAL_PartyManagerState GetCurrentPartyState();
	void ExitParty();
	void AcceptInvite(struct FVAL_PartyInvite& InInvite);
};

// 0x88 (0xB8 - 0x30)
// Class Palia.VAL_PhotographyManager
class UVAL_PhotographyManager : public ULocalPlayerSubsystem
{
public:
	uint8                                        Pad_3A6B[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	FMulticastInlineDelegateProperty_            OnStartingCapture;                                 // 0x38(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnCaptureTaken;                                    // 0x48(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TArray<class UVAL_CapturedPhotograph*>       PhotosFromThisSession;                             // 0x58(0x10)(ZeroConstructor, NativeAccessSpecifierPrivate)
	uint8                                        Pad_3A6C[0x50];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("VAL_PhotographyManager");
		return Clss;
	}

	void OnStartingCapture__DelegateSignature(class UVAL_PhotographyManager* InPhotographyManager);
	void OnCaptureTaken__DelegateSignature(class UVAL_PhotographyManager* InPhotographyManager, class UVAL_CapturedPhotograph* InCapturedPhotograph);
	TArray<class UVAL_CapturedPhotograph*> GetCapturedPhotographs();
	struct FGuid CreateCapturedPhotograph();
};

// 0x78 (0xA0 - 0x28)
// Class Palia.VAL_CapturedPhotograph
class UVAL_CapturedPhotograph : public UObject
{
public:
	uint8                                        Pad_3A6E[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FGuid                                 UniqueId;                                          // 0x30(0x10)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FDateTime                             DateTimeAtCapture;                                 // 0x40(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTexture2D*                            CapturedTexture;                                   // 0x48(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSet<struct FUniqueNetIdRepl>                PlayersInView;                                     // 0x50(0x50)(BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("VAL_CapturedPhotograph");
		return Clss;
	}

};

// 0x60 (0x88 - 0x28)
// Class Palia.VAL_OnlinePhotograph
class UVAL_OnlinePhotograph : public UObject
{
public:
	uint8                                        Pad_3A73[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FGuid                                 PhotoId;                                           // 0x30(0x10)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGuid                                 AccountId;                                         // 0x40(0x10)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                ImageURL;                                          // 0x50(0x10)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TWeakObjectPtr<class UObject>                CachedImageResourceObject;                         // 0x60(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnImageResourceObjectChanged;                      // 0x68(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                        Pad_3A74[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("VAL_OnlinePhotograph");
		return Clss;
	}

	void RefreshFromImageURL();
	void OnImageResourceObjectChanged__DelegateSignature(class UVAL_OnlinePhotograph* InOnlinePhotograph);
};

// 0x38 (0x70 - 0x38)
// Class Palia.VAL_PhotographySettings
class UVAL_PhotographySettings : public UDeveloperSettings
{
public:
	int32                                        PhotographCaptureWidth;                            // 0x38(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        PhotographCaptureHeight;                           // 0x3C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FText                                  FailedToUploadPhotoErrorMessageFormat;             // 0x40(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, Config, NativeAccessSpecifierPublic)
	class FText                                  FailedToGetOnlinePhotoErrorMessageFormat;          // 0x58(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, Config, NativeAccessSpecifierPublic)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("VAL_PhotographySettings");
		return Clss;
	}

};

// 0x20 (0x3360 - 0x3340)
// Class Palia.VAL_PlayerCameraManager
class AVAL_PlayerCameraManager : public APlayerCameraManager
{
public:
	FMulticastInlineDelegateProperty_            OnCameraFadeFinished;                              // 0x3340(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	bool                                         bIsInPhotoCameraMode;                              // 0x3350(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bWantsSelfieMode;                                  // 0x3351(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3A7E[0x6];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        HidePlateWidgetFadeAmountThreshold;                // 0x3358(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_3A7F[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("VAL_PlayerCameraManager");
		return Clss;
	}

	bool ShouldHidePlateWidgets();
	void OnCameraGenericNotify__DelegateSignature(class AVAL_PlayerCameraManager* InCameraManager);
	class USceneCaptureComponent2D* GetPhotoCameraModeSceneCaptureComponent();
};

// 0x18 (0x50 - 0x38)
// Class Palia.VAL_PlayerDataCorrectionSettings
class UVAL_PlayerDataCorrectionSettings : public UDeveloperSettings
{
public:
	bool                                         bRunActiveCorrectionsImmediatelyAfterLoadingCharacter; // 0x38(0x1)(Edit, BlueprintVisible, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3A80[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<TSoftObjectPtr<class UVAL_CorrectionDef>> ActiveCorrections;                                 // 0x40(0x10)(Edit, BlueprintVisible, ZeroConstructor, Config, UObjectWrapper, NativeAccessSpecifierPublic)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("VAL_PlayerDataCorrectionSettings");
		return Clss;
	}

};

// 0x178 (0x218 - 0xA0)
// Class Palia.VAL_PlayerGuildComponent
class UVAL_PlayerGuildComponent : public UActorComponent
{
public:
	uint8                                        Pad_3AA4[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	FMulticastInlineDelegateProperty_            OnPinStateChanged;                                 // 0xA8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnPinnedQuestsChanged;                             // 0xB8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FVAL_PlayerGuildQuestTracker          QuestTracker;                                      // 0xC8(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, Net, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FPlayerGuildLevelInfo                 GuildLevelInfo;                                    // 0xE0(0x20)(BlueprintVisible, BlueprintReadOnly, Net, RepNotify, NoDestructor, NativeAccessSpecifierPublic)
	struct FVAL_PlayerGuildQuestCollection       GuildQuests;                                       // 0x100(0x40)(BlueprintVisible, BlueprintReadOnly, Net, RepNotify, NativeAccessSpecifierPublic)
	struct FVAL_PlayerGuildQuestGeneratedInfo    PotentialGuildQuests;                              // 0x140(0x48)(BlueprintVisible, BlueprintReadOnly, Net, RepNotify, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnGuildXpChanged;                                  // 0x188(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnGuildQuestsChanged;                              // 0x198(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnGuildPotentialQuestsChanged;                     // 0x1A8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnGuildSeedExpirationChanged;                      // 0x1B8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                        Pad_3AA5[0x50];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("VAL_PlayerGuildComponent");
		return Clss;
	}

	void VAL_PlayerGuildQuestTracker_PinStateChanged__DelegateSignature(class UVAL_PlayerGuildComponent* InPlayerGuildComponent, struct FGuid& InQuestId);
	void VAL_PlayerGuildQuestTracker_PinnedQuestsChanged__DelegateSignature(class UVAL_PlayerGuildComponent* InPlayerGuildComponent);
	void ServerRequestFetchGuildXp();
	void ServerNotifyGuildIdChanged(const struct FGuid& InNewGuildId);
	void ServerDeleteGuildQuest(struct FGuid& InQuestId);
	void ServerCreateGuildQuest(struct FGuid& InQuestId);
	void ServerCheat_RefreshGuildQuests();
	void ServerCheat_ModifyPlayerGuildXp(int64 InAmount);
	void ServerCheat_DeleteGuildQuest(struct FGuid& InQuestId);
	void ServerCheat_CreateGuildQuest(const class FString& InCounterId, int32 InAmountRequired, int32 InXpReward, const class FString& InQuestSize, const class FString& InRarity);
	void ServerCheat_ContributeToGuildQuest(struct FGuid& InQuestInstanceId, const class FString& InCounterName, int32 InAmountToContribute);
	void Server_UpdatePlayerGuildQuests();
	void Server_MarkPlayerGuildQuestAsPinned(struct FGuid& InQuestId, bool InbIsPinned);
	void Server_ClearPlayerGuildQuests();
	void Server_ClearPinnedPlayerGuildQuests();
	void OnRep_Xp();
	void OnRep_Quests();
	void OnRep_PotentialQuests(struct FVAL_PlayerGuildQuestGeneratedInfo& InPotentialGuildQuests_Old);
	void HandlePlayerGuildChanged(class UVAL_PlayerGuildSubsystem* InPlayerGuildSubsystem, const struct FGuid& InNewGuildId);
	void HandleCharacterSpawned(class AValeriaPlayerController* InPlayerController, class AValeriaCharacter* InCharacter);
};

// 0x80 (0xB8 - 0x38)
// Class Palia.VAL_PlayerGuildProgressionSettings
class UVAL_PlayerGuildProgressionSettings : public UDeveloperSettings
{
public:
	TMap<enum class ESkillType, int64>           PlayerGuildXpPerSkillXpEvent;                      // 0x38(0x50)(Edit, BlueprintVisible, BlueprintReadOnly, EditFixedSize, Config, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UVAL_PlayerGuildQuestGeneratorConfig> ActiveQuestGenerationConfig;                       // 0x88(0x30)(Edit, BlueprintVisible, BlueprintReadOnly, Config, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("VAL_PlayerGuildProgressionSettings");
		return Clss;
	}

};

// 0x1D0 (0x200 - 0x30)
// Class Palia.PlayerGuildProgressionSubsystem
class UPlayerGuildProgressionSubsystem : public UGameInstanceSubsystem
{
public:
	int32                                        NumSmallQuests;                                    // 0x30(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3AAB[0x1A4];                                   // Fixing Size After Last Property  [ Dumper-7 ]
	class UVAL_PlayerGuildLevels*                Levels;                                            // 0x1D8(0x8)(ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UVAL_PlayerGuild_GameplayEventListener* GameplayEventListener;                             // 0x1E0(0x8)(ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_3AAC[0x18];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("PlayerGuildProgressionSubsystem");
		return Clss;
	}

	bool IsFeatureEnabled();
	void InitializePostAuth();
};

// 0x10 (0x38 - 0x28)
// Class Palia.VAL_PlayerGuildLevels
class UVAL_PlayerGuildLevels : public UObject
{
public:
	uint8                                        Pad_3AAD[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("VAL_PlayerGuildLevels");
		return Clss;
	}

};

// 0x28 (0x50 - 0x28)
// Class Palia.VAL_PlayerGuild_GameplayEventListener
class UVAL_PlayerGuild_GameplayEventListener : public UObject
{
public:
	uint8                                        Pad_3AAF[0x28];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("VAL_PlayerGuild_GameplayEventListener");
		return Clss;
	}

};

// 0x0 (0x28 - 0x28)
// Class Palia.VAL_PlayerGuildQuestGeneratorStatics
class UVAL_PlayerGuildQuestGeneratorStatics : public UBlueprintFunctionLibrary
{
public:

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("VAL_PlayerGuildQuestGeneratorStatics");
		return Clss;
	}

	struct FVAL_PlayerGuildQuestCollection GenerateQuests(int32 InSeed, class UVAL_PlayerGuildQuestGeneratorConfig* InGeneratorConfigData);
};

// 0x40 (0x68 - 0x28)
// Class Palia.VAL_PlayerGuildQuestWrapperObject
class UVAL_PlayerGuildQuestWrapperObject : public UObject
{
public:
	struct FVAL_PlayerGuildQuestCollection       Quests;                                            // 0x28(0x40)(Edit, BlueprintVisible, Transient, NativeAccessSpecifierPublic)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("VAL_PlayerGuildQuestWrapperObject");
		return Clss;
	}

};

// 0x0 (0x28 - 0x28)
// Class Palia.VAL_PlayerGuildQuestTrackerLibrary
class UVAL_PlayerGuildQuestTrackerLibrary : public UBlueprintFunctionLibrary
{
public:

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("VAL_PlayerGuildQuestTrackerLibrary");
		return Clss;
	}

	void SetIsQuestPinned(class UVAL_PlayerGuildComponent* InPlayerGuildComp, struct FGuid& InQuestId, bool InbIsPinned);
	bool IsQuestPinned(class UVAL_PlayerGuildComponent* InPlayerGuildComp, struct FGuid& InQuestId);
	TArray<struct FGuid> GetPinnedQuestIds(class UVAL_PlayerGuildComponent* InPlayerGuildComp);
	bool CanPinQuest(class UVAL_PlayerGuildComponent* InPlayerGuildComp, struct FGuid& InQuestId);
};

// 0x80 (0xB0 - 0x30)
// Class Palia.VAL_PlayerGuildQuestGeneratorGoal
class UVAL_PlayerGuildQuestGeneratorGoal : public UDataAsset
{
public:
	class FText                                  ActivityName;                                      // 0x30(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	class FText                                  ActivityDescription;                               // 0x48(0x18)(Edit, NativeAccessSpecifierPublic)
	enum class EVAL_PlayerGuildQuestRarity       ActivityRarity;                                    // 0x60(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3AC3[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSoftObjectPtr<class UVAL_ItemTypeDefinitionAsset> ActivityItemRequired;                              // 0x68(0x30)(Edit, BlueprintVisible, BlueprintReadOnly, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        QuantityRequired;                                  // 0x98(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EVAL_PlayerGuildQuestAction       ActivityAction;                                    // 0x9C(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3AC4[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        PlayerGuildExpReward;                              // 0xA0(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        PlayerGuildActivityLevelReward;                    // 0xA4(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        PlayerCoinReward;                                  // 0xA8(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3AC5[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("VAL_PlayerGuildQuestGeneratorGoal");
		return Clss;
	}

};

// 0x10 (0x40 - 0x30)
// Class Palia.VAL_PlayerGuildQuestGeneratorBucket
class UVAL_PlayerGuildQuestGeneratorBucket : public UDataAsset
{
public:
	TArray<TSoftObjectPtr<class UVAL_PlayerGuildQuestGeneratorGoal>> PlayerGuildActivity;                               // 0x30(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("VAL_PlayerGuildQuestGeneratorBucket");
		return Clss;
	}

};

// 0x90 (0xC0 - 0x30)
// Class Palia.VAL_PlayerGuildQuestGeneratorConfig
class UVAL_PlayerGuildQuestGeneratorConfig : public UDataAsset
{
public:
	TArray<TSoftObjectPtr<class UVAL_PlayerGuildQuestGeneratorBucket>> SmallBuckets;                                      // 0x30(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)
	TArray<TSoftObjectPtr<class UVAL_PlayerGuildQuestGeneratorBucket>> MediumBuckets;                                     // 0x40(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)
	TArray<TSoftObjectPtr<class UVAL_PlayerGuildQuestGeneratorBucket>> LargeBuckets;                                      // 0x50(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)
	int32                                        NumSmallToGenerate;                                // 0x60(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        NumMediumToGenerate;                               // 0x64(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        NumLargeToGenerate;                                // 0x68(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3AC7[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TMap<enum class EVAL_PlayerGuildQuestRarity, uint32> RarityWeights;                                     // 0x70(0x50)(Edit, NativeAccessSpecifierPublic)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("VAL_PlayerGuildQuestGeneratorConfig");
		return Clss;
	}

};

// 0x0 (0x28 - 0x28)
// Class Palia.VAL_PlayerGuildStatics
class UVAL_PlayerGuildStatics : public UBlueprintFunctionLibrary
{
public:

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("VAL_PlayerGuildStatics");
		return Clss;
	}

	TArray<struct FVAL_PlayerGuildQuest> SortPlayerGuildActivities(TArray<struct FVAL_PlayerGuildQuest>& InGuildQuests, struct FVAL_PlayerGuildStatics_SortSettings& InSortSettings);
	void GetDateDifferenceInTimespan(struct FDateTime& InStartDate, struct FDateTime& InEndDate, struct FTimespan* InOutTimespan);
};

// 0x180 (0x1B0 - 0x30)
// Class Palia.VAL_PlayerGuildSubsystem
class UVAL_PlayerGuildSubsystem : public ULocalPlayerSubsystem
{
public:
	FMulticastInlineDelegateProperty_            OnUserMembershipChanged;                           // 0x30(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnPlayerGuildChanged;                              // 0x40(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnInboundInvitationsChanged;                       // 0x50(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnNewInboundInvitationReceived;                    // 0x60(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnOutboundInvitationsChanged;                      // 0x70(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnInboundApplicationsChanged;                      // 0x80(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnNewInboundApplicationReceived;                   // 0x90(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnOutboundApplicationsChanged;                     // 0xA0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                        Pad_3B2D[0x100];                                   // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("VAL_PlayerGuildSubsystem");
		return Clss;
	}

	bool TryGetUserMembership(struct FUniqueNetIdRepl& InUserId, bool* InbOutHasMembership, struct FVAL_PlayerGuild* InPlayerGuild);
	bool TryGetRoleForUserId(struct FVAL_PlayerGuild& InPlayerGuild, struct FUniqueNetIdRepl& InUserId, enum class EVAL_PlayerGuildMemberRole* InOutRole);
	bool TryGetPlayerGuild(struct FGuid& InPlayerGuildId, struct FVAL_PlayerGuild* InOutPlayerGuildInfo);
	bool TryGetOutboundInvitations(struct FVAL_PlayerGuildInvitationList* InOutInvitations);
	bool TryGetOutboundApplications(struct FVAL_PlayerGuildApplicationList* InOutApplications);
	bool TryGetInboundInvitations(struct FVAL_PlayerGuildInvitationList* InOutInvitations);
	bool TryGetInboundApplications(struct FVAL_PlayerGuildApplicationList* InOutApplications);
	TArray<struct FVAL_PlayerGuildRosterEntry> SortPlayerGuildMembersArray(TArray<struct FVAL_PlayerGuildRosterEntry>& InArray);
	void SendInvite(struct FGuid& InPlayerGuildId, struct FUniqueNetIdRepl& InUserId, FDelegateProperty_ InOnSuccess, FDelegateProperty_ InOnFailure);
	void SendApplication(struct FGuid& InPlayerGuildId, FDelegateProperty_ InOnSuccess, FDelegateProperty_ InOnFailure);
	void RefreshUserMembership(struct FUniqueNetIdRepl& InUserId);
	void RefreshPlayerGuild(struct FGuid& InPlayerGuildId);
	void QueryUserMembership(struct FUniqueNetIdRepl& InUserId, FDelegateProperty_& InOnSuccess, FDelegateProperty_& InOnFailure);
	void QueryPlayerGuild(struct FGuid& InPlayerGuildId, FDelegateProperty_ InOnSuccess, FDelegateProperty_ InOnFailure);
	void QueryOutboundInvitations(FDelegateProperty_ InOnSuccess, FDelegateProperty_ InOnFailure);
	void QueryOutboundApplications(FDelegateProperty_ InOnSuccess, FDelegateProperty_ InOnFailure);
	void QueryInboundInvitations(FDelegateProperty_ InOnSuccess, FDelegateProperty_ InOnFailure);
	void QueryInboundApplications(FDelegateProperty_ InOnSuccess, FDelegateProperty_ InOnFailure);
	void PromoteToAdmin(struct FGuid& InPlayerGuildId, struct FUniqueNetIdRepl& InUserId, FDelegateProperty_ InOnSuccess, FDelegateProperty_ InOnFailure);
	void OnUserMembershipChanged__DelegateSignature(class UVAL_PlayerGuildSubsystem* InPlayerGuildSubsystem, struct FUniqueNetIdRepl& InAffectedUserNetId);
	void OnPlayerGuildChanged__DelegateSignature(class UVAL_PlayerGuildSubsystem* InPlayerGuildSubsystem, const struct FGuid& InPlayerGuildId);
	void OnOutboundInvitationsChanged__DelegateSignature(class UVAL_PlayerGuildSubsystem* InPlayerGuildSubsystem);
	void OnOutboundApplicationsChanged__DelegateSignature(class UVAL_PlayerGuildSubsystem* InPlayerGuildSubsystem);
	void OnNewInboundInvitationReceived__DelegateSignature(class UVAL_PlayerGuildSubsystem* InPlayerGuildSubsystem, const struct FGuid& InPlayerGuildId, const struct FUniqueNetIdRepl& InInviterId);
	void OnNewInboundApplicationReceived__DelegateSignature(class UVAL_PlayerGuildSubsystem* InPlayerGuildSubsystem, const struct FGuid& InPlayerGuildId, const struct FUniqueNetIdRepl& InApplicantId);
	void OnInboundInvitationsChanged__DelegateSignature(class UVAL_PlayerGuildSubsystem* InPlayerGuildSubsystem);
	void OnInboundApplicationsChanged__DelegateSignature(class UVAL_PlayerGuildSubsystem* InPlayerGuildSubsystem);
	void OnGetUsersPlayerGuild_Succeeded__DelegateSignature(bool InbHasMembership, const struct FVAL_PlayerGuild& InPlayerGuild);
	void OnGetPlayerGuild_Succeeded__DelegateSignature(const struct FVAL_PlayerGuild& InPlayerGuild);
	void OnGetInvitations_Succeeded__DelegateSignature(const struct FVAL_PlayerGuildInvitationList& InInvitationList);
	void OnGetApplications_Succeeded__DelegateSignature(const struct FVAL_PlayerGuildApplicationList& InApplicationList);
	void OnGenericOperation_Succeeded__DelegateSignature();
	void OnGenericOperation_Failed__DelegateSignature(const class FString& InErrorMessage);
	void OnDeletePlayerGuild_Succeeded__DelegateSignature(const struct FGuid& InPlayerGuildId);
	void OnCreatePlayerGuild_Succeeded__DelegateSignature(const struct FGuid& InPlayerGuildId);
	void ModifyPlayerGuild(struct FVAL_PlayerGuild& InModifiedPlayerGuild, FDelegateProperty_ InOnSuccess, FDelegateProperty_ InOnFailure);
	void LeavePlayerGuild(struct FGuid& InPlayerGuildId, FDelegateProperty_ InOnSuccess, FDelegateProperty_ InOnFailure);
	void KickFromPlayerGuild(struct FGuid& InPlayerGuildId, struct FUniqueNetIdRepl& InUserId, FDelegateProperty_ InOnSuccess, FDelegateProperty_ InOnFailure);
	bool IsLocalPlayerInPlayerGuildWith(const class FString& InPlayerCharacterName);
	void HandleNewControlMessage(struct FControlMessage& InControlMessage);
	TArray<struct FVAL_PlayerGuildRosterEntry> GetGuildRoster(struct FGuid& InPlayerGuildId);
	int32 FindIndexOfUserInPlayerGuildRoster(TArray<struct FVAL_PlayerGuildRosterEntry>& InRoster, struct FUniqueNetIdRepl& InUserNetId);
	void DemoteFromAdmin(struct FGuid& InPlayerGuildId, struct FUniqueNetIdRepl& InUserId, FDelegateProperty_ InOnSuccess, FDelegateProperty_ InOnFailure);
	void DeletePlayerGuild(struct FGuid& InPlayerGuildId, FDelegateProperty_ InOnSuccess, FDelegateProperty_ InOnFailure);
	void DeclineInvite(struct FGuid& InPlayerGuildId, FDelegateProperty_ InOnSuccess, FDelegateProperty_ InOnFailure);
	void DeclineApplication(struct FGuid& InPlayerGuildId, struct FUniqueNetIdRepl& InApplicantUserId, FDelegateProperty_ InOnSuccess, FDelegateProperty_ InOnFailure);
	void CreatePlayerGuild(struct FVAL_PlayerGuild& InPlayerGuild, FDelegateProperty_ InOnSuccess, FDelegateProperty_ InOnFailure);
	bool CanTransferGuildOwnership(struct FUniqueNetIdRepl& InCurrentOwnerId, struct FUniqueNetIdRepl& InNewOwnerId);
	bool CanRoleSendInvites(struct FVAL_PlayerGuild& InPlayerGuild, enum class EVAL_PlayerGuildMemberRole InActingRole);
	bool CanRolePromoteToAdmin(enum class EVAL_PlayerGuildMemberRole InActingRole, enum class EVAL_PlayerGuildMemberRole InTargetRole);
	bool CanRoleManageApplicants(struct FVAL_PlayerGuild& InPlayerGuild, enum class EVAL_PlayerGuildMemberRole InActingRole);
	bool CanRoleKickFromPlayerGuild(enum class EVAL_PlayerGuildMemberRole InActingRole, enum class EVAL_PlayerGuildMemberRole InTargetRole);
	bool CanRoleDemoteFromAdmin(enum class EVAL_PlayerGuildMemberRole InActingRole, enum class EVAL_PlayerGuildMemberRole InTargetRole);
	void CancelInvite(struct FGuid& InPlayerGuildId, struct FUniqueNetIdRepl& InUserId, FDelegateProperty_ InOnSuccess, FDelegateProperty_ InOnFailure);
	void CancelApplication(struct FGuid& InPlayerGuildId, FDelegateProperty_ InOnSuccess, FDelegateProperty_ InOnFailure);
	void AcceptInvite(struct FGuid& InPlayerGuildId, FDelegateProperty_ InOnSuccess, FDelegateProperty_ InOnFailure);
	void AcceptApplication(struct FGuid& InPlayerGuildId, struct FUniqueNetIdRepl& InApplicantUserId, FDelegateProperty_ InOnSuccess, FDelegateProperty_ InOnFailure);
};

// 0xA0 (0xD0 - 0x30)
// Class Palia.VAL_PlayerGuildGameInstanceSubsystem
class UVAL_PlayerGuildGameInstanceSubsystem : public UGameInstanceSubsystem
{
public:
	uint8                                        Pad_3B2E[0xA0];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("VAL_PlayerGuildGameInstanceSubsystem");
		return Clss;
	}

};

// 0x88 (0xB0 - 0x28)
// Class Palia.VAL_Functor_OnGetPlayerGuildDelegates
class UVAL_Functor_OnGetPlayerGuildDelegates : public UObject
{
public:
	uint8                                        Pad_3B2F[0x88];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("VAL_Functor_OnGetPlayerGuildDelegates");
		return Clss;
	}

	void SuccessCallback(const struct FVAL_PlayerGuild& InPlayerGuildInfo);
	void FailureCallback(const class FString& InErrorMessage);
};

// 0x138 (0x170 - 0x38)
// Class Palia.VAL_DeveloperSettings_PlayerGuild
class UVAL_DeveloperSettings_PlayerGuild : public UDeveloperSettings
{
public:
	class FText                                  CharacterKickedText;                               // 0x38(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, Config, NativeAccessSpecifierPublic)
	class FText                                  PersonalKickedText;                                // 0x50(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, Config, NativeAccessSpecifierPublic)
	class FText                                  PlayerGuildDeletedText;                            // 0x68(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, Config, NativeAccessSpecifierPublic)
	class FText                                  CharacterLeftText;                                 // 0x80(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, Config, NativeAccessSpecifierPublic)
	class FText                                  PersonalLeftText;                                  // 0x98(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, Config, NativeAccessSpecifierPublic)
	class FText                                  CharacterJoinedText;                               // 0xB0(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, Config, NativeAccessSpecifierPublic)
	class FText                                  PersonalJoinedText;                                // 0xC8(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, Config, NativeAccessSpecifierPublic)
	class FText                                  CharacterInvitedText;                              // 0xE0(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, Config, NativeAccessSpecifierPublic)
	class FText                                  PersonalInvitedText;                               // 0xF8(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, Config, NativeAccessSpecifierPublic)
	class FText                                  CharacterInvitationRescindedText;                  // 0x110(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, Config, NativeAccessSpecifierPublic)
	class FText                                  PersonalInvitationDeclinedText;                    // 0x128(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, Config, NativeAccessSpecifierPublic)
	class FText                                  PersonalInvitationRescindedText;                   // 0x140(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, Config, NativeAccessSpecifierPublic)
	class FText                                  PersonalApplicationRejectedText;                   // 0x158(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, Config, NativeAccessSpecifierPublic)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("VAL_DeveloperSettings_PlayerGuild");
		return Clss;
	}

};

// 0x78 (0xB0 - 0x38)
// Class Palia.VAL_PlayerGuildSettings
class UVAL_PlayerGuildSettings : public UDeveloperSettings
{
public:
	class FText                                  PlayerGuildCreationDefaultErrorText;               // 0x38(0x18)(Edit, BlueprintVisible, Config, NativeAccessSpecifierPublic)
	class FText                                  PlayerGuildCreationNameValidation_InvalidErrorText; // 0x50(0x18)(Edit, BlueprintVisible, Config, NativeAccessSpecifierPublic)
	class FText                                  PlayerGuildCreationNameValidation_ProfanityErrorText; // 0x68(0x18)(Edit, BlueprintVisible, Config, NativeAccessSpecifierPublic)
	class FText                                  PlayerGuildCreationMottoValidation_ProfanityErrorText; // 0x80(0x18)(Edit, BlueprintVisible, Config, NativeAccessSpecifierPublic)
	class FText                                  PlayerGuildCreationDescriptionValidation_ProfanityErrorText; // 0x98(0x18)(Edit, BlueprintVisible, Config, NativeAccessSpecifierPublic)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("VAL_PlayerGuildSettings");
		return Clss;
	}

};

// 0x18 (0x3C0 - 0x3A8)
// Class Palia.VAL_PlayerState
class AVAL_PlayerState : public APlayerState
{
public:
	bool                                         bHasInitializedIdentity;                           // 0x3A8(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3B30[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	FMulticastInlineDelegateProperty_            OnIdentityInitialized;                             // 0x3B0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("VAL_PlayerState");
		return Clss;
	}

};

// 0x28 (0x58 - 0x30)
// Class Palia.VAL_PremiumStoreSubsystem
class UVAL_PremiumStoreSubsystem : public ULocalPlayerSubsystem
{
public:
	FMulticastInlineDelegateProperty_            OnPremiumItemsAcquired;                            // 0x30(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnPremiumCurrencyBalanceUpdated;                   // 0x40(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	uint8                                        Pad_3B3C[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("VAL_PremiumStoreSubsystem");
		return Clss;
	}

	bool RequestSyncWallet();
	bool PurchaseVariant(struct FGuid& InVariantId, TSet<struct FGuid>& InItemIds, int32 InPrice, FDelegateProperty_& InHandlePurchaseRequestCompleted);
	bool PurchaseSet(struct FGuid& InSetId, TSet<struct FGuid>& InItemIds, int32 InPrice, FDelegateProperty_& InHandlePurchaseRequestCompleted);
	void OnPurchaseRequestCompleted__DelegateSignature(struct FGuid& InVariantId, bool InbWasSuccessful);
	void OnPremiumItemsAcquired__DelegateSignature(TSet<struct FGuid>& InIds);
	void OnPremiumCurrencyBalanceUpdated__DelegateSignature(int32 InPremiumCurrencyAmount, int32 InTotalPurchasedCoinsAmount);
	int32 GetTotalPurchasedCoinAmount();
	int32 GetPremiumCurrencyAmount();
};

// 0x10 (0x328 - 0x318)
// Class Palia.VAL_ProximityTeleporter
class AVAL_ProximityTeleporter : public AVAL_TeleporterBase
{
public:
	class UBoxComponent*                         EffectOverlap;                                     // 0x318(0x8)(Edit, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UBoxComponent*                         TeleportTriggerOverlap;                            // 0x320(0x8)(Edit, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("VAL_ProximityTeleporter");
		return Clss;
	}

	void OnTeleportTriggerOverlap(class UPrimitiveComponent* InOverlappedComponent, class AActor* InOtherActor, class UPrimitiveComponent* InOtherComp, int32 InOtherBodyIndex, bool InbFromSweep, struct FHitResult& InSweepResult);
	void OnEffectOverlapEnd(class UPrimitiveComponent* InOverlappedComp, class AActor* InOtherActor, class UPrimitiveComponent* InOtherComp, int32 InOtherBodyIndex);
	void OnEffectOverlapBegin(class UPrimitiveComponent* InOverlappedComponent, class AActor* InOtherActor, class UPrimitiveComponent* InOtherComp, int32 InOtherBodyIndex, bool InbFromSweep, struct FHitResult& InSweepResult);
	void Implementation_OnTeleportOverlapBegin_Server(class AValeriaCharacter* InTeleportedCharacter);
	void Implementation_OnTeleportOverlapBegin_Client(class AValeriaCharacter* InTeleportedCharacter);
	void Implementation_OnEffectOverlapEnd_Server(class UPrimitiveComponent* InOverlappedComp, class AActor* InOtherActor, class UPrimitiveComponent* InOtherComp, int32 InOtherBodyIndex);
	void Implementation_OnEffectOverlapEnd_Client(class UPrimitiveComponent* InOverlappedComp, class AActor* InOtherActor, class UPrimitiveComponent* InOtherComp, int32 InOtherBodyIndex);
	void Implementation_OnEffectOverlapBegin_Server(class UPrimitiveComponent* InOverlappedComponent, class AActor* InOtherActor, class UPrimitiveComponent* InOtherComp, int32 InOtherBodyIndex, bool InbFromSweep, struct FHitResult& InSweepResult);
	void Implementation_OnEffectOverlapBegin_Client(class UPrimitiveComponent* InOverlappedComponent, class AActor* InOtherActor, class UPrimitiveComponent* InOtherComp, int32 InOtherBodyIndex, bool InbFromSweep, struct FHitResult& InSweepResult);
};

// 0x0 (0x28 - 0x28)
// Class Palia.VAL_QuestFunctionLibrary
class UVAL_QuestFunctionLibrary : public UBlueprintFunctionLibrary
{
public:

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("VAL_QuestFunctionLibrary");
		return Clss;
	}

	TArray<struct FVAL_QuestState> SortMainQuestsToBeginning(TArray<struct FVAL_QuestState>& InQuestArray);
	bool IsQuestCompleted(struct FVAL_QuestState& InQuestState);
	class FText GetQuestTitle(struct FVAL_QuestState& InQuestState);
	TSoftObjectPtr<class UTexture2D> GetQuestGoalIcon(struct FVAL_QuestGoalState& InGoalState);
	class FText GetQuestGoalDescription(struct FVAL_QuestGoalState& InGoalState, class AValeriaCharacter* InValeriaCharacter);
	struct FVAL_QuestGoalDef GetQuestGoalDefinition(struct FVAL_QuestGoalState& InQuestGoalState);
	class FText GetQuestDescription(struct FVAL_QuestState& InQuestState);
	void GetCurrentQuestStepDefinition(struct FVAL_QuestState& InQuestState, struct FVAL_QuestStepDef* InQuestStepDef, bool* InbFoundQuestStep);
	void GetCurrentQuestStep(struct FVAL_QuestState& InQuestState, struct FVAL_QuestStepState* InQuestStepState, bool* InbFoundQuestStep);
	bool DoesQuestStepHaveVisibleBranchingGoals(struct FVAL_QuestStepDef& InQuestStepDef);
	bool DoesQuestGoalRequireStarQuality(struct FVAL_QuestGoalState& InGoalState);
};

// 0x68 (0x108 - 0xA0)
// Class Palia.VAL_RewardsPlayerComponent
class UVAL_RewardsPlayerComponent : public UActorComponent
{
public:
	uint8                                        Pad_3B86[0x18];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TMap<struct FGuid, struct FVAL_OnClaimPlayerRewardDelegates> ClaimPlayerRewardsRequestIdToResponseDelegatesMap; // 0xB8(0x50)(Transient, ContainsInstancedReference, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("VAL_RewardsPlayerComponent");
		return Clss;
	}

	void VAL_OnQueryPlayerRewards_Success__DelegateSignature(class UVAL_RewardsPlayerComponent* InComponent);
	void VAL_OnQueryPlayerRewards_Failure__DelegateSignature(class UVAL_RewardsPlayerComponent* InComponent, class FText& InError);
	bool TryGetCachedPlayerRewards(TArray<struct FConsumableReward>* InOutRewards);
	void ServerMakeRequest_ClaimPlayerRewards(struct FGuid& InRequestId, TArray<struct FGuid>& InOriginIds);
	bool QueryPlayerRewards(FDelegateProperty_& InOnSuccess, FDelegateProperty_& InOnFailure);
	void ClientReceiveResponse_ClaimPlayerRewards_Success(struct FGuid& InRequestId, TArray<struct FGuid>& InClaimedOriginIds);
	void ClientReceiveResponse_ClaimPlayerRewards_Failure(struct FGuid& InRequestId, class FText& InErrorMessage);
	void ClaimPlayerRewards(TArray<struct FGuid>& InOriginIds, FDelegateProperty_& InOnSuccess, FDelegateProperty_& InOnFailure);
};

// 0x0 (0x28 - 0x28)
// Class Palia.VAL_RichMarkupPhotographInterface
class IVAL_RichMarkupPhotographInterface : public IInterface
{
public:

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("VAL_RichMarkupPhotographInterface");
		return Clss;
	}

	TSet<struct FUniqueNetIdRepl> GetPlayersInPhotograph();
	class UObject* GetPhotographImageResourceObject();
};

// 0xD8 (0x178 - 0xA0)
// Class Palia.VAL_ScoreComponent
class UVAL_ScoreComponent : public UActorComponent
{
public:
	uint8                                        Pad_3BA5[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	FMulticastInlineDelegateProperty_            OnScoreChanged;                                    // 0xA8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnDisplayedScoreChanged;                           // 0xB8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScorePersistBlock                    ScorePersistBlock;                                 // 0xC8(0x90)(Transient, Protected, NativeAccessSpecifierProtected)
	TArray<struct FScoreStruct>                  BestScores;                                        // 0x158(0x10)(Net, ZeroConstructor, NativeAccessSpecifierPrivate)
	TArray<class UVAL_ScoreDefinition*>          ScoresToDisplay;                                   // 0x168(0x10)(Net, ZeroConstructor, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("VAL_ScoreComponent");
		return Clss;
	}

	void Server_SubtractScore(class UVAL_ScoreDefinition* InScoreDefinition, int32 InValue);
	void Server_SetScoreToDisplay(class UVAL_ScoreDefinition* InScoreDefinition, int32 InDisplayedIndex);
	void Server_SetScore(class UVAL_ScoreDefinition* InScoreDefinition, int32 InValue);
	void Server_AddScore(class UVAL_ScoreDefinition* InScoreDefinition, int32 InValue);
	void RpcClient_SetScoreToDisplay(class UVAL_ScoreDefinition* InScoreDefinition, int32 InDisplayedIndex);
	void RpcClient_SetScore(class UVAL_ScoreDefinition* InScoreDefinition, int32 InValue);
	void RpcClient_InitScores(TArray<int32>& InScoreIds, TArray<int32>& InScoreValues);
	bool HasScore(class UVAL_ScoreDefinition* InScoreDefinition);
	class UVAL_ScoreDefinition* GetScoreToDisplay(int32 InDisplayedIndex);
	int32 GetScore(class UVAL_ScoreDefinition* InScoreDefinition);
};

// 0x10 (0x68 - 0x58)
// Class Palia.VAL_ScoreDefinition
class UVAL_ScoreDefinition : public UVAL_DataAsset
{
public:
	bool                                         bIsLowScoreBetter;                                 // 0x58(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bRepresentsTime;                                   // 0x59(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bHasMinValue;                                      // 0x5A(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3BAB[0x1];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        MinValue;                                          // 0x5C(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bHasMaxValue;                                      // 0x60(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3BAC[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        MaxValue;                                          // 0x64(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("VAL_ScoreDefinition");
		return Clss;
	}

};

// 0x0 (0x28 - 0x28)
// Class Palia.VAL_SequencerFunctionLibrary
class UVAL_SequencerFunctionLibrary : public UBlueprintFunctionLibrary
{
public:

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("VAL_SequencerFunctionLibrary");
		return Clss;
	}

	void UnBindPlayerToSequence(class UObject* InContext, class ALevelSequenceActor* InSequence, class AValeriaCharacter* InCharacter);
	void BindPlayerToSequence(class UObject* InContext, class ALevelSequenceActor* InSequence, class AValeriaCharacter* InCharacter);
};

// 0x58 (0x88 - 0x30)
// Class Palia.VAL_SequencerStandardBindingsDataAsset
class UVAL_SequencerStandardBindingsDataAsset : public UDataAsset
{
public:
	TMap<enum class EVAL_CharacterBodyType, class FName> StandardPlayerBindingsByBody;                      // 0x30(0x50)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	class FName                                  StandardPlayerBindingDefault;                      // 0x80(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("VAL_SequencerStandardBindingsDataAsset");
		return Clss;
	}

};

// 0x10 (0x58 - 0x48)
// Class Palia.VAL_ServerReserveRequestAsyncStream
class UVAL_ServerReserveRequestAsyncStream : public UVAL_MQTTMatchmakerServerAsyncStreamBase
{
public:
	uint8                                        Pad_3BB5[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("VAL_ServerReserveRequestAsyncStream");
		return Clss;
	}

};

// 0x10 (0x58 - 0x48)
// Class Palia.VAL_ServerKickAllAsyncStream
class UVAL_ServerKickAllAsyncStream : public UVAL_MQTTAsyncStreamBase
{
public:
	uint8                                        Pad_3BB6[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("VAL_ServerKickAllAsyncStream");
		return Clss;
	}

};

// 0x10 (0x58 - 0x48)
// Class Palia.VAL_ServerRegistrationRequestAsyncStream
class UVAL_ServerRegistrationRequestAsyncStream : public UVAL_MQTTMatchmakerServerAsyncStreamBase
{
public:
	uint8                                        Pad_3BB7[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("VAL_ServerRegistrationRequestAsyncStream");
		return Clss;
	}

};

// 0x358 (0x5E8 - 0x290)
// Class Palia.VAL_ShrineInteraction
class AVAL_ShrineInteraction : public AActor
{
public:
	uint8                                        Pad_3BC0[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UInteractableComponent*                InteractableComp;                                  // 0x298(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FQuestRewardConfig                    FirstTimeReward;                                   // 0x2A0(0x198)(Edit, BlueprintVisible, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected)
	struct FQuestRewardConfig                    RepeatReward;                                      // 0x438(0x198)(Edit, BlueprintVisible, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected)
	struct FGameplayTag                          CanCommunePrereqTag;                               // 0x5D0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FGameplayTag                          ShrineRelevantUpgradeTag;                          // 0x5D8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        ShrineRelevantUpgradeMaxLevel;                     // 0x5E0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_3BC1[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("VAL_ShrineInteraction");
		return Clss;
	}

	void Server_TryShrineTelemetry(class AValeriaCharacter* InCharacter, const class FString& InShrineName, const struct FVitalsChange& InVitalsChange, int32 InPreviousVitalsState, int32 InNewVitalsState);
	int32 GetRelevantUpgradeLevel(class AValeriaCharacter* InCharacter);
	void DetermineShrineUpgradeCost(class AValeriaCharacter* InCharacter, enum class EVitalType* InVitalType, int32* InCost);
	enum class EVAL_ShrineReadiness DetermineShrineReadiness(class AValeriaCharacter* InCharacter, bool InbCheckResources);
	bool CanPlayerCommune(class AValeriaCharacter* InCharacter);
};

// 0x20 (0x50 - 0x30)
// Class Palia.VAL_SocialActivityFeedManager
class UVAL_SocialActivityFeedManager : public ULocalPlayerSubsystem
{
public:
	FMulticastInlineDelegateProperty_            OnPostsRefreshed;                                  // 0x30(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TArray<class UVAL_ValeriagramPost*>          CachedPosts;                                       // 0x40(0x10)(ZeroConstructor, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("VAL_SocialActivityFeedManager");
		return Clss;
	}

	bool TryPostPhoto(struct FVAL_NewValeriagramPostInfo& InNewPostInfo);
	void OnPostsRefreshed__DelegateSignature(class UVAL_SocialActivityFeedManager* InSocialActivityFeedManager);
	void HandleChatManagerReceivedValeriagram(class UVAL_ValeriagramPost* InPostInfo);
	TArray<class UVAL_ValeriagramPost*> GetPosts();
	TSet<struct FGuid> GetOurAlreadyPostedPhotos();
};

// 0xC8 (0xF0 - 0x28)
// Class Palia.VAL_ValeriagramPost
class UVAL_ValeriagramPost : public UObject
{
public:
	struct FGuid                                 PostId;                                            // 0x28(0x10)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FUniqueNetIdRepl                      PosterId;                                          // 0x38(0x30)(BlueprintVisible, BlueprintReadOnly, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FDateTime                             PostTimestamp;                                     // 0x68(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                PostText;                                          // 0x70(0x10)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FGuid>                         PhotographIds;                                     // 0x80(0x10)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<class UTexture2D*>                    PhotographTextures;                                // 0x90(0x10)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	TSet<struct FUniqueNetIdRepl>                TaggedUserIds;                                     // 0xA0(0x50)(BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("VAL_ValeriagramPost");
		return Clss;
	}

};

// 0x20 (0x58 - 0x38)
// Class Palia.VAL_SocialActivityFeedSettings
class UVAL_SocialActivityFeedSettings : public UDeveloperSettings
{
public:
	int32                                        MaxCachedPaliagramPostCount;                       // 0x38(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3BD0[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FText                                  NewPaliagramPostReceivedMessageFormat;             // 0x40(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, Config, NativeAccessSpecifierPublic)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("VAL_SocialActivityFeedSettings");
		return Clss;
	}

};

// 0x0 (0x28 - 0x28)
// Class Palia.VAL_SortObjectArray_BPFuncLib
class UVAL_SortObjectArray_BPFuncLib : public UBlueprintFunctionLibrary
{
public:

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("VAL_SortObjectArray_BPFuncLib");
		return Clss;
	}

	TArray<class UObject*> SortObjectArray(TArray<class UObject*>& InArrayToSort, FDelegateProperty_& InPredicate);
	bool ComparatorPredicate__DelegateSignature(class UObject* InA, class UObject* InB);
};

// 0x10 (0x2A0 - 0x290)
// Class Palia.SpawnValidator
class ASpawnValidator : public AActor
{
public:
	TSubclassOf<class USpawnOnFoliageManager>    SpawnOnFoliageManager;                             // 0x290(0x8)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FTimerHandle                          MapOpenedTimer;                                    // 0x298(0x8)(NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("SpawnValidator");
		return Clss;
	}

	void HandleTimerComplete();
	void HandleMapOpened(const class FString& InFilename, bool InbLoadAsTemplate);
	void HandleDestroyed(class AActor* InDestroyedActor);
};

// 0x50 (0x80 - 0x30)
// Class Palia.VAL_SprayDataAsset
class UVAL_SprayDataAsset : public UPrimaryDataAsset
{
public:
	struct FGuid                                 SprayId;                                           // 0x30(0x10)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, AssetRegistrySearchable, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVAL_SprayData                        SprayData;                                         // 0x40(0x40)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("VAL_SprayDataAsset");
		return Clss;
	}

};

// 0x90 (0x320 - 0x290)
// Class Palia.VAL_Spray
class AVAL_Spray : public AActor
{
public:
	struct FVAL_SprayData                        SprayData;                                         // 0x290(0x40)(Edit, BlueprintVisible, BlueprintReadOnly, Net, EditConst, RepNotify, NativeAccessSpecifierPublic)
	uint8                                        Pad_3BE8[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UDecalComponent*                       DecalComponent;                                    // 0x2E0(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSoftObjectPtr<class UMaterialInterface>     SprayMaterial;                                     // 0x2E8(0x30)(Edit, BlueprintVisible, DisableEditOnInstance, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FName                                  SprayMaterialTextureParamName;                     // 0x318(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("VAL_Spray");
		return Clss;
	}

	void OnSprayAssetReplicated();
};

// 0x0 (0x28 - 0x28)
// Class Palia.VAL_SprayStatics
class UVAL_SprayStatics : public UBlueprintFunctionLibrary
{
public:

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("VAL_SprayStatics");
		return Clss;
	}

	void TrySpawnSpray(class AActor* InActorSource, TSoftObjectPtr<class UVAL_SprayDataAsset>& InSprayDataAsset);
};

// 0x40 (0xE0 - 0xA0)
// Class Palia.VAL_TimerComponent
class UVAL_TimerComponent : public UActorComponent
{
public:
	FMulticastInlineDelegateProperty_            OnTimerChanged;                                    // 0xA0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnDisplayedTimerChanged;                           // 0xB0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TArray<class UVAL_TimerInstance*>            TimerInstances;                                    // 0xC0(0x10)(Net, ZeroConstructor, NativeAccessSpecifierPrivate)
	TArray<class UVAL_TimerDefinition*>          TimersToDisplay;                                   // 0xD0(0x10)(Net, ZeroConstructor, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("VAL_TimerComponent");
		return Clss;
	}

	void Server_UnpauseTimer(class UVAL_TimerDefinition* InTimerDefinition);
	void Server_StopTimer(class UVAL_TimerDefinition* InTimerDefinition);
	void Server_StartTimer(class UVAL_TimerDefinition* InTimerDefinition);
	void Server_SetTimerToDisplay(class UVAL_TimerDefinition* InTimerDefinition, int32 InDisplayedIndex);
	void Server_PauseTimer(class UVAL_TimerDefinition* InTimerDefinition);
	void RpcClient_UpdateTimer(const struct FVAL_TimerStateStruct& InTimerState);
	void RpcClient_SetTimerToDisplay(class UVAL_TimerDefinition* InTimerDefinition, int32 InDisplayedIndex);
	bool IsTimerStopped(class UVAL_TimerDefinition* InTimerDefinition);
	bool IsTimerPaused(class UVAL_TimerDefinition* InTimerDefinition);
	bool HasTimerStarted(class UVAL_TimerDefinition* InTimerDefinition);
	void HandleCharacterUnstuck();
	class UVAL_TimerDefinition* GetTimerToDisplay(int32 InDisplayedIndex);
	int64 GetSecondsRemaining(class UVAL_TimerDefinition* InTimerDefinition);
	int64 GetSecondsOnTimerToDisplay(int32 InDisplayedIndex);
	int64 GetSecondsOnTimer(class UVAL_TimerDefinition* InTimerDefinition);
	int64 GetSecondsElapsed(class UVAL_TimerDefinition* InTimerDefinition);
};

// 0x28 (0x80 - 0x58)
// Class Palia.VAL_TimerDefinition
class UVAL_TimerDefinition : public UVAL_DataAsset
{
public:
	enum class ETimerDirection                   TimerDirection;                                    // 0x58(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3C35[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int64                                        CountdownSeconds;                                  // 0x60(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bShouldResetOnStart;                               // 0x68(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bShouldResetOnUnstuck;                             // 0x69(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3C37[0x6];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FVAL_TimerGameplayEventSpecification> GameplayEventSpecs;                                // 0x70(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("VAL_TimerDefinition");
		return Clss;
	}

};

// 0x88 (0xB0 - 0x28)
// Class Palia.VAL_TimerInstance
class UVAL_TimerInstance : public UObject
{
public:
	struct FVAL_TimerStateStruct                 TimerState;                                        // 0x28(0x30)(NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	uint8                                        Pad_3C38[0x58];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("VAL_TimerInstance");
		return Clss;
	}

};

// 0x80 (0xB0 - 0x30)
// Class Palia.VAL_TimerManager
class UVAL_TimerManager : public UGameInstanceSubsystem
{
public:
	uint8                                        Pad_3C3E[0x80];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("VAL_TimerManager");
		return Clss;
	}

	void SetTimer(struct FVAL_TimerHandle* InInOutHandle, struct FTimerParams& InTimerParams);
	void Server_OnTimeChanged();
	void Server_OnGameStateChanged(class AGameStateBase* InGameStateBase);
	void ClearTimer(struct FVAL_TimerHandle* InInHandle);
};

// 0x60 (0xB8 - 0x58)
// Class Palia.VAL_TintAsset
class UVAL_TintAsset : public UVAL_DataAsset
{
public:
	class FText                                  DisplayName;                                       // 0x58(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, AssetRegistrySearchable, NativeAccessSpecifierPublic)
	struct FGuid                                 ItemId;                                            // 0x70(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, AssetRegistrySearchable, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bDefaultUnlocked;                                  // 0x80(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3C46[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSoftObjectPtr<class UTexture2D>             IconOverlay;                                       // 0x88(0x30)(Edit, BlueprintVisible, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("VAL_TintAsset");
		return Clss;
	}

	TSoftObjectPtr<class UVAL_TintAsset> GetTintFromPersistID(int32 InPersistIdToGet);
	TArray<TSoftObjectPtr<class UVAL_TintAsset>> GetAllTintAssets();
};

// 0x8 (0x610 - 0x608)
// Class Palia.VillageValeriaGameMode
class AVillageValeriaGameMode : public AValeriaGameMode
{
public:
	uint8                                        Pad_3C48[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("VillageValeriaGameMode");
		return Clss;
	}

};

// 0x18 (0x628 - 0x610)
// Class Palia.VAL_TrailerRecordGameMode
class AVAL_TrailerRecordGameMode : public AVillageValeriaGameMode
{
public:
	bool                                         bCinematicMode;                                    // 0x610(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bHidePlayer;                                       // 0x611(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bHideHud;                                          // 0x612(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bPreventMovement;                                  // 0x613(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bPreventTurning;                                   // 0x614(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bSpawnVillagersOnSchedule;                         // 0x615(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3C4E[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        OverrideWorldStartTimeHour;                        // 0x618(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        OverrideWorldStartTimeMinute;                      // 0x61C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        OverrideWorldStartNormalizedDayTime;               // 0x620(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bSkipStandardBeginPlay;                            // 0x624(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3C4F[0x3];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("VAL_TrailerRecordGameMode");
		return Clss;
	}

	void SetWorldTimeForTrailer(int32 InHour, int32 InMinute);
};

// 0x10 (0x68 - 0x58)
// Class Palia.VAL_TransitiveDecorAsset
class UVAL_TransitiveDecorAsset : public UVAL_DataAsset
{
public:
	TArray<struct FTransitiveDecorProgressStep>  ProgressSteps;                                     // 0x58(0x10)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("VAL_TransitiveDecorAsset");
		return Clss;
	}

	TSoftObjectPtr<class UVAL_TransitiveDecorAsset> GetAssetByPersistId_Cast(int32 InPersistIdToGet);
};

// 0x80 (0xC8 - 0x48)
// Class Palia.VAL_TravelLoadingScreenStateRequester
class UVAL_TravelLoadingScreenStateRequester : public UPaliaScreenStateRequester
{
public:
	uint8                                        Pad_3C53[0x80];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("VAL_TravelLoadingScreenStateRequester");
		return Clss;
	}

	void HandleOnTeleportFlagsChanged(enum class EVAL_TeleportCompFlags InFlags);
	void HandleOnPawnChanged(class APawn* InPawn);
};

// 0x88 (0xB8 - 0x30)
// Class Palia.VAL_TutorialFlagDefinition
class UVAL_TutorialFlagDefinition : public UDataAsset
{
public:
	class FText                                  DisplayName;                                       // 0x30(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	class FText                                  Description;                                       // 0x48(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	TSet<TSoftObjectPtr<class UVAL_TutorialFlagDefinition>> PrerequisiteFlags;                                 // 0x60(0x50)(Edit, BlueprintVisible, BlueprintReadOnly, UObjectWrapper, NativeAccessSpecifierPublic)
	bool                                         bAllowOverOtherModals;                             // 0xB0(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3C55[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("VAL_TutorialFlagDefinition");
		return Clss;
	}

};

// 0x80 (0xB0 - 0x30)
// Class Palia.VAL_TutorialFlagsManager
class UVAL_TutorialFlagsManager : public ULocalPlayerSubsystem
{
public:
	FMulticastInlineDelegateProperty_            OnTutorialFlagTriggered;                           // 0x30(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	bool                                         bIsTutorialEnabled;                                // 0x40(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_3C84[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSet<TSoftObjectPtr<class UVAL_TutorialFlagDefinition>> SetFlagsSet;                                       // 0x48(0x50)(UObjectWrapper, NativeAccessSpecifierPrivate)
	class FString                                PersistentJsonFilePathPrefix;                      // 0x98(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_3C85[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("VAL_TutorialFlagsManager");
		return Clss;
	}

	void TryToTriggerTutorialForFlag(TSoftObjectPtr<class UVAL_TutorialFlagDefinition> InFlag);
	void SetIsTutorialEnabled(bool InbValue);
	void SetFlag(TSoftObjectPtr<class UVAL_TutorialFlagDefinition> InFlag);
	void SetAllFlags();
	void OnTutorialFlagTriggered__DelegateSignature(class UVAL_TutorialFlagsManager* InTutorialFlagsManager, TSoftObjectPtr<class UVAL_TutorialFlagDefinition> InTriggeredFlag);
	bool IsTutorialEnabled();
	bool IsFlagSet(TSoftObjectPtr<class UVAL_TutorialFlagDefinition> InFlag);
	TSet<TSoftObjectPtr<class UVAL_TutorialFlagDefinition>> GetAllSetFlags();
	TSet<TSoftObjectPtr<class UVAL_TutorialFlagDefinition>> GetAllPossibleFlags();
	void ClearFlag(TSoftObjectPtr<class UVAL_TutorialFlagDefinition> InFlag);
	void ClearAllFlags();
	bool CanStartTutorialForFlag(TSoftObjectPtr<class UVAL_TutorialFlagDefinition> InFlag);
};

// 0x0 (0x28 - 0x28)
// Class Palia.VAL_UniqueNetIdUtils
class UVAL_UniqueNetIdUtils : public UBlueprintFunctionLibrary
{
public:

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("VAL_UniqueNetIdUtils");
		return Clss;
	}

	bool IsValid(struct FUniqueNetIdRepl& InNetId);
	class FString GetSessionIdString(struct FBlueprintSessionResult& InSessionResult);
	struct FUniqueNetIdRepl GetNetIdFromPlayerState(class APlayerState* InPlayerState);
	struct FUniqueNetIdRepl GetNetIdFromPlayerController(class APlayerController* InPlayerController);
	struct FUniqueNetIdRepl GetNetIdFromLocalPlayer(class ULocalPlayer* InLocalPlayer);
	struct FUniqueNetIdRepl GetNetIdFromDirectMessageTarget(struct FMessageTarget& InMessageTarget);
	struct FUniqueNetIdRepl GetNetIdFromChatMessageSender(struct FValeriaChatMessage& InChatMessage);
	struct FGuid GetAccountId(struct FUniqueNetIdRepl& InNetId);
	bool EqualEqual(struct FUniqueNetIdRepl& InA, struct FUniqueNetIdRepl& InB);
};

// 0x0 (0x350 - 0x350)
// Class Palia.VAL_ValeriaBaseAnimInstance
class UVAL_ValeriaBaseAnimInstance : public UAnimInstance
{
public:

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("VAL_ValeriaBaseAnimInstance");
		return Clss;
	}

};

// 0x0 (0x30 - 0x30)
// Class Palia.VAL_VoiceSet
class UVAL_VoiceSet : public UPrimaryDataAsset
{
public:

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("VAL_VoiceSet");
		return Clss;
	}

};

// 0x10 (0x4C8 - 0x4B8)
// Class Palia.VAL_WorldSettings
class AVAL_WorldSettings : public AWorldSettings
{
public:
	bool                                         bIsGliderEnabled;                                  // 0x4B8(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bIsMinigameWorld;                                  // 0x4B9(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_3CA2[0x6];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UTeleportTravelConfigAsset*            UnstuckOverrideLocation;                           // 0x4C0(0x8)(Edit, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("VAL_WorldSettings");
		return Clss;
	}

	bool IsMinigameWorld();
	bool IsGliderEnabled();
	class UTeleportTravelConfigAsset* GetUnstuckDestination();
};

// 0x0 (0x2A0 - 0x2A0)
// Class Palia.ViewComponent
class UViewComponent : public USceneComponent
{
public:

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("ViewComponent");
		return Clss;
	}

};

// 0x10 (0x40 - 0x30)
// Class Palia.VillagerCostumeDataAsset
class UVillagerCostumeDataAsset : public UDataAsset
{
public:
	class USkeletalMesh*                         TorsoMesh;                                         // 0x30(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USkeletalMesh*                         HeadMesh;                                          // 0x38(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("VillagerCostumeDataAsset");
		return Clss;
	}

};

// 0x18 (0x48 - 0x30)
// Class Palia.VillagerDialogueGlobalConfig
class UVillagerDialogueGlobalConfig : public UDataAsset
{
public:
	float                                        VeryFastCharacterScrollInterval;                   // 0x30(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        FastCharacterScrollInterval;                       // 0x34(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MediumCharacterScrollInterval;                     // 0x38(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SlowCharacterScrollInterval;                       // 0x3C(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        VerySlowCharacterScrollInterval;                   // 0x40(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3CA4[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("VillagerDialogueGlobalConfig");
		return Clss;
	}

};

// 0x80 (0x120 - 0xA0)
// Class Palia.VillagerGiftHistoryComponent
class UVillagerGiftHistoryComponent : public UActorComponent
{
public:
	uint8                                        Pad_3CB4[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	FMulticastInlineDelegateProperty_            OnVillagerGiftHistoryChangedDel;                   // 0xA8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	bool                                         bGaveAcceptedGiftPreCommit;                        // 0xB8(0x1)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_3CB5[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FVillagerGiftHistory>          History;                                           // 0xC0(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, EditConst, RepNotify, NativeAccessSpecifierPrivate)
	struct FGiftHistoryPersistBlock              GiftHistoryPersistBlock;                           // 0xD0(0x50)(NativeAccessSpecifierPrivate)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("VillagerGiftHistoryComponent");
		return Clss;
	}

	void OnRep_History();
	void NotifyHistoryChanged();
	bool HasEverReceivedGift(int32 InVillagerCoreId, TSoftObjectPtr<class UVAL_ItemTypeDefinitionAsset>& InItemType);
	bool AlreadyGiftedItemThisReset(int32 InVillagerCoreId, TSoftObjectPtr<class UVAL_ItemTypeDefinitionAsset>& InItemType, class AValeriaCharacter* InCharacter);
};

// 0xA0 (0xD0 - 0x30)
// Class Palia.VillagerGiftPreferenceMetaConfigDataAsset
class UVillagerGiftPreferenceMetaConfigDataAsset : public UDataAsset
{
public:
	TMap<enum class EVillagerGiftDifficultyGrouping, int32> NumberOfPreferencesPerDifficulty;                  // 0x30(0x50)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	TMap<enum class EVillagerGiftDifficultyGrouping, int32> MinLevelPerDifficulty;                             // 0x80(0x50)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("VillagerGiftPreferenceMetaConfigDataAsset");
		return Clss;
	}

};

// 0x8 (0xA8 - 0xA0)
// Class Palia.VillagerGiftReceiverComponent
class UVillagerGiftReceiverComponent : public UActorComponent
{
public:
	uint8                                        Pad_3CC7[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("VillagerGiftReceiverComponent");
		return Clss;
	}

	bool IsVillagerInGiftableSpace();
	bool IsInteractable(class AValeriaCharacter* InCharacter, const struct FInteractEventParams& InEventParams);
	int32 InteractPriority();
	bool GetText(class AValeriaCharacter* InCharacter, enum class EInteractEventIndex InEventIndex, struct FGetTextParams* InParams);
	enum class EGiftPredictedResponse GetPredictedResponseFor(class AValeriaCharacter* InCharacter, TSoftObjectPtr<class UVAL_ItemTypeDefinitionAsset>& InItemType, bool* InbAlreadyReceived);
	bool CanGiftVillager(class AValeriaCharacter* InCharacter);
};

// 0x98 (0x138 - 0xA0)
// Class Palia.VillagerMailInboxComponent
class UVillagerMailInboxComponent : public UActorComponent
{
public:
	uint8                                        Pad_3CD7[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	FMulticastInlineDelegateProperty_            OnChanged;                                         // 0xA8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FMailInboxPersistBlock                MailInboxPersistBlock;                             // 0xB8(0x60)(Net, RepNotify, NativeAccessSpecifierPrivate)
	uint8                                        Pad_3CD8[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FTimerHandle                          CheckForMailArrivalHandle;                         // 0x120(0x8)(NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FTimerHandle                          DeleteMailForQuestsThatAlreadyProcedHandle;        // 0x128(0x8)(NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FTimerHandle                          CheckForAutoSendMailHandle;                        // 0x130(0x8)(NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("VillagerMailInboxComponent");
		return Clss;
	}

	void RpcServer_MarkMessageAsRead(int32 InPersistId, int64 InSentTimestamp);
	void RpcServer_MarkMessageAsOpened(int32 InPersistId, int64 InSentTimestamp);
	void RpcServer_CollectReward(int32 InPersistId, int32 InRewardIndex, int64 InSentTimestamp);
	void OnInboxReplicated();
	bool HasNewMail();
	int64 FindMostRecentSentMailTimestamp(int32 InPersistId);
	int64 FindMostRecentDeliveredMailTimestamp();
	void DeleteMailForQuestsThatAlreadyProced();
	void CheckForMailArrival();
};

// 0x128 (0x158 - 0x30)
// Class Palia.VillagerManager
class UVillagerManager : public UGameInstanceSubsystem
{
public:
	FMulticastInlineDelegateProperty_            OnVillagersOnMapChanged;                           // 0x30(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnDialogueRoomVillagerSpawned;                     // 0x40(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnDialogueRoomVillagerDespawned;                   // 0x50(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TArray<class AValeriaVillagerCharacter*>     WorldVillagers;                                    // 0x60(0x10)(ZeroConstructor, NativeAccessSpecifierPrivate)
	TArray<class AValeriaVillagerCharacter*>     EventVillagers;                                    // 0x70(0x10)(ZeroConstructor, NativeAccessSpecifierPrivate)
	uint8                                        Pad_3CF3[0xA0];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class AValeriaVillagerCharacter*>     ActiveVillagers;                                   // 0x120(0x10)(ZeroConstructor, NativeAccessSpecifierPrivate)
	uint8                                        Pad_3CF4[0x28];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("VillagerManager");
		return Clss;
	}

	void VillagerAbsentStateChanged(class AValeriaVillagerCharacter* InInVillager, bool InbInAbsent);
	TArray<class AValeriaVillagerCharacter*> GetWorldVillagers();
	TArray<class AValeriaVillagerCharacter*> GetEventVillagers();
	class AValeriaVillagerCharacter* FindNamedVillagerWithContext(class FName& InVillagerName, enum class EWorldLocationContext InContext);
	class AValeriaVillagerCharacter* FindClosestVillagerByType(struct FVector& InLocation, TSubclassOf<class AValeriaVillagerCharacter> InClassType);
	bool DoesWorldVillagerExistOnCurrentMap(int32 InInVillagerId);
	bool DoesAnyVisitVillagerHaveSpawnPoint(class AValeriaCharacter* InInInstigatorCharacter, class UPrivateSpaceConfig* InInPrivateSpaceConfig, class AValeriaTargetPoint* InInTargetPoint);
	bool DoesAnyCoreVisitVillagerExist(class AValeriaCharacter* InInInstigatorCharacter, class UPrivateSpaceConfig* InInPrivateSpaceConfig, const TArray<int32>& InInVillagerCoreIds);
};

// 0x50 (0x80 - 0x30)
// Class Palia.VillagerMasterScheduleConfig
class UVillagerMasterScheduleConfig : public UDataAsset
{
public:
	TMap<TSoftObjectPtr<class UWorld>, TSoftObjectPtr<class UVillagerWeeklyScheduleConfig>> WeeklySchedulesPerMap;                             // 0x30(0x50)(Edit, DisableEditOnInstance, Protected, UObjectWrapper, NativeAccessSpecifierProtected)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("VillagerMasterScheduleConfig");
		return Clss;
	}

	bool GetBestWorldForCurrentActivity(class UObject* InContext, TSoftObjectPtr<class UWorld>* InOutBestWorld);
	bool GetBestScheduleActivity(class UObject* InContext, const class FString& InLevelName, struct FVillagerScheduleActivity* InOutBestScheduleActivity);
};

// 0x20 (0x800 - 0x7E0)
// Class Palia.VillagerMovementComponent
class UVillagerMovementComponent : public UValeriaNpcMovementComponent
{
public:
	struct FVector                               LastKnownSafeLocation;                             // 0x7E0(0x18)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bHasSafeLocation;                                  // 0x7F8(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_3CF9[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("VillagerMovementComponent");
		return Clss;
	}

	bool ReturnToSafeLocation();
	void RegisterSafeLocation(struct FVector& InNewLocation);
	struct FVector GetLastKnownSafeLocation();
};

// 0x160 (0x200 - 0xA0)
// Class Palia.VillagerQuestProgressComponent
class UVillagerQuestProgressComponent : public UActorComponent
{
public:
	uint8                                        Pad_3D02[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	FMulticastInlineDelegateProperty_            OnChanged;                                         // 0xA8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FChallengeState                       ChallengeState;                                    // 0xB8(0x68)(Net, RepNotify, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnChallengeCompleted;                              // 0x120(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	class AValeriaCharacter*                     VC;                                                // 0x130(0x8)(ZeroConstructor, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UPersistentTagMapComponent*            TagMapComponent;                                   // 0x138(0x8)(ExportObject, ZeroConstructor, Transient, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FTimerHandle                          CheckQuestsCompleteabilityHandle;                  // 0x140(0x8)(NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FQuestProgressPersistBlock            QuestProgressPersistBlock;                         // 0x148(0x60)(NativeAccessSpecifierPrivate)
	struct FChallengeProgressPersistBlock        ChallengeProgressPersistBlock;                     // 0x1A8(0x58)(NativeAccessSpecifierPrivate)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("VillagerQuestProgressComponent");
		return Clss;
	}

	void WasChanged();
	void RpcClient_ChallengeCompleted(const struct FGuid& InGuid);
	void OnRep_ChallengeState();
	bool HasTrackedDialogueForWorldVillager(class AValeriaVillagerCharacter* InVillager);
	bool HasTrackedDialogueForVillagerId(int32 InVillagerId);
	bool HasHintForActiveQuestsForWorldVillager(class AValeriaVillagerCharacter* InVillager);
	bool HasHintForActiveQuestsForVillagerId(int32 InVillagerId);
	bool HasDailyChatDialogueForWorldVillager(class AValeriaVillagerCharacter* InVillager);
	bool HasDailyChatDialogueForVillagerId(int32 InVillagerId);
};

// 0x20 (0x50 - 0x30)
// Class Palia.VillagerRelationshipRewardsMetaConfigDataAsset
class UVillagerRelationshipRewardsMetaConfigDataAsset : public UDataAsset
{
public:
	TArray<struct FVillagerRelationshipIntervalReward> RewardsForFriendshipLevel;                         // 0x30(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FVillagerRelationshipIntervalReward> RewardsForRomanceLevel;                            // 0x40(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("VillagerRelationshipRewardsMetaConfigDataAsset");
		return Clss;
	}

};

// 0x78 (0x118 - 0xA0)
// Class Palia.VillagerRelationshipsComponent
class UVillagerRelationshipsComponent : public UActorComponent
{
public:
	uint8                                        Pad_3D1E[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	FMulticastInlineDelegateProperty_            OnChanged;                                         // 0xA8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnChangeNotifAdded;                                // 0xB8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FVillagerRelationshipsPersistBlock    Relationships;                                     // 0xC8(0x50)(Edit, BlueprintVisible, BlueprintReadOnly, Net, EditConst, RepNotify, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("VillagerRelationshipsComponent");
		return Clss;
	}

	void RpcServer_BreakUpWithVillager(int32 InVillagerCoreId);
	void RpcClient_RelationshipChangeMade(const struct FVillagerRelationshipChange& InChange);
	void OnReplicatedAndShouldBroadcast();
	bool HasMetVillager(int32 InVillagerCoreId);
	int32 GetVillagerCoreIdFromVillagerId(int32 InVillagerId);
	int32 GetRelationshipValue(int32 InVillagerCoreId, enum class ERelationshipType InType);
	float GetRelationshipLevelProgress(int32 InVillagerCoreId, enum class ERelationshipType InType);
	class FText GetRelationshipLevelName(int32 InVillagerCoreId, enum class ERelationshipType InType);
	int32 GetRelationshipLevel(int32 InVillagerCoreId, enum class ERelationshipType InType);
	struct FVillagerRelationship GetRelationship(int32 InVillagerCoreId);
	void Client_BreakUpWithVillager(int32 InVillagerCoreId);
};

// 0x50 (0x80 - 0x30)
// Class Palia.VillagerScheduleConfig
class UVillagerScheduleConfig : public UDataAsset
{
public:
	TMap<class FName, struct FVillagerScheduleActivity> VillagerScheduledActivities;                       // 0x30(0x50)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("VillagerScheduleConfig");
		return Clss;
	}

	TMap<class FName, struct FVillagerScheduleActivity> GetVillagerScheduledActivities();
	bool GetBestScheduleActivity(class UObject* InContext, struct FVillagerScheduleActivity* InOutBestScheduleActivity);
};

// 0x40 (0xE0 - 0xA0)
// Class Palia.VillagerStoreComponent
class UVillagerStoreComponent : public UActorComponent
{
public:
	TArray<struct FStoreItem>                    ActiveItemsForSale;                                // 0xA0(0x10)(BlueprintVisible, Net, ZeroConstructor, RepNotify, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_3D42[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UVillagerStoreConfig*                  StoreConfig;                                       // 0xB8(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	FMulticastInlineDelegateProperty_            OnStoreInventoryChanged;                           // 0xC0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, Protected, NativeAccessSpecifierProtected)
	FMulticastInlineDelegateProperty_            OnStoreActionComplete;                             // 0xD0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, Protected, NativeAccessSpecifierProtected)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("VillagerStoreComponent");
		return Clss;
	}

	bool StoreCanBuyItem(const struct FBagSlotLocation& InLocation);
	void RpcServer_SellItem(const struct FBagSlotLocation& InLocation, int32 InNumToSell);
	void RpcServer_OpenStore(int32 InVillagerConfigId, class UVillagerStoreConfig* InConfig);
	void RpcServer_BuyItem(class UVAL_ItemTypeDefinitionAsset* InItemType, int32 InNumToBuy, bool InbIsRecipe);
	void RpcClient_StoreActionComplete(bool InbBuy, bool InbSuccess);
	void RpcClient_SellItemsReady();
	void OnRep_SellItems();
	bool HasStore(int32 InVillagerConfigId, struct FClientStoreInfo* InClientStoreInfo);
	TArray<struct FStoreItem> GetStoreItemsForConfig(int32 InVillagerConfigId, class UVillagerStoreConfig* InConfig);
	void Client_SetVillagerStore(int32 InVillagerConfigId);
	void Client_SetStoreByConfig(class UVillagerStoreConfig* InConfig);
	void Client_SellItem_Custom(const struct FBagSlotLocation& InSlotLocation, int32 InNumToSell);
	void Client_SellItem(const struct FBagSlotLocation& InLocation);
	void Client_OpenStore();
	void Client_BuyItem(int32 InStoreItemIndex, int32 InNumToBuy);
};

// 0x10 (0xB0 - 0xA0)
// Class Palia.StoreInteractorComponent
class UStoreInteractorComponent : public UActorComponent
{
public:
	uint8                                        Pad_3D4E[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UVillagerStoreConfig*                  StoreConfig;                                       // 0xA8(0x8)(Edit, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("StoreInteractorComponent");
		return Clss;
	}

	struct FUseEventResult OnClientInteract(class UInteractableComponent* InInteractable, class AValeriaPlayerController* InCharacter, const struct FInteractEventParams& InEventParams);
	bool IsStoreOpen(class AValeriaCharacter* InCharacter);
	bool IsInteractable(class AValeriaCharacter* InCharacter, const struct FInteractEventParams& InEventParams);
	int32 InteractPriority();
	bool GetText(class AValeriaCharacter* InCharacter, enum class EInteractEventIndex InEventIndex, struct FGetTextParams* InParams);
};

// 0x10 (0xB0 - 0xA0)
// Class Palia.VillagerStoreInteractableComponent
class UVillagerStoreInteractableComponent : public UActorComponent
{
public:
	uint8                                        Pad_3D58[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("VillagerStoreInteractableComponent");
		return Clss;
	}

	struct FUseEventResult OnClientInteract(class UInteractableComponent* InInteractable, class AValeriaPlayerController* InCharacter, const struct FInteractEventParams& InEventParams);
	bool IsInteractable(class AValeriaCharacter* InPlayer, const struct FInteractEventParams& InEventParams);
	int32 InteractPriority();
	bool GetText(class AValeriaCharacter* InPlayer, enum class EInteractEventIndex InEventIndex, struct FGetTextParams* InParams);
};

// 0x1C8 (0x1F8 - 0x30)
// Class Palia.VillagerStoreConfig
class UVillagerStoreConfig : public UDataAsset
{
public:
	class FText                                  DisplayName;                                       // 0x30(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	class UCurrencyConfig*                       PrimaryCurrency;                                   // 0x48(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLootRequirements                     Requirements;                                      // 0x50(0xB0)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	TArray<enum class EItemCategory>             BuyCategories;                                     // 0x100(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	struct FTagList                              BuyTags;                                           // 0x110(0x20)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	TArray<struct FStoreItemConfig>              Items;                                             // 0x130(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FStoreRecipeConfig>            Recipes;                                           // 0x140(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	int32                                        VillagerIdToGainFriendshipFor;                     // 0x150(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        VillagerCoreIdToGainFriendshipFor;                 // 0x154(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FRuntimeFloatCurve                    FriendshipForCost;                                 // 0x158(0x88)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	TArray<struct FQuestRewardConfig>            BuyRewards;                                        // 0x1E0(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	enum class EStoreTab                         StoreTabOnOpen;                                    // 0x1F0(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3D59[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("VillagerStoreConfig");
		return Clss;
	}

};

// 0x230 (0x2D0 - 0xA0)
// Class Palia.VillagerVisitComponent
class UVillagerVisitComponent : public UActorComponent
{
public:
	uint8                                        Pad_3D80[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UPrivateSpaceVillagerDeterminantConfig* HousingVillagerDeterminantConfig;                  // 0xA8(0x8)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        HousingVillagerVisitOffPlotCheckRate;              // 0xB0(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        InPrivateSpaceVisitCheckRate;                      // 0xB4(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        VillagerVisitPostActiveVisitEndCheckTime;          // 0xB8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        QueuedActiveVillagerVisitToEndCheckRate;           // 0xBC(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        ActiveVillagerVisitCompletionCheckRate;            // 0xC0(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_3D81[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	FMulticastInlineDelegateProperty_            OnHousingVillagerVisitReadyChanged;                // 0xC8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TArray<struct FActiveVillagerVisit>          ActiveVillagerVisits;                              // 0xD8(0x10)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, Transient, RepNotify, NativeAccessSpecifierPublic)
	bool                                         bHousingVillagerVisitReady;                        // 0xE8(0x1)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, Transient, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3D82[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FSavedVillagerVisitArray              SavedHousingVillagerVisits;                        // 0xF0(0x10)(NativeAccessSpecifierPublic)
	TMap<struct FGuid, struct FSavedVillagerVisitArray> SavedPrivateSpaceVillagerVisits;                   // 0x100(0x50)(NativeAccessSpecifierPublic)
	TArray<struct FPrivateSpaceScheduledVillagerSpawnInfo> PrivateSpaceScheduledVillagerSpawnInfos;           // 0x150(0x10)(ZeroConstructor, Transient, NativeAccessSpecifierPublic)
	TSet<struct FGuid>                           CompletedVisits;                                   // 0x160(0x50)(NativeAccessSpecifierPublic)
	class UPrivateSpaceManager*                  PrivateSpaceManager;                               // 0x1B0(0x8)(ZeroConstructor, Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class AValeriaCharacter*                     CachedCharOwner;                                   // 0x1B8(0x8)(ZeroConstructor, Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bOnHousingPlot;                                    // 0x1C0(0x1)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_3D83[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UPrivateSpaceConfig*                   ActivePrivateSpaceConfig;                          // 0x1C8(0x8)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<struct FActiveVillagerVisit>          QueuedActiveVillagerVisitsToEnd;                   // 0x1D0(0x10)(ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	TArray<struct FActiveVillagerVisit>          QueuedActiveVillagerVisitsToEndOnLeave;            // 0x1E0(0x10)(ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	struct FTimerHandle                          CheckForHousingVillagerVisitOffPlotTimerHandle;    // 0x1F0(0x8)(NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FTimerHandle                          CheckForHousingVillagerVisitOnPlotTimerHandle;     // 0x1F8(0x8)(NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FTimerHandle                          CheckForPrivateSpaceVillagerVisitInPrivateSpaceTimerHandle; // 0x200(0x8)(NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FTimerHandle                          CheckForVillagerVisitPostActiveVisitEndTimerHandle; // 0x208(0x8)(NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FTimerHandle                          CheckForQueuedActiveVillagerVisitToEndTimerHandle; // 0x210(0x8)(NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FTimerHandle                          CheckForActiveVillagerVisitCompletionTimerHandle;  // 0x218(0x8)(NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_3D84[0xB0];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("VillagerVisitComponent");
		return Clss;
	}

	void TryEndQueuedActiveVillagerVisitsToEnd();
	void TryCompleteActiveVillagerVisits();
	void RpcServer_Debug_StartVillagerVisit(class UPrivateSpaceConfig* InInPrivateSpaceConfig, class UPrivateSpaceVillagerVisitConfig* InInVillagerVisitConfig, bool InbSkipTimeDelay);
	void RpcServer_Debug_ResetAllVillagerVisits();
	void RpcServer_Debug_CompleteVillagerVisit(class UPrivateSpaceVillagerVisitConfig* InInVillagerVisitConfig);
	void RpcServer_Debug_CompleteActiveVillagerVisits();
	void RpcClient_InitializeCompletedVisitGuids(TArray<struct FGuid>& InInGuids);
	void RpcClient_Debug_ResetAllCompletedVisits();
	void RpcClient_AddCompletedVisitGuid(struct FGuid& InInGuid);
	void PostActiveVillagerVisitEnd(const struct FActiveVillagerVisit& InInActiveVillagerVisit);
	void OnRep_bHousingVillagerVisitReady();
	void OnRep_ActiveVillagerVisits();
	bool IsVisitActive(class UPrivateSpaceVillagerVisitConfig* InVisitConfig);
	bool IsScheduledVisitActive(int32 InInVillagerId);
	bool IsPlayerInPrivateSpaceOrHousingPlot();
	bool HasCompletedVisit(class UPrivateSpaceVillagerVisitConfig* InVisitConfig);
	void HandleVillagerInPrivateSpaceForScheduleChanged(class UPrivateSpaceConfig* InPrivateSpaceConfig);
	void HandleLeftPrivateSpace(class AValeriaCharacter* InVC, class UPrivateSpaceConfig* InPrivateSpaceConfig);
	void HandleEnteredPrivateSpace(class AValeriaCharacter* InVC, class UPrivateSpaceConfig* InPrivateSpaceConfig);
	void Debug_StartVillagerVisit(class UPrivateSpaceConfig* InInPrivateSpaceConfig, class UPrivateSpaceVillagerVisitConfig* InInVillagerVisitConfig, bool InbSkipTimeDelay);
	void Debug_ResetAllVillagerVisits();
	void Debug_CompleteVillagerVisit(class UPrivateSpaceVillagerVisitConfig* InInVillagerVisitConfig);
	void Debug_CompleteActiveVillagerVisits();
	void CheckForPrivateSpaceVillagerVisitStartAndTryStartVisit();
	void CheckForPrivateSpaceVillagerVisitStart(class UPrivateSpaceConfig* InInPrivateSpaceConfig);
	void CheckForPrivateSpaceScheduledVillagerVisitStart(class UPrivateSpaceConfig* InInPrivateSpaceConfig);
	void CheckForHousingVillagerVisitStartAndTryStartVisit();
	void CheckForHousingVillagerVisitStart();
};

// 0x30 (0x60 - 0x30)
// Class Palia.VillagerWeeklyScheduleConfig
class UVillagerWeeklyScheduleConfig : public UDataAsset
{
public:
	TSoftObjectPtr<class UVillagerScheduleConfig> FirstDaySchedule;                                  // 0x30(0x30)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("VillagerWeeklyScheduleConfig");
		return Clss;
	}

	bool GetBestScheduleActivity(class UObject* InContext, struct FVillagerScheduleActivity* InOutBestScheduleActivity);
};

// 0x60 (0x1F8 - 0x198)
// Class Palia.PersistedVitalsComponent
class UPersistedVitalsComponent : public UVitalsComponent
{
public:
	uint8                                        Pad_3D86[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FVitalsPersistBlock                   VitalsPersistBlock;                                // 0x1A0(0x58)(NativeAccessSpecifierPrivate)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("PersistedVitalsComponent");
		return Clss;
	}

};

// 0x18 (0x48 - 0x30)
// Class Palia.VoiceLocalPlayerSubsystem
class UVoiceLocalPlayerSubsystem : public ULocalPlayerSubsystem
{
public:
	uint8                                        Pad_3D89[0x18];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("VoiceLocalPlayerSubsystem");
		return Clss;
	}

	void UnmuteAudioDevices();
	void MuteAudioDevices();
	bool LeaveRoom(const class FString& InRoomName);
	bool JoinRoom(const class FString& InRoomName);
	bool IsMuted();
};

// 0x90 (0x130 - 0xA0)
// Class Palia.WallpaperComponent
class UWallpaperComponent : public UActorComponent
{
public:
	uint8                                        Pad_3D8D[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FWallpaperItem>                Wallpapers;                                        // 0xB0(0x10)(BlueprintVisible, Net, ZeroConstructor, Transient, RepNotify, NativeAccessSpecifierPublic)
	TArray<struct FPersistToComponentTagMapping> PersistAnchorToMeshComponentMapping;               // 0xC0(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TArray<struct FWallpaperItem>                Client_Wallpapers;                                 // 0xD0(0x10)(ZeroConstructor, Transient, NativeAccessSpecifierPrivate)
	uint8                                        Pad_3D8E[0x50];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("WallpaperComponent");
		return Clss;
	}

	void UpdateVisuals();
	void OnRep_WallpaperReplication();
	struct FUseEventResult OnClientInteract(class UInteractableComponent* InInteractable, class AValeriaPlayerController* InCharacter, const struct FInteractEventParams& InEventParams);
	bool IsInteractable(class AValeriaCharacter* InCharacter, const struct FInteractEventParams& InEventParams);
	int32 InteractPriority();
	bool GetText(class AValeriaCharacter* InCharacter, enum class EInteractEventIndex InEventIndex, struct FGetTextParams* InParams);
	void Client_ReapplyMaterial(bool InCheckBSide);
};

// 0xA0 (0x140 - 0xA0)
// Class Palia.WarpStoneComponent
class UWarpStoneComponent : public UActorComponent
{
public:
	uint8                                        Pad_3D92[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FWarpStone>                    WarpStones;                                        // 0xA8(0x10)(Edit, BlueprintVisible, Net, ZeroConstructor, RepNotify, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnChanged;                                         // 0xB8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TArray<class AActor*>                        WarpStoneActors;                                   // 0xC8(0x10)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	bool                                         DoNotTick;                                         // 0xD8(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         DoNotReplicate;                                    // 0xD9(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_3D93[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        Cooldown;                                          // 0xDC(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_3D94[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FWarpStonePersistBlock                WarpStonePersistBlock;                             // 0xE8(0x58)(NativeAccessSpecifierPrivate)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("WarpStoneComponent");
		return Clss;
	}

	void RegisterWarpStoneActor(class AActor* InActor);
	void OnRep_WarpStones();
	TArray<class AActor*> GetWarpStoneActors();
	float GetTimeUntilNextUse();
	bool CanUseWarpStones();
	bool AttemptToUseWarpStone(const struct FGuid& InWarpStoneId);
	bool AreWarpStonesEnabled();
	bool AddWarpStone(const struct FGuid& InWarpStoneId);
	bool AddFlowSprite(int32 InFlowSpriteId, const struct FGuid& InWarpStoneId);
};

// 0x40 (0x70 - 0x30)
// Class Palia.WarpStoneConfig
class UWarpStoneConfig : public UDataAsset
{
public:
	struct FGuid                                 WarpStoneId;                                       // 0x30(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<int32>                                FlowSpriteIds;                                     // 0x40(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	int32                                        CurrencyCost;                                      // 0x50(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  LocationName;                                      // 0x54(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  LocationNameLabel;                                 // 0x5C(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIsInHousingPlot;                                  // 0x64(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3D95[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UMaterialInstance*                     PreviewMaterial;                                   // 0x68(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("WarpStoneConfig");
		return Clss;
	}

};

// 0x0 (0x28 - 0x28)
// Class Palia.Waterable
class IWaterable : public IInterface
{
public:

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("Waterable");
		return Clss;
	}

	bool Server_WaterPosition(struct FVector& InWaterLocation, class AValeriaCharacter* InCharacter, struct FBagSlotLocation& InCanLocation, int32 InUseWaterAmount);
	struct FVector GetSnapLocationFromWaterLocation(struct FVector& InWaterLocation);
};

// 0x68 (0x2F8 - 0x290)
// Class Palia.WaterableObject
class AWaterableObject : public AActor
{
public:
	uint8                                        Pad_3D98[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class USceneComponent*                       WaterableObjectRootComponent;                      // 0x298(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UAkComponent*                          WaterableObjectAkComponent;                        // 0x2A0(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        MaxWaterAmount;                                    // 0x2A8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        WaterRemovalCountdownTime;                         // 0x2AC(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        WaterAmountRemovedPerSecond;                       // 0x2B0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bHideWaterProgressWidgetWhenEmpty;                 // 0x2B4(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bHideWaterProgressWidgetWhenFull;                  // 0x2B5(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_3D99[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	FMulticastInlineDelegateProperty_            OnWaterableObjectFilled;                           // 0x2B8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnWaterableObjectUnfilled;                         // 0x2C8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	int32                                        CurrentWaterAmount;                                // 0x2D8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, EditConst, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        PreviousWaterAmount;                               // 0x2DC(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class EVAL_WaterFillType                PreviousWaterFillType;                             // 0x2E0(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_3D9A[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FTimerHandle                          RemoveWaterCountdownTimerHandle;                   // 0x2E8(0x8)(NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FTimerHandle                          RemoveWaterOnRepeatTimerHandle;                    // 0x2F0(0x8)(NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("WaterableObject");
		return Clss;
	}

	void SetWaterAmount(int32 InNewWaterAmount);
	void RemoveWaterOnRepeat();
	void OnRep_CurrentWaterAmount();
	void BPIE_UpdateWaterProgress(float InWaterFillPercentage, bool InbIncreasing);
	void BPIE_ShowWaterProgressWidget();
	void BPIE_HideWaterProgressWidget();
	void BeginRemoveWaterOnRepeat();
};

// 0x8 (0x2F8 - 0x2F0)
// Class Palia.WorldPersistGatherable
class AWorldPersistGatherable : public AWorldGatherableBase
{
public:
	struct FGameplayTag                          SavableTag;                                        // 0x2F0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnTemplate, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("WorldPersistGatherable");
		return Clss;
	}

	void WorldPersistGatherableAdded(const struct FGameplayTag& InInTag);
};

// 0x50 (0x80 - 0x30)
// Class Palia.WorldTerrainPlacementManager
class UWorldTerrainPlacementManager : public UGameInstanceSubsystem
{
public:
	TMap<class UClass*, struct FWorldTerrainPlaceables> PlacedInWorld;                                     // 0x30(0x50)(Transient, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("WorldTerrainPlacementManager");
		return Clss;
	}

	void TrackedActorWasDestroyed(class AActor* InActor);
};

}

#ifdef _MSC_VER
	#pragma pack(pop)
#endif
