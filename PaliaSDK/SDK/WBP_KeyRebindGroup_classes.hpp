#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_KeyRebindGroup

#include "Basic.hpp"

#include "KeyRebinding_classes.hpp"
#include "Engine_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WBP_KeyRebindGroup.WBP_KeyRebindGroup_C
// 0x0040 (0x0300 - 0x02C0)
class UWBP_KeyRebindGroup_C final  : public UKeyRebindGroupWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02C0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UVALUI_TextBlock_Styled*                TextBlock_Header_Gamepad;                          // 0x02C8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UVALUI_TextBlock_Styled*                TextBlock_Header_KB;                               // 0x02D0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UVerticalBox*                           VB_Gamepad;                                        // 0x02D8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UVerticalBox*                           VB_InputKeySlots_Gamepad;                          // 0x02E0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UVerticalBox*                           VB_InputKeySlots_KB;                               // 0x02E8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UVerticalBox*                           VB_Keyboard;                                       // 0x02F0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonVisibilitySwitcher*              VisiblitySwitcher;                                 // 0x02F8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)

public:
	void BP_OnWidgetCreated();
	void Destruct();
	void ExecuteUbergraph_WBP_KeyRebindGroup(int32 EntryPoint, int32 Temp_int_Array_Index_Variable, int32 Temp_int_Loop_Counter_Variable, int32 CallFunc_Add_IntInt_ReturnValue, int32 Temp_int_Array_Index_Variable_1, bool K2Node_Event_IsDesignTime, bool K2Node_SwitchEnum_CmpSuccess, class UKeyRebindGroupEntryWidget* CallFunc_Array_Get_Item, class UKeyRebindGroupEntryWidget* CallFunc_Array_Get_Item_1, class UVerticalBoxSlot* CallFunc_AddChildToVerticalBox_ReturnValue, class UVerticalBoxSlot* CallFunc_AddChildToVerticalBox_ReturnValue_1, int32 CallFunc_Array_Length_ReturnValue, int32 CallFunc_Array_Length_ReturnValue_1, int32 Temp_int_Loop_Counter_Variable_1, bool CallFunc_Less_IntInt_ReturnValue, bool CallFunc_Less_IntInt_ReturnValue_1, int32 CallFunc_Add_IntInt_ReturnValue_1);
	void PreConstruct(bool IsDesignTime);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WBP_KeyRebindGroup_C">();
	}
	static class UWBP_KeyRebindGroup_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWBP_KeyRebindGroup_C>();
	}
};
static_assert(alignof(UWBP_KeyRebindGroup_C) == 0x000008, "Wrong alignment on UWBP_KeyRebindGroup_C");
static_assert(sizeof(UWBP_KeyRebindGroup_C) == 0x000300, "Wrong size on UWBP_KeyRebindGroup_C");
static_assert(offsetof(UWBP_KeyRebindGroup_C, UberGraphFrame) == 0x0002C0, "Member 'UWBP_KeyRebindGroup_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWBP_KeyRebindGroup_C, TextBlock_Header_Gamepad) == 0x0002C8, "Member 'UWBP_KeyRebindGroup_C::TextBlock_Header_Gamepad' has a wrong offset!");
static_assert(offsetof(UWBP_KeyRebindGroup_C, TextBlock_Header_KB) == 0x0002D0, "Member 'UWBP_KeyRebindGroup_C::TextBlock_Header_KB' has a wrong offset!");
static_assert(offsetof(UWBP_KeyRebindGroup_C, VB_Gamepad) == 0x0002D8, "Member 'UWBP_KeyRebindGroup_C::VB_Gamepad' has a wrong offset!");
static_assert(offsetof(UWBP_KeyRebindGroup_C, VB_InputKeySlots_Gamepad) == 0x0002E0, "Member 'UWBP_KeyRebindGroup_C::VB_InputKeySlots_Gamepad' has a wrong offset!");
static_assert(offsetof(UWBP_KeyRebindGroup_C, VB_InputKeySlots_KB) == 0x0002E8, "Member 'UWBP_KeyRebindGroup_C::VB_InputKeySlots_KB' has a wrong offset!");
static_assert(offsetof(UWBP_KeyRebindGroup_C, VB_Keyboard) == 0x0002F0, "Member 'UWBP_KeyRebindGroup_C::VB_Keyboard' has a wrong offset!");
static_assert(offsetof(UWBP_KeyRebindGroup_C, VisiblitySwitcher) == 0x0002F8, "Member 'UWBP_KeyRebindGroup_C::VisiblitySwitcher' has a wrong offset!");

}

